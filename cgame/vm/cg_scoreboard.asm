lit
align 4
LABELV $78
byte 4 1065353216
byte 4 1065353216
byte 4 1065353216
byte 4 1065353216
code
proc CG_DrawClientScore 744 44
file "../cg_scoreboard.c"
line 63
;1:// Copyright (C) 1999-2000 Id Software, Inc.
;2://
;3:// cg_scoreboard -- draw the scoreboard on top of the game screen
;4:#include "cg_local.h"
;5:
;6:
;7:#define	SCOREBOARD_X		(0)
;8:
;9:#define SB_HEADER			86
;10:#define SB_TOP				(SB_HEADER+32)
;11:
;12:// Where the status bar starts, so we don't overwrite it
;13:#define SB_STATUSBAR		420
;14:
;15:#define SB_NORMAL_HEIGHT	40
;16:#define SB_INTER_HEIGHT		16 // interleaved height
;17:
;18:#define SB_MAXCLIENTS_NORMAL  ((SB_STATUSBAR - SB_TOP) / SB_NORMAL_HEIGHT)
;19:#define SB_MAXCLIENTS_INTER   ((SB_STATUSBAR - SB_TOP) / SB_INTER_HEIGHT - 1)
;20:
;21:// Used when interleaved
;22:
;23:
;24:
;25:#define SB_LEFT_BOTICON_X	(SCOREBOARD_X+0)
;26:#define SB_LEFT_HEAD_X		(SCOREBOARD_X+32)
;27:#define SB_RIGHT_BOTICON_X	(SCOREBOARD_X+64)
;28:#define SB_RIGHT_HEAD_X		(SCOREBOARD_X+96)
;29:// Normal
;30:#define SB_BOTICON_X		(SCOREBOARD_X+32)
;31:#define SB_HEAD_X			(SCOREBOARD_X+64)
;32://#define SB_HEAD_X			(SCOREBOARD_X+48)
;33:
;34:#define SB_SCORELINE_X		112
;35:
;36:#define SB_RATING_WIDTH	    (6 * BIGCHAR_WIDTH - 2) // width 6
;37:#define SB_SCORE_X			(SB_SCORELINE_X + BIGCHAR_WIDTH - 2) // width 6
;38:#define SB_RATING_X			(SB_SCORELINE_X + 6 * BIGCHAR_WIDTH - 2) // width 6
;39:#define SB_PING_X			(SB_SCORELINE_X + 12 * BIGCHAR_WIDTH + 8 - 2) // width 5
;40:#define SB_TIME_X			(SB_SCORELINE_X + 17 * BIGCHAR_WIDTH + 8 - 2) // width 5
;41:#define SB_NAME_X			(SB_SCORELINE_X + 22 * BIGCHAR_WIDTH - 2) // width 15
;42:
;43:// The new and improved score board
;44://
;45:// In cases where the number of clients is high, the score board heads are interleaved
;46:// here's the layout
;47:
;48://
;49://	0   32   80  112  144   240  320  400   <-- pixel position
;50://  bot head bot head score ping time name
;51://
;52://  wins/losses are drawn on bot icon now
;53:
;54:static qboolean localClient; // true if local client has been displayed
;55:
;56:#define	DISTANCE_TO_HEAD	64
;57:
;58:/*
;59:=================
;60:CG_DrawScoreboard
;61:=================
;62:*/
;63:static void CG_DrawClientScore( int y, score_t *score, float *color, float fade, qboolean largeFormat ) {
line 68
;64:	char	string[128];
;65:	vec3_t	headAngles;
;66:	clientInfo_t	*ci;
;67:	int iconx, headx, x/*, i, length*/;
;68:	vec4_t	drawcolor = {1.0f, 1.0f, 1.0f, 1.0f};
ADDRLP4 4
ADDRGP4 $78
INDIRB
ASGNB 16
line 70
;69:	char	cscore[128], cnet[128], cping[128], ctime[128], cwinloss[16];
;70:	int		multi_weap = 0;
ADDRLP4 684
CNSTI4 0
ASGNI4
line 74
;71://	int		n1, n2;
;72:	int		maxClients;
;73:
;74:	if ( score->client < 0 || score->client >= cgs.maxclients ) {
ADDRLP4 708
ADDRFP4 4
INDIRP4
INDIRI4
ASGNI4
ADDRLP4 708
INDIRI4
CNSTI4 0
LTI4 $82
ADDRLP4 708
INDIRI4
ADDRGP4 cgs+31480
INDIRI4
LTI4 $79
LABELV $82
line 75
;75:		Com_Printf( "Bad score->client: %i\n", score->client );
ADDRGP4 $83
ARGP4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRGP4 Com_Printf
CALLV
pop
line 76
;76:		return;
ADDRGP4 $77
JUMPV
LABELV $79
line 79
;77:	}
;78:
;79:	ci = &cgs.clientinfo[score->client];
ADDRLP4 0
CNSTI4 1776
ADDRFP4 4
INDIRP4
INDIRI4
MULI4
ADDRGP4 cgs+40960
ADDP4
ASGNP4
line 81
;80:
;81:	iconx = SB_BOTICON_X + (SB_RATING_WIDTH / 2);
ADDRLP4 32
CNSTI4 79
ASGNI4
line 82
;82:	headx = SB_HEAD_X + (SB_RATING_WIDTH / 2);
ADDRLP4 420
CNSTI4 111
ASGNI4
line 84
;83:
;84:	if ( cg.numScores > SB_MAXCLIENTS_NORMAL ) {
ADDRGP4 cg+110468
INDIRI4
CNSTI4 7
LEI4 $85
line 85
;85:		maxClients = SB_MAXCLIENTS_INTER;
ADDRLP4 688
CNSTI4 17
ASGNI4
line 86
;86:	} else {
ADDRGP4 $86
JUMPV
LABELV $85
line 87
;87:		maxClients = SB_MAXCLIENTS_NORMAL;
ADDRLP4 688
CNSTI4 7
ASGNI4
line 88
;88:	}
LABELV $86
line 90
;89:
;90:	if ( cg_oldScoreboard.integer & 32 )
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
EQI4 $88
line 91
;91:        largeFormat = qfalse;//Force smallFormat
ADDRFP4 16
CNSTI4 0
ASGNI4
LABELV $88
line 93
;92:
;93:	if ( cg.time > cg.score_time && cg.scoreBoardShowing ) {
ADDRGP4 cg+107604
INDIRI4
ADDRGP4 cg+162064
INDIRI4
LEI4 $91
ADDRGP4 cg+120472
INDIRI4
CNSTI4 0
EQI4 $91
line 94
;94:		qboolean foundWeapon = qfalse;
ADDRLP4 712
CNSTI4 0
ASGNI4
line 95
;95:		qboolean cycleRepeated = qfalse;
ADDRLP4 716
CNSTI4 0
ASGNI4
line 96
;96:		cg.score_time = cg.time + 1000;
ADDRGP4 cg+162064
ADDRGP4 cg+107604
INDIRI4
CNSTI4 1000
ADDI4
ASGNI4
line 98
;97:
;98:		cg.alternateHandicap = !cg.alternateHandicap;//Will alternate the handicap render
ADDRGP4 cg+162068
INDIRI4
CNSTI4 0
NEI4 $101
ADDRLP4 720
CNSTI4 1
ASGNI4
ADDRGP4 $102
JUMPV
LABELV $101
ADDRLP4 720
CNSTI4 0
ASGNI4
LABELV $102
ADDRGP4 cg+162068
ADDRLP4 720
INDIRI4
ASGNI4
ADDRGP4 $104
JUMPV
LABELV $103
line 100
;99:
;100:		while ( !foundWeapon ) {
line 101
;101:			cg.score_weapon++;
ADDRLP4 724
ADDRGP4 cg+162060
ASGNP4
ADDRLP4 724
INDIRP4
ADDRLP4 724
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 103
;102:
;103:			if ( cg.score_weapon == WP_NUM_WEAPONS - 1 ) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 10
NEI4 $107
line 104
;104:				if ( cycleRepeated ) {
ADDRLP4 716
INDIRI4
CNSTI4 0
EQI4 $110
line 105
;105:					cg.score_weapon = 0;
ADDRGP4 cg+162060
CNSTI4 0
ASGNI4
line 106
;106:					break;
ADDRGP4 $105
JUMPV
LABELV $110
line 108
;107:				}
;108:				cg.score_weapon = 1;
ADDRGP4 cg+162060
CNSTI4 1
ASGNI4
line 109
;109:				cycleRepeated = qtrue;
ADDRLP4 716
CNSTI4 1
ASGNI4
line 110
;110:			}
LABELV $107
line 112
;111:
;112:			if ( cgs.picked_up & (1 << (cg.score_weapon - 1)) ) {
ADDRLP4 728
CNSTI4 1
ASGNI4
ADDRGP4 cgs+157816
INDIRI4
ADDRLP4 728
INDIRI4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 728
INDIRI4
SUBI4
LSHI4
BANDI4
CNSTI4 0
EQI4 $114
line 113
;113:				foundWeapon = qtrue;
ADDRLP4 712
CNSTI4 1
ASGNI4
line 114
;114:			}
LABELV $114
line 115
;115:		}
LABELV $104
line 100
ADDRLP4 712
INDIRI4
CNSTI4 0
EQI4 $103
LABELV $105
line 116
;116:	}
LABELV $91
line 119
;117:
;118:	// highlight your position
;119:	if ( score->client == cg.snap->ps.clientNum ) {
ADDRFP4 4
INDIRP4
INDIRI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
NEI4 $118
line 123
;120:		float	hcolor[4];
;121:		int		rank;
;122:
;123:		localClient = qtrue;
ADDRGP4 localClient
CNSTI4 1
ASGNI4
line 125
;124:
;125:		if ( cg.snap->ps.persistant[PERS_TEAM] == TEAM_SPECTATOR
ADDRLP4 732
CNSTI4 3
ASGNI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
ADDRLP4 732
INDIRI4
EQI4 $125
ADDRGP4 cgs+31456
INDIRI4
ADDRLP4 732
INDIRI4
LTI4 $121
LABELV $125
line 126
;126:			|| cgs.gametype >= GT_TEAM ) {
line 127
;127:			rank = -1;
ADDRLP4 728
CNSTI4 -1
ASGNI4
line 128
;128:		} else {
ADDRGP4 $122
JUMPV
LABELV $121
line 129
;129:			rank = cg.snap->ps.persistant[PERS_RANK] & ~RANK_TIED_FLAG;
ADDRLP4 728
ADDRGP4 cg+36
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 -16385
BANDI4
ASGNI4
line 130
;130:		}
LABELV $122
line 131
;131:		if ( rank == 0 ) {
ADDRLP4 728
INDIRI4
CNSTI4 0
NEI4 $127
line 132
;132:			hcolor[0] = 0;
ADDRLP4 712
CNSTF4 0
ASGNF4
line 133
;133:			hcolor[1] = 0;
ADDRLP4 712+4
CNSTF4 0
ASGNF4
line 134
;134:			hcolor[2] = 0.7f;
ADDRLP4 712+8
CNSTF4 1060320051
ASGNF4
line 135
;135:		} else if ( rank == 1 ) {
ADDRGP4 $128
JUMPV
LABELV $127
ADDRLP4 728
INDIRI4
CNSTI4 1
NEI4 $131
line 136
;136:			hcolor[0] = 0.7f;
ADDRLP4 712
CNSTF4 1060320051
ASGNF4
line 137
;137:			hcolor[1] = 0;
ADDRLP4 712+4
CNSTF4 0
ASGNF4
line 138
;138:			hcolor[2] = 0;
ADDRLP4 712+8
CNSTF4 0
ASGNF4
line 139
;139:		} else if ( rank == 2 ) {
ADDRGP4 $132
JUMPV
LABELV $131
ADDRLP4 728
INDIRI4
CNSTI4 2
NEI4 $135
line 140
;140:			hcolor[0] = 0.7f;
ADDRLP4 712
CNSTF4 1060320051
ASGNF4
line 141
;141:			hcolor[1] = 0.7f;
ADDRLP4 712+4
CNSTF4 1060320051
ASGNF4
line 142
;142:			hcolor[2] = 0;
ADDRLP4 712+8
CNSTF4 0
ASGNF4
line 143
;143:		} else {
ADDRGP4 $136
JUMPV
LABELV $135
line 144
;144:			hcolor[0] = 0.7f;
ADDRLP4 712
CNSTF4 1060320051
ASGNF4
line 145
;145:			hcolor[1] = 0.7f;
ADDRLP4 712+4
CNSTF4 1060320051
ASGNF4
line 146
;146:			hcolor[2] = 0.7f;
ADDRLP4 712+8
CNSTF4 1060320051
ASGNF4
line 147
;147:		}
LABELV $136
LABELV $132
LABELV $128
line 149
;148:
;149:		hcolor[3] = fade * 0.7;
ADDRLP4 712+12
CNSTF4 1060320051
ADDRFP4 12
INDIRF4
MULF4
ASGNF4
line 150
;150:		CG_FillRect( SB_SCORELINE_X + BIGCHAR_WIDTH + (SB_RATING_WIDTH / 2) + 26, y,
CNSTF4 1128857600
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1140850688
ARGF4
CNSTF4 1099431936
ARGF4
ADDRLP4 712
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 153
;151:			640 - SB_SCORELINE_X - BIGCHAR_WIDTH, BIGCHAR_HEIGHT+1, hcolor );
;152:
;153:		if ( cg_oldScoreboard.integer & 2 || cg_oldScoreboard.integer & 4 ) {
ADDRLP4 736
CNSTI4 0
ASGNI4
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 2
BANDI4
ADDRLP4 736
INDIRI4
NEI4 $146
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 4
BANDI4
ADDRLP4 736
INDIRI4
EQI4 $142
LABELV $146
line 154
;154:			if ( cg_draw3dIcons.integer ) {
ADDRGP4 cg_draw3dIcons+12
INDIRI4
CNSTI4 0
EQI4 $147
line 155
;155:				if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $150
line 156
;156:					CG_FillRect( 75, y,
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 4
BANDI4
CNSTI4 0
EQI4 $154
ADDRLP4 740
CNSTI4 126
ASGNI4
ADDRGP4 $155
JUMPV
LABELV $154
ADDRLP4 740
CNSTI4 90
ASGNI4
LABELV $155
ADDRLP4 740
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1099431936
ARGF4
ADDRLP4 712
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 159
;157:						cg_oldScoreboard.integer&4?(126):(90),
;158:						BIGCHAR_HEIGHT+1, hcolor );
;159:				} else {
ADDRGP4 $148
JUMPV
LABELV $150
line 160
;160:					CG_FillRect( 105, y,
CNSTF4 1121058816
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 4
BANDI4
CNSTI4 0
EQI4 $158
ADDRLP4 740
CNSTI4 96
ASGNI4
ADDRGP4 $159
JUMPV
LABELV $158
ADDRLP4 740
CNSTI4 70
ASGNI4
LABELV $159
ADDRLP4 740
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1099431936
ARGF4
ADDRLP4 712
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 163
;161:						cg_oldScoreboard.integer&4?(96):(70),
;162:						BIGCHAR_HEIGHT+1, hcolor );
;163:				}
line 164
;164:			} else {
ADDRGP4 $148
JUMPV
LABELV $147
line 165
;165:				if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $160
line 166
;166:					CG_FillRect( 75, y,
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 4
BANDI4
CNSTI4 0
EQI4 $164
ADDRLP4 740
CNSTI4 126
ASGNI4
ADDRGP4 $165
JUMPV
LABELV $164
ADDRLP4 740
CNSTI4 90
ASGNI4
LABELV $165
ADDRLP4 740
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1099431936
ARGF4
ADDRLP4 712
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 169
;167:						cg_oldScoreboard.integer&4?(126):(90),
;168:						BIGCHAR_HEIGHT+1, hcolor );
;169:				} else {
ADDRGP4 $161
JUMPV
LABELV $160
line 170
;170:					CG_FillRect( 105, y+1,//This is different
CNSTF4 1121058816
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 1
ADDI4
CVIF4 4
ARGF4
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 4
BANDI4
CNSTI4 0
EQI4 $168
ADDRLP4 740
CNSTI4 96
ASGNI4
ADDRGP4 $169
JUMPV
LABELV $168
ADDRLP4 740
CNSTI4 70
ASGNI4
LABELV $169
ADDRLP4 740
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1098907648
ARGF4
ADDRLP4 712
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 173
;171:						cg_oldScoreboard.integer&4?(96):(70),
;172:						BIGCHAR_HEIGHT, hcolor );
;173:				}
LABELV $161
line 174
;174:			}
LABELV $148
line 175
;175:		}
LABELV $142
line 176
;176:	}
LABELV $118
line 178
;177:	//& 8 outlines self, & 16 outlines everyone
;178:	if ( (cg_oldScoreboard.integer & 8 && score->client == cg.snap->ps.clientNum) || cg_oldScoreboard.integer & 16) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $176
ADDRFP4 4
INDIRP4
INDIRI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
EQI4 $175
LABELV $176
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
EQI4 $170
LABELV $175
line 179
;179:		if ( cg_draw3dIcons.integer ) {
ADDRGP4 cg_draw3dIcons+12
INDIRI4
CNSTI4 0
EQI4 $177
line 180
;180:			if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $180
line 181
;181:				CG_FillRect( 75, y-1, 1, BIGCHAR_HEIGHT+3, colorWhite );
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 1
SUBI4
CVIF4 4
ARGF4
CNSTF4 1065353216
ARGF4
CNSTF4 1100480512
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 182
;182:				CG_FillRect( 76, y-1, 640-75, 1, colorWhite );
CNSTF4 1117257728
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 1
SUBI4
CVIF4 4
ARGF4
CNSTF4 1141719040
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 183
;183:				CG_FillRect( 76, y+BIGCHAR_HEIGHT+1, 640-75, 1, colorWhite );
CNSTF4 1117257728
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 16
ADDI4
CNSTI4 1
ADDI4
CVIF4 4
ARGF4
CNSTF4 1141719040
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 184
;184:			} else {
ADDRGP4 $178
JUMPV
LABELV $180
line 185
;185:				CG_FillRect( 105, y, 1, BIGCHAR_HEIGHT+1, colorWhite );
CNSTF4 1121058816
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1065353216
ARGF4
CNSTF4 1099431936
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 186
;186:				CG_FillRect( 106, y, 640-104, 1, colorWhite );
CNSTF4 1121189888
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1141243904
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 187
;187:				CG_FillRect( 106, y+BIGCHAR_HEIGHT, 640-104, 1, colorWhite );
CNSTF4 1121189888
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 16
ADDI4
CVIF4 4
ARGF4
CNSTF4 1141243904
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 188
;188:			}
line 189
;189:		} else {
ADDRGP4 $178
JUMPV
LABELV $177
line 190
;190:			if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $182
line 191
;191:				CG_FillRect( 75, y, 1, BIGCHAR_HEIGHT+1, colorWhite );
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1065353216
ARGF4
CNSTF4 1099431936
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 192
;192:				CG_FillRect( 75, y-1, 640-76, 1, colorWhite );
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 1
SUBI4
CVIF4 4
ARGF4
CNSTF4 1141702656
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 193
;193:				CG_FillRect( 75, y+BIGCHAR_HEIGHT+1, 640-76, 1, colorWhite );
CNSTF4 1117126656
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 16
ADDI4
CNSTI4 1
ADDI4
CVIF4 4
ARGF4
CNSTF4 1141702656
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 194
;194:			} else {
ADDRGP4 $183
JUMPV
LABELV $182
line 195
;195:				CG_FillRect( 105, y, 1, BIGCHAR_HEIGHT+1, colorWhite );
CNSTF4 1121058816
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1065353216
ARGF4
CNSTF4 1099431936
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 196
;196:				CG_FillRect( 106, y, 640-104, 1, colorWhite );
CNSTF4 1121189888
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1141243904
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 197
;197:				CG_FillRect( 106, y+BIGCHAR_HEIGHT, 640-104, 1, colorWhite );
CNSTF4 1121189888
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 16
ADDI4
CVIF4 4
ARGF4
CNSTF4 1141243904
ARGF4
CNSTF4 1065353216
ARGF4
ADDRGP4 colorWhite
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 198
;198:			}
LABELV $183
line 199
;199:		}
LABELV $178
line 200
;200:	}
LABELV $170
line 204
;201:
;202:
;203:	// draw the handicap or bot skill marker (unless player has flag)
;204:	if ( cg_draw3dIcons.integer ) {
ADDRGP4 cg_draw3dIcons+12
INDIRI4
CNSTI4 0
EQI4 $184
line 205
;205:		if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $187
line 206
;206:			if ( ci->powerups & ( 1 << PW_NEUTRALFLAG ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 512
BANDI4
CNSTI4 0
EQI4 $189
line 207
;207:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 4, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_FREE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1107296256
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 208
;208:			} else if ( ci->powerups & ( 1 << PW_REDFLAG ) ) {
ADDRGP4 $190
JUMPV
LABELV $189
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 128
BANDI4
CNSTI4 0
EQI4 $191
line 209
;209:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 4, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_RED, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1107296256
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 210
;210:			} else if ( ci->powerups & ( 1 << PW_BLUEFLAG ) ) {
ADDRGP4 $192
JUMPV
LABELV $191
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
EQI4 $193
line 211
;211:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 4, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_BLUE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1107296256
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 212
;212:			} else {
ADDRGP4 $194
JUMPV
LABELV $193
line 213
;213:				if ( ci->handicap < 100 && !ci->botSkill ) {
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $195
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 0
NEI4 $195
line 214
;214:					Com_sprintf( string, sizeof( string ), "%2i", ci->handicap );
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $197
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 215
;215:					if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $198
line 216
;216:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 8, y - 6, string, color, qtrue, qfalse, 8, 12, 0, 0, 0);
ADDRLP4 716
CNSTI4 8
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ADDRLP4 716
INDIRI4
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 6
SUBI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 217
;217:					} else {
ADDRGP4 $199
JUMPV
LABELV $198
line 218
;218:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 2, y, string, color, qtrue, qfalse, 8, 16, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 219
;219:					}
LABELV $199
line 220
;220:				}
LABELV $195
line 223
;221:
;222:				// draw the wins / losses
;223:				if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $201
line 224
;224:					Com_sprintf( cwinloss, sizeof( cwinloss ), "%i/%i", ci->wins, ci->losses );
ADDRLP4 692
ARGP4
CNSTI4 16
ARGI4
ADDRGP4 $204
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 156
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 225
;225:					CG_DrawStringExt( iconx + DISTANCE_TO_HEAD, y + 8, cwinloss, color, qtrue, qfalse, 8, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRLP4 720
CNSTI4 8
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 720
INDIRI4
ADDI4
ARGI4
ADDRLP4 692
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 226
;226:				}
LABELV $201
line 227
;227:			}
LABELV $194
LABELV $192
LABELV $190
line 229
;228:
;229:			if ( ci->botSkill > 0 && ci->botSkill <= 5 ) {
ADDRLP4 712
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ASGNI4
ADDRLP4 712
INDIRI4
CNSTI4 0
LEI4 $205
ADDRLP4 712
INDIRI4
CNSTI4 5
GTI4 $205
line 230
;230:				if ( cg_drawIcons.integer ) {
ADDRGP4 cg_drawIcons+12
INDIRI4
CNSTI4 0
EQI4 $207
line 231
;231:					if ( cg_oldScoreboard.integer & 64 ) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
EQI4 $210
line 232
;232:						CG_DrawPic( 274, y - 8, 32, 32, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133051904
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1107296256
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 233
;233:					} else {
ADDRGP4 $211
JUMPV
LABELV $210
line 234
;234:						CG_DrawPic( SB_SCORELINE_X + SB_RATING_WIDTH + 75, y - 8, 32, 32, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133281280
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1107296256
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 235
;235:					}
LABELV $211
line 236
;236:				}
LABELV $207
line 237
;237:			}
LABELV $205
line 239
;238:
;239:			if ( ci->team != TEAM_SPECTATOR && cg.score_weapon != 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
EQI4 $219
ADDRGP4 cg+162060
INDIRI4
CNSTI4 0
EQI4 $219
line 240
;240:				if (score->hits[cg.score_weapon] > 0) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 4
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CNSTI4 0
LEI4 $222
line 242
;241:					float	percent_calc;
;242:					percent_calc = ((float)score->hits[cg.score_weapon] / (float)(score->shots[cg.score_weapon] + .0001) * 100.01f);
ADDRLP4 720
CNSTI4 2
ASGNI4
ADDRLP4 724
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 716
CNSTF4 1120404767
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CVIF4 4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 24
ADDP4
ADDP4
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ASGNF4
line 243
;243:					Com_sprintf(string, sizeof( string ), "%3.2f", percent_calc);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $227
ARGP4
ADDRLP4 716
INDIRF4
ARGF4
ADDRGP4 Com_sprintf
CALLV
pop
line 244
;244:				} else {
ADDRGP4 $223
JUMPV
LABELV $222
line 245
;245:					Com_sprintf(string, sizeof( string ), "  0.00", 0);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $228
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 246
;246:				}
LABELV $223
line 247
;247:				CG_DrawPic( iconx + DISTANCE_TO_HEAD - 18, y, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, cg_weapons[cg.score_weapon].weaponIcon );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 18
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
CNSTI4 136
ADDRGP4 cg+162060
INDIRI4
MULI4
ADDRGP4 cg_weapons+68
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 248
;248:				CG_DrawStringExt( iconx - 2, y, string, colorWhite, qfalse, qfalse, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 32
INDIRI4
CNSTI4 2
SUBI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 424
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 249
;249:			}
LABELV $219
line 252
;250:
;251:			// draw the face
;252:			VectorClear( headAngles );
ADDRLP4 716
CNSTF4 0
ASGNF4
ADDRLP4 20+8
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20+4
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20
ADDRLP4 716
INDIRF4
ASGNF4
line 253
;253:			headAngles[YAW] = 180;
ADDRLP4 20+4
CNSTF4 1127481344
ASGNF4
line 254
;254:			CG_DrawHead( headx + 56, y - ( ICON_SIZE - BIGCHAR_HEIGHT - 16 ) / 2, ICON_SIZE - 16, ICON_SIZE - 16, score->client, headAngles );
ADDRLP4 420
INDIRI4
CNSTI4 56
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1107296256
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 255
;255:		} else {
ADDRGP4 $185
JUMPV
LABELV $187
line 257
;256:			//Draw 3dIcons + smallFormat
;257:			if ( ci->powerups & ( 1 << PW_NEUTRALFLAG ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 512
BANDI4
CNSTI4 0
EQI4 $234
line 258
;258:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 16, y, 16, 16, TEAM_FREE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 16
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 259
;259:			} else if ( ci->powerups & ( 1 << PW_REDFLAG ) ) {
ADDRGP4 $235
JUMPV
LABELV $234
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 128
BANDI4
CNSTI4 0
EQI4 $236
line 260
;260:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 16, y, 16, 16, TEAM_RED, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 16
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 261
;261:			} else if ( ci->powerups & ( 1 << PW_BLUEFLAG ) ) {
ADDRGP4 $237
JUMPV
LABELV $236
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
EQI4 $238
line 262
;262:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 16, y, 16, 16, TEAM_BLUE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 16
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 263
;263:			} else {
ADDRGP4 $239
JUMPV
LABELV $238
line 264
;264:				if ( ci->handicap < 100 && !ci->botSkill ) {
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $240
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 0
NEI4 $240
line 265
;265:					Com_sprintf( string, sizeof( string ), "%2i", ci->handicap );
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $197
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 266
;266:					if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $242
line 267
;267:						if ( cg.alternateHandicap ) {
ADDRGP4 cg+162068
INDIRI4
CNSTI4 0
EQI4 $243
line 269
;268:							//We're going to draw this in the same place as the tournament round/score
;269:							CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 22, y + 2, string, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 22
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 270
;270:						}
line 271
;271:					} else {
ADDRGP4 $243
JUMPV
LABELV $242
line 272
;272:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 18, y + 2, string, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 18
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 273
;273:					}
LABELV $243
line 274
;274:				}
LABELV $240
line 277
;275:
;276:				// draw the wins / losses
;277:				if ( cgs.gametype == GT_TOURNAMENT && (ci->botSkill || (!cg.alternateHandicap  && ci->handicap < 100) ) ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $248
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ADDRLP4 720
INDIRI4
NEI4 $252
ADDRGP4 cg+162068
INDIRI4
ADDRLP4 720
INDIRI4
NEI4 $248
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $248
LABELV $252
line 278
;278:					Com_sprintf( cwinloss, sizeof( cwinloss ), "%i/%i", ci->wins, ci->losses );
ADDRLP4 692
ARGP4
CNSTI4 16
ARGI4
ADDRGP4 $204
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 156
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 279
;279:					CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 16, y + 2, cwinloss, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 16
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 692
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 280
;280:				}
LABELV $248
line 281
;281:			}
LABELV $239
LABELV $237
LABELV $235
line 283
;282:
;283:			if ( ci->botSkill > 0 && ci->botSkill <= 5 ) {
ADDRLP4 712
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ASGNI4
ADDRLP4 712
INDIRI4
CNSTI4 0
LEI4 $253
ADDRLP4 712
INDIRI4
CNSTI4 5
GTI4 $253
line 284
;284:				if ( cg_drawIcons.integer ) {
ADDRGP4 cg_drawIcons+12
INDIRI4
CNSTI4 0
EQI4 $255
line 285
;285:					if ( cg_oldScoreboard.integer & 64 ) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
EQI4 $258
line 286
;286:						CG_DrawPic( 282, y, 16, 16, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133314048
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 287
;287:					} else {
ADDRGP4 $259
JUMPV
LABELV $258
line 288
;288:						CG_DrawPic( SB_SCORELINE_X + SB_RATING_WIDTH + 90, y, 16, 16, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133772800
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 289
;289:					}
LABELV $259
line 290
;290:				}
LABELV $255
line 291
;291:			}
LABELV $253
line 293
;292:
;293:			if ( ci->team != TEAM_SPECTATOR && cg.score_weapon != 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
EQI4 $267
ADDRGP4 cg+162060
INDIRI4
CNSTI4 0
EQI4 $267
line 294
;294:				if (score->hits[cg.score_weapon] > 0) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 4
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CNSTI4 0
LEI4 $270
line 296
;295:					float	percent_calc;
;296:					percent_calc = ((float)score->hits[cg.score_weapon] / (float)(score->shots[cg.score_weapon] + .0001) * 100.01f);
ADDRLP4 720
CNSTI4 2
ASGNI4
ADDRLP4 724
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 716
CNSTF4 1120404767
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CVIF4 4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 24
ADDP4
ADDP4
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ASGNF4
line 297
;297:					Com_sprintf(string, sizeof( string ), "%3.2f", percent_calc);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $227
ARGP4
ADDRLP4 716
INDIRF4
ARGF4
ADDRGP4 Com_sprintf
CALLV
pop
line 298
;298:				} else {
ADDRGP4 $271
JUMPV
LABELV $270
line 299
;299:					Com_sprintf(string, sizeof( string ), "  0.00", 0);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $228
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 300
;300:				}
LABELV $271
line 302
;301:
;302:				CG_DrawPic( iconx + DISTANCE_TO_HEAD + 2, y + 2, 14, 14, cg_weapons[cg.score_weapon].weaponIcon );
ADDRLP4 716
CNSTI4 2
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ADDRLP4 716
INDIRI4
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
ADDRLP4 716
INDIRI4
ADDI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1096810496
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
CNSTI4 136
ADDRGP4 cg+162060
INDIRI4
MULI4
ADDRGP4 cg_weapons+68
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 303
;303:				CG_DrawStringExt( iconx + 30, y + 2, string, colorWhite, qfalse, qfalse, 6, 14, 0, 0, 0 );
ADDRLP4 32
INDIRI4
CNSTI4 30
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 304
;304:			}
LABELV $267
line 307
;305:
;306:			// draw the face
;307:			VectorClear( headAngles );
ADDRLP4 716
CNSTF4 0
ASGNF4
ADDRLP4 20+8
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20+4
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20
ADDRLP4 716
INDIRF4
ASGNF4
line 308
;308:			headAngles[YAW] = 180;
ADDRLP4 20+4
CNSTF4 1127481344
ASGNF4
line 309
;309:			CG_DrawHead( headx + 68, y, 16, 16, score->client, headAngles );
ADDRLP4 420
INDIRI4
CNSTI4 68
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1098907648
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 310
;310:		}
line 311
;311:	} else {
ADDRGP4 $185
JUMPV
LABELV $184
line 313
;312:		//because the 2d icons take up more space, we'll have to use different positions
;313:		if ( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $280
line 314
;314:			if ( ci->powerups & ( 1 << PW_NEUTRALFLAG ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 512
BANDI4
CNSTI4 0
EQI4 $282
line 315
;315:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 2, y - 4, 24, 24, TEAM_FREE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 2
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1103101952
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 316
;316:			} else if ( ci->powerups & ( 1 << PW_REDFLAG ) ) {
ADDRGP4 $283
JUMPV
LABELV $282
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 128
BANDI4
CNSTI4 0
EQI4 $284
line 317
;317:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 2, y - 4, 24, 24, TEAM_RED, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 2
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1103101952
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 318
;318:			} else if ( ci->powerups & ( 1 << PW_BLUEFLAG ) ) {
ADDRGP4 $285
JUMPV
LABELV $284
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
EQI4 $286
line 319
;319:				CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD - 2, y - 4, 24, 24, TEAM_BLUE, qfalse );
ADDRLP4 712
CNSTI4 2
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ADDRLP4 712
INDIRI4
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 4
SUBI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1103101952
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 712
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 320
;320:			} else {
ADDRGP4 $287
JUMPV
LABELV $286
line 321
;321:				if ( ci->handicap < 100 && !ci->botSkill ) {
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $288
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 0
NEI4 $288
line 322
;322:					Com_sprintf( string, sizeof( string ), "%2i", ci->handicap );
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $197
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 323
;323:					if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $290
line 324
;324:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 8, y - 6, string, color, qtrue, qfalse, 8, 12, 0, 0, 0);
ADDRLP4 716
CNSTI4 8
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ADDRLP4 716
INDIRI4
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 6
SUBI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 325
;325:					} else {
ADDRGP4 $291
JUMPV
LABELV $290
line 326
;326:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 2, y, string, color, qtrue, qfalse, 8, 16, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 327
;327:					}
LABELV $291
line 328
;328:				}
LABELV $288
line 331
;329:
;330:				// draw the wins / losses
;331:				if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $293
line 332
;332:					Com_sprintf( cwinloss, sizeof( cwinloss ), "%i/%i", ci->wins, ci->losses );
ADDRLP4 692
ARGP4
CNSTI4 16
ARGI4
ADDRGP4 $204
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 156
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 333
;333:					CG_DrawStringExt( iconx + DISTANCE_TO_HEAD, y + 8, cwinloss, color, qtrue, qfalse, 8, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRLP4 720
CNSTI4 8
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 720
INDIRI4
ADDI4
ARGI4
ADDRLP4 692
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 334
;334:				}
LABELV $293
line 335
;335:			}
LABELV $287
LABELV $285
LABELV $283
line 337
;336:
;337:			if ( ci->botSkill > 0 && ci->botSkill <= 5 ) {
ADDRLP4 712
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ASGNI4
ADDRLP4 712
INDIRI4
CNSTI4 0
LEI4 $296
ADDRLP4 712
INDIRI4
CNSTI4 5
GTI4 $296
line 338
;338:				if ( cg_drawIcons.integer ) {
ADDRGP4 cg_drawIcons+12
INDIRI4
CNSTI4 0
EQI4 $298
line 339
;339:					if ( cg_oldScoreboard.integer & 64 ) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
EQI4 $301
line 340
;340:						CG_DrawPic( 274, y - 8, 32, 32, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133051904
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1107296256
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 341
;341:					} else {
ADDRGP4 $302
JUMPV
LABELV $301
line 342
;342:						CG_DrawPic( SB_SCORELINE_X + SB_RATING_WIDTH + 75, y - 8, 32, 32, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133281280
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1107296256
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 343
;343:					}
LABELV $302
line 344
;344:				}
LABELV $298
line 345
;345:			}
LABELV $296
line 347
;346:
;347:			if ( ci->team != TEAM_SPECTATOR && cg.score_weapon != 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
EQI4 $310
ADDRGP4 cg+162060
INDIRI4
CNSTI4 0
EQI4 $310
line 348
;348:				if (score->hits[cg.score_weapon] > 0) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 4
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CNSTI4 0
LEI4 $313
line 350
;349:					float	percent_calc;
;350:					percent_calc = ((float)score->hits[cg.score_weapon] / (float)(score->shots[cg.score_weapon] + .0001) * 100.01f);
ADDRLP4 720
CNSTI4 2
ASGNI4
ADDRLP4 724
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 716
CNSTF4 1120404767
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CVIF4 4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 24
ADDP4
ADDP4
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ASGNF4
line 351
;351:					Com_sprintf(string, sizeof( string ), "%3.2f", percent_calc);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $227
ARGP4
ADDRLP4 716
INDIRF4
ARGF4
ADDRGP4 Com_sprintf
CALLV
pop
line 352
;352:				} else {
ADDRGP4 $314
JUMPV
LABELV $313
line 353
;353:					Com_sprintf(string, sizeof( string ), "  0.00", 0);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $228
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 354
;354:				}
LABELV $314
line 355
;355:				CG_DrawPic( iconx + DISTANCE_TO_HEAD - 18, y, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, cg_weapons[cg.score_weapon].weaponIcon );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 18
SUBI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
CNSTI4 136
ADDRGP4 cg+162060
INDIRI4
MULI4
ADDRGP4 cg_weapons+68
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 356
;356:				CG_DrawStringExt( iconx - 2, y, string, colorWhite, qfalse, qfalse, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 32
INDIRI4
CNSTI4 2
SUBI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 424
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 357
;357:			}
LABELV $310
line 360
;358:
;359:			// draw the face
;360:			VectorClear( headAngles );
ADDRLP4 716
CNSTF4 0
ASGNF4
ADDRLP4 20+8
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20+4
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20
ADDRLP4 716
INDIRF4
ASGNF4
line 361
;361:			headAngles[YAW] = 180;
ADDRLP4 20+4
CNSTF4 1127481344
ASGNF4
line 362
;362:			CG_DrawHead( headx + 56, y - ( ICON_SIZE - BIGCHAR_HEIGHT - 16 ) / 2, ICON_SIZE - 16, ICON_SIZE - 16, score->client, headAngles );
ADDRLP4 420
INDIRI4
CNSTI4 56
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1107296256
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 363
;363:		} else {
ADDRGP4 $281
JUMPV
LABELV $280
line 365
;364:			//Draw 2dIcons + smallFormat
;365:			if ( ci->powerups & ( 1 << PW_NEUTRALFLAG ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 512
BANDI4
CNSTI4 0
EQI4 $323
line 366
;366:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 12, y, 16, 16, TEAM_FREE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 12
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 367
;367:			} else if ( ci->powerups & ( 1 << PW_REDFLAG ) ) {
ADDRGP4 $324
JUMPV
LABELV $323
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 128
BANDI4
CNSTI4 0
EQI4 $325
line 368
;368:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 12, y, 16, 16, TEAM_RED, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 12
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 369
;369:			} else if ( ci->powerups & ( 1 << PW_BLUEFLAG ) ) {
ADDRGP4 $326
JUMPV
LABELV $325
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
EQI4 $327
line 370
;370:					CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD + 12, y, 16, 16, TEAM_BLUE, qfalse );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 12
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 712
CNSTF4 1098907648
ASGNF4
ADDRLP4 712
INDIRF4
ARGF4
ADDRLP4 712
INDIRF4
ARGF4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 371
;371:			} else {
ADDRGP4 $328
JUMPV
LABELV $327
line 372
;372:				if ( ci->handicap < 100 && !ci->botSkill ) {
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $329
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 0
NEI4 $329
line 373
;373:					Com_sprintf( string, sizeof( string ), "%2i", ci->handicap );
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $197
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 374
;374:					if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $331
line 375
;375:						if ( cg.alternateHandicap ) {
ADDRGP4 cg+162068
INDIRI4
CNSTI4 0
EQI4 $332
line 377
;376:							//We're going to draw this in the same place as the tournament round/score
;377:							CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 22, y + 2, string, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 22
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 378
;378:						}
line 379
;379:					} else {
ADDRGP4 $332
JUMPV
LABELV $331
line 380
;380:						CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 18, y + 2, string, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 18
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 381
;381:					}
LABELV $332
line 382
;382:				}
LABELV $329
line 385
;383:
;384:				// draw the wins / losses
;385:				if ( cgs.gametype == GT_TOURNAMENT && (ci->botSkill || (!cg.alternateHandicap  && ci->handicap < 100) ) ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $337
ADDRLP4 720
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ADDRLP4 720
INDIRI4
NEI4 $341
ADDRGP4 cg+162068
INDIRI4
ADDRLP4 720
INDIRI4
NEI4 $337
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $337
LABELV $341
line 386
;386:					Com_sprintf( cwinloss, sizeof( cwinloss ), "%i/%i", ci->wins, ci->losses );
ADDRLP4 692
ARGP4
CNSTI4 16
ARGI4
ADDRGP4 $204
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 156
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 387
;387:					CG_DrawStringExt( iconx + DISTANCE_TO_HEAD + 16, y + 2, cwinloss, color, qtrue, qfalse, 6, 14, 0, 0, 0);
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
CNSTI4 16
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 692
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 388
;388:				}
LABELV $337
line 389
;389:			}
LABELV $328
LABELV $326
LABELV $324
line 391
;390:
;391:			if ( ci->botSkill > 0 && ci->botSkill <= 5 ) {
ADDRLP4 712
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ASGNI4
ADDRLP4 712
INDIRI4
CNSTI4 0
LEI4 $342
ADDRLP4 712
INDIRI4
CNSTI4 5
GTI4 $342
line 392
;392:				if ( cg_drawIcons.integer ) {
ADDRGP4 cg_drawIcons+12
INDIRI4
CNSTI4 0
EQI4 $344
line 393
;393:					if ( cg_oldScoreboard.integer & 64 ) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
EQI4 $347
line 394
;394:						CG_DrawPic( 282, y, 16, 16, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133314048
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 395
;395:					} else {
ADDRGP4 $348
JUMPV
LABELV $347
line 396
;396:						CG_DrawPic( SB_SCORELINE_X + SB_RATING_WIDTH + 90, y, 16, 16, cgs.media.botSkillShaders[ ci->botSkill - 1 ] );
CNSTF4 1133772800
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 716
CNSTF4 1098907648
ASGNF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 716
INDIRF4
ARGF4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 cgs+156680+404-4
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 397
;397:					}
LABELV $348
line 398
;398:				}
LABELV $344
line 399
;399:			}
LABELV $342
line 401
;400:
;401:			if ( ci->team != TEAM_SPECTATOR && cg.score_weapon != 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
EQI4 $356
ADDRGP4 cg+162060
INDIRI4
CNSTI4 0
EQI4 $356
line 402
;402:				if (score->hits[cg.score_weapon] > 0) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 4
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CNSTI4 0
LEI4 $359
line 404
;403:					float	percent_calc;
;404:					percent_calc = ((float)score->hits[cg.score_weapon] / (float)(score->shots[cg.score_weapon] + .0001) * 100.01f);
ADDRLP4 720
CNSTI4 2
ASGNI4
ADDRLP4 724
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 716
CNSTF4 1120404767
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 68
ADDP4
ADDP4
INDIRI4
CVIF4 4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 720
INDIRI4
LSHI4
ADDRLP4 724
INDIRP4
CNSTI4 24
ADDP4
ADDP4
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ASGNF4
line 405
;405:					Com_sprintf(string, sizeof( string ), "%3.2f", percent_calc);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $227
ARGP4
ADDRLP4 716
INDIRF4
ARGF4
ADDRGP4 Com_sprintf
CALLV
pop
line 406
;406:				} else {
ADDRGP4 $360
JUMPV
LABELV $359
line 407
;407:					Com_sprintf(string, sizeof( string ), "  0.00", 0);
ADDRLP4 424
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $228
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 408
;408:				}
LABELV $360
line 410
;409:
;410:				CG_DrawPic( iconx + DISTANCE_TO_HEAD + 2, y + 2, 14, 14, cg_weapons[cg.score_weapon].weaponIcon );
ADDRLP4 716
CNSTI4 2
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ADDRLP4 716
INDIRI4
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
ADDRLP4 716
INDIRI4
ADDI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1096810496
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
CNSTI4 136
ADDRGP4 cg+162060
INDIRI4
MULI4
ADDRGP4 cg_weapons+68
ADDP4
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 411
;411:				CG_DrawStringExt( iconx + 30, y + 2, string, colorWhite, qfalse, qfalse, 6, 14, 0, 0, 0 );
ADDRLP4 32
INDIRI4
CNSTI4 30
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 424
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
CNSTI4 6
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRLP4 724
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 412
;412:			}
LABELV $356
line 415
;413:
;414:			// draw the face
;415:			VectorClear( headAngles );
ADDRLP4 716
CNSTF4 0
ASGNF4
ADDRLP4 20+8
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20+4
ADDRLP4 716
INDIRF4
ASGNF4
ADDRLP4 20
ADDRLP4 716
INDIRF4
ASGNF4
line 416
;416:			headAngles[YAW] = 180;
ADDRLP4 20+4
CNSTF4 1127481344
ASGNF4
line 417
;417:			CG_DrawHead( headx + 68, y, 16, 16, score->client, headAngles );
ADDRLP4 420
INDIRI4
CNSTI4 68
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 720
CNSTF4 1098907648
ASGNF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRLP4 720
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 418
;418:		}
LABELV $281
line 419
;419:	}
LABELV $185
line 432
;420:
;421:#ifdef MISSIONPACK
;422:	// draw the team task
;423:	if ( ci->teamTask != TEAMTASK_NONE ) {
;424:		if ( ci->teamTask == TEAMTASK_OFFENSE ) {
;425:			CG_DrawPic( headx + 48, y, 16, 16, cgs.media.assaultShader );
;426:		} else if ( ci->teamTask == TEAMTASK_DEFENSE ) {
;427:			CG_DrawPic( headx + 48, y, 16, 16, cgs.media.defendShader );
;428:		}
;429:	}
;430:#endif
;431:
;432:	if ( score->ping <= 5) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 5
GTI4 $369
line 433
;433:		drawcolor[0] = 0.0;
ADDRLP4 4
CNSTF4 0
ASGNF4
line 434
;434:		drawcolor[1] = 1.0;
ADDRLP4 4+4
CNSTF4 1065353216
ASGNF4
line 435
;435:		drawcolor[2] = 1.0;
ADDRLP4 4+8
CNSTF4 1065353216
ASGNF4
line 436
;436:	} else if ( score->ping <= 45 ) {
ADDRGP4 $370
JUMPV
LABELV $369
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 45
GTI4 $373
line 437
;437:		drawcolor[0] = 0.0;
ADDRLP4 4
CNSTF4 0
ASGNF4
line 438
;438:		drawcolor[1] = 1.0;
ADDRLP4 4+4
CNSTF4 1065353216
ASGNF4
line 439
;439:		drawcolor[2] = (1.00 - (float)(score->ping/45));
ADDRLP4 4+8
CNSTF4 1065353216
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 45
DIVI4
CVIF4 4
SUBF4
ASGNF4
line 440
;440:	} else if ( score->ping <= 125 ) {
ADDRGP4 $374
JUMPV
LABELV $373
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 125
GTI4 $377
line 441
;441:		drawcolor[0] = (float)(score->ping/125);
ADDRLP4 4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 125
DIVI4
CVIF4 4
ASGNF4
line 442
;442:		drawcolor[1] = 1.0;
ADDRLP4 4+4
CNSTF4 1065353216
ASGNF4
line 443
;443:		drawcolor[2] = 0.0;
ADDRLP4 4+8
CNSTF4 0
ASGNF4
line 444
;444:	} else if ( score->ping <= 170 ) {
ADDRGP4 $378
JUMPV
LABELV $377
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 170
GTI4 $381
line 445
;445:		drawcolor[0] = 1.0;
ADDRLP4 4
CNSTF4 1065353216
ASGNF4
line 446
;446:		drawcolor[1] = (1.00 - (float)(score->ping/170));
ADDRLP4 4+4
CNSTF4 1065353216
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 170
DIVI4
CVIF4 4
SUBF4
ASGNF4
line 447
;447:		drawcolor[2] = 0.0;
ADDRLP4 4+8
CNSTF4 0
ASGNF4
line 448
;448:	} else {
ADDRGP4 $382
JUMPV
LABELV $381
line 449
;449:		drawcolor[0] = 1.0;
ADDRLP4 4
CNSTF4 1065353216
ASGNF4
line 450
;450:		drawcolor[1] = 0.0;
ADDRLP4 4+4
CNSTF4 0
ASGNF4
line 451
;451:		drawcolor[2] = 0.0;
ADDRLP4 4+8
CNSTF4 0
ASGNF4
line 452
;452:	}
LABELV $382
LABELV $378
LABELV $374
LABELV $370
line 454
;453:
;454:	drawcolor[3] = 1.0;
ADDRLP4 4+12
CNSTF4 1065353216
ASGNF4
line 457
;455:
;456:
;457:    if ( score->ping == -1 ) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 -1
NEI4 $388
line 458
;458:		x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2) + BIGCHAR_WIDTH + 8;
ADDRLP4 552
CNSTI4 183
ASGNI4
line 459
;459:		Com_sprintf(cscore, sizeof(cscore), "Connecting", 0);
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $390
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 460
;460:		Com_sprintf(cnet, sizeof(cnet), "", 0);
ADDRLP4 556
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 461
;461:		Com_sprintf(cping, sizeof(cping), "", 0);
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 462
;462:		Com_sprintf(ctime, sizeof(ctime), "", 0);
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 464
;463:        //FIXME: This isn't aligned properly - was 18
;464:        CG_DrawStringExt( x + 12, y, cscore, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 552
INDIRI4
CNSTI4 12
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 36
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 712
CNSTI4 0
ASGNI4
ADDRLP4 712
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 16
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 465
;465:	} else {
ADDRGP4 $389
JUMPV
LABELV $388
line 467
;466:		//Can't 'buffer' for center aligning
;467:		if ( score->specnum != 0 && cg_oldScoreboard.integer & 1) { //Lucron: specspy
ADDRLP4 712
CNSTI4 0
ASGNI4
ADDRFP4 4
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ADDRLP4 712
INDIRI4
EQI4 $392
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 1
BANDI4
ADDRLP4 712
INDIRI4
EQI4 $392
line 468
;468:			Com_sprintf(cscore, sizeof(cscore), "%.15s ^1%c", cgs.clientinfo[ score->specnum - 1 ].name, (char)K_BACKSPACE);//This doesn't line up quite right, still.
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $395
ARGP4
CNSTI4 1776
ADDRFP4 4
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
MULI4
ADDRGP4 cgs+40960-1776+4
ADDP4
ARGP4
CNSTI4 127
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 469
;469:			Com_sprintf(cping, sizeof(cping), ""); 
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 470
;470:			Com_sprintf(ctime, sizeof(ctime), "");
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 471
;471:			CG_DrawStringExt( ((SB_SCORELINE_X + (SB_RATING_WIDTH / 2)) + 91), y + 4, cscore, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH - 6, BIGCHAR_HEIGHT - 6, 0, 50, -1 );
CNSTI4 250
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 4
ADDI4
ARGI4
ADDRLP4 36
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 720
CNSTI4 10
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 50
ARGI4
CNSTI4 -1
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 472
;472:		} else if ( cg_oldScoreboard.integer & 64 ) {
ADDRGP4 $393
JUMPV
LABELV $392
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 64
BANDI4
CNSTI4 0
EQI4 $399
line 473
;473:			if ( ci->team == TEAM_SPECTATOR ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
NEI4 $402
line 474
;474:				x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2) + BIGCHAR_WIDTH;
ADDRLP4 552
CNSTI4 175
ASGNI4
line 475
;475:				Com_sprintf(cscore, sizeof(cscore), "SPEC", 0);//Almost shouldn't center align this
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $404
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 476
;476:				Com_sprintf(cping, sizeof(cping), "%i", score->ping);
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 477
;477:				Com_sprintf(ctime, sizeof(ctime), "%i", score->time);
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 478
;478:			} else {
ADDRGP4 $403
JUMPV
LABELV $402
line 479
;479:				x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2);
ADDRLP4 552
CNSTI4 159
ASGNI4
line 480
;480:				Com_sprintf(cscore, sizeof(cscore), "%i", score->score);
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 481
;481:				Com_sprintf(cnet, sizeof(cnet), "%i", score->deaths);
ADDRLP4 556
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 112
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 482
;482:				Com_sprintf(cping, sizeof(cping), "%i", score->ping);
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 483
;483:				Com_sprintf(ctime, sizeof(ctime), "%i", score->time);
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 484
;484:			}
LABELV $403
line 486
;485:			//Center align numbers
;486:			CG_DrawStringExt( 202, y, cscore, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 50, -1 );
CNSTI4 202
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 36
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 720
CNSTI4 16
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 50
ARGI4
CNSTI4 -1
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 487
;487:			if ( score->ping != -1 ) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 -1
EQI4 $400
line 488
;488:				if ( !ci->botSkill || !cg_drawIcons.integer) {
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ADDRLP4 724
INDIRI4
EQI4 $411
ADDRGP4 cg_drawIcons+12
INDIRI4
ADDRLP4 724
INDIRI4
NEI4 $408
LABELV $411
line 489
;489:					CG_DrawStringExt( 270, y, cping, drawcolor, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 40, -1 );
CNSTI4 270
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 292
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 732
CNSTI4 16
ASGNI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 40
ARGI4
CNSTI4 -1
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 490
;490:				}
LABELV $408
line 491
;491:				CG_DrawStringExt( 325, y, ctime, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 40, -1 );
CNSTI4 325
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 164
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 732
CNSTI4 16
ASGNI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 40
ARGI4
CNSTI4 -1
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 492
;492:			}
line 493
;493:		} else {
ADDRGP4 $400
JUMPV
LABELV $399
line 494
;494:			if ( ci->team == TEAM_SPECTATOR ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 3
NEI4 $412
line 495
;495:				x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2) + BIGCHAR_WIDTH;
ADDRLP4 552
CNSTI4 175
ASGNI4
line 496
;496:				Com_sprintf(cscore, sizeof(cscore), "SPEC", 0);//This doesn't line up quite right, still.
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $404
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 497
;497:				Com_sprintf(cping, sizeof(cping), "%4i", score->ping);
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 498
;498:				Com_sprintf(ctime, sizeof(ctime), "%4i", score->time);
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 499
;499:			} else {
ADDRGP4 $413
JUMPV
LABELV $412
line 500
;500:				x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2);
ADDRLP4 552
CNSTI4 159
ASGNI4
line 501
;501:				Com_sprintf(cscore, sizeof(cscore), "%5i", score->score);
ADDRLP4 36
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $415
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 502
;502:				Com_sprintf(cnet, sizeof(cnet), "%4i", score->deaths);
ADDRLP4 556
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 112
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 503
;503:				Com_sprintf(cping, sizeof(cping), "%4i", score->ping);
ADDRLP4 292
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 504
;504:				Com_sprintf(ctime, sizeof(ctime), "%4i", score->time);
ADDRLP4 164
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 505
;505:			}
LABELV $413
line 506
;506:			CG_DrawStringExt( x + 18, y, cscore, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 552
INDIRI4
CNSTI4 18
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 36
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 716
CNSTI4 0
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 720
CNSTI4 16
ASGNI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 720
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 507
;507:			if ( !ci->botSkill || !cg_drawIcons.integer) {
ADDRLP4 724
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
ADDRLP4 724
INDIRI4
EQI4 $419
ADDRGP4 cg_drawIcons+12
INDIRI4
ADDRLP4 724
INDIRI4
NEI4 $416
LABELV $419
line 508
;508:				CG_DrawStringExt( ((SB_SCORELINE_X + (SB_RATING_WIDTH / 2)) + 91), y, cping, drawcolor, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 0, 0 );
CNSTI4 250
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 292
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 732
CNSTI4 16
ASGNI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 509
;509:			}
LABELV $416
line 510
;510:			CG_DrawStringExt( ((SB_SCORELINE_X + (SB_RATING_WIDTH / 2)) + 145), y, ctime, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 0, 0 );
CNSTI4 304
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 164
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 728
CNSTI4 0
ASGNI4
ADDRLP4 728
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 732
CNSTI4 16
ASGNI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 732
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRLP4 728
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 511
;511:		}
LABELV $400
LABELV $393
line 512
;512:	}
LABELV $389
line 513
;513:	CG_DrawStringExt( ((SB_SCORELINE_X + (SB_RATING_WIDTH / 2)) + 217), y, ci->name, colorWhite, qfalse, qtrue, BIGCHAR_WIDTH, BIGCHAR_HEIGHT, 0, 0, 0 );
CNSTI4 376
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 712
CNSTI4 0
ASGNI4
ADDRLP4 712
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 716
CNSTI4 16
ASGNI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 716
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRLP4 712
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 517
;514:
;515:
;516:	// add the "ready" marker for intermission exiting
;517:	if ( cg.snap->ps.stats[ STAT_CLIENTS_READY ] & ( 1 << score->client ) ) {
ADDRGP4 cg+36
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
CNSTI4 1
ADDRFP4 4
INDIRP4
INDIRI4
LSHI4
BANDI4
CNSTI4 0
EQI4 $420
line 519
;518://freeze
;519:		if ( !Q_Isfreeze( score->client ) )
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 720
ADDRGP4 Q_Isfreeze
CALLI4
ASGNI4
ADDRLP4 720
INDIRI4
CNSTI4 0
NEI4 $423
line 522
;520://freeze
;521:		//Replace this.
;522:		CG_DrawBigStringColor( iconx + DISTANCE_TO_HEAD, y, "READY", color );
ADDRLP4 32
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRGP4 $425
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
ADDRGP4 CG_DrawBigStringColor
CALLV
pop
LABELV $423
line 523
;523:	}
LABELV $420
line 524
;524:}
LABELV $77
endproc CG_DrawClientScore 744 44
lit
align 4
LABELV $427
byte 4 1065353216
byte 4 1065353216
byte 4 1065353216
byte 4 1065353216
align 4
LABELV $428
byte 4 1065353216
byte 4 1039516303
byte 4 1039516303
byte 4 1045220557
align 4
LABELV $429
byte 4 1039516303
byte 4 1039516303
byte 4 1065353216
byte 4 1045220557
code
proc CG_NewDrawClientScore 644 44
line 531
;525:
;526:/*
;527:=================
;528:CG_NewDrawClientScore
;529:=================
;530:*/
;531:static void CG_NewDrawClientScore( int y, score_t *score, float *color, float fade, qboolean largeFormat ) {
line 536
;532://	char	string[128];
;533:	vec3_t	headAngles;
;534:	clientInfo_t	*ci;
;535:	int iconx, headx, x/*, i, length*/;
;536:	vec4_t	drawcolor = {1.0f, 1.0f, 1.0f, 1.0f};
ADDRLP4 4
ADDRGP4 $427
INDIRB
ASGNB 16
line 538
;537:	char	cscore[128], cnet[128], cping[128], ctime[128], cwinloss[16];
;538:	int		multi_weap = 0;
ADDRLP4 556
CNSTI4 0
ASGNI4
line 541
;539://	int		n1, n2;
;540:	int		maxClients;
;541:	vec4_t	sred = { 1.0f, 0.12f, 0.12f, 0.2f };
ADDRLP4 564
ADDRGP4 $428
INDIRB
ASGNB 16
line 542
;542:	vec4_t	sblue = { 0.12f, 0.12f, 1.0f, 0.2f };
ADDRLP4 580
ADDRGP4 $429
INDIRB
ASGNB 16
line 544
;543:
;544:	if ( score->client < 0 || score->client >= cgs.maxclients ) {
ADDRLP4 612
ADDRFP4 4
INDIRP4
INDIRI4
ASGNI4
ADDRLP4 612
INDIRI4
CNSTI4 0
LTI4 $433
ADDRLP4 612
INDIRI4
ADDRGP4 cgs+31480
INDIRI4
LTI4 $430
LABELV $433
line 545
;545:		Com_Printf( "Bad score->client: %i\n", score->client );
ADDRGP4 $83
ARGP4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRGP4 Com_Printf
CALLV
pop
line 546
;546:		return;
ADDRGP4 $426
JUMPV
LABELV $430
line 549
;547:	}
;548:
;549:	ci = &cgs.clientinfo[score->client];
ADDRLP4 0
CNSTI4 1776
ADDRFP4 4
INDIRP4
INDIRI4
MULI4
ADDRGP4 cgs+40960
ADDP4
ASGNP4
line 551
;550:
;551:	iconx = SB_BOTICON_X + (SB_RATING_WIDTH / 2);
ADDRLP4 544
CNSTI4 79
ASGNI4
line 552
;552:	headx = SB_HEAD_X + (SB_RATING_WIDTH / 2);
ADDRLP4 548
CNSTI4 111
ASGNI4
line 554
;553:
;554:	maxClients = SB_MAXCLIENTS_INTER;
ADDRLP4 560
CNSTI4 17
ASGNI4
line 556
;555:
;556:	if ( cg.time > cg.score_time && cg.scoreBoardShowing ) {
ADDRGP4 cg+107604
INDIRI4
ADDRGP4 cg+162064
INDIRI4
LEI4 $435
ADDRGP4 cg+120472
INDIRI4
CNSTI4 0
EQI4 $435
line 557
;557:		cg.score_time = cg.time + 1000;
ADDRGP4 cg+162064
ADDRGP4 cg+107604
INDIRI4
CNSTI4 1000
ADDI4
ASGNI4
line 558
;558:		if ( g_gamemode.integer == 2 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 2
NEI4 $442
line 559
;559:			cg.score_weapon = WP_RAILGUN;
ADDRGP4 cg+162060
CNSTI4 7
ASGNI4
line 560
;560:		} else {
ADDRGP4 $443
JUMPV
LABELV $442
line 561
;561:			qboolean foundWeapon = qfalse;
ADDRLP4 616
CNSTI4 0
ASGNI4
line 562
;562:			qboolean cycleRepeated = qfalse;
ADDRLP4 620
CNSTI4 0
ASGNI4
ADDRGP4 $447
JUMPV
LABELV $446
line 564
;563:
;564:			while ( !foundWeapon ) {
line 565
;565:				cg.score_weapon++;
ADDRLP4 624
ADDRGP4 cg+162060
ASGNP4
ADDRLP4 624
INDIRP4
ADDRLP4 624
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 567
;566:
;567:				if ( cg.score_weapon == WP_NUM_WEAPONS - 1 ) {
ADDRGP4 cg+162060
INDIRI4
CNSTI4 10
NEI4 $450
line 568
;568:					if ( cycleRepeated ) {
ADDRLP4 620
INDIRI4
CNSTI4 0
EQI4 $453
line 569
;569:						cg.score_weapon = 0;
ADDRGP4 cg+162060
CNSTI4 0
ASGNI4
line 570
;570:						break;
ADDRGP4 $448
JUMPV
LABELV $453
line 572
;571:					}
;572:					cg.score_weapon = 1;
ADDRGP4 cg+162060
CNSTI4 1
ASGNI4
line 573
;573:					cycleRepeated = qtrue;
ADDRLP4 620
CNSTI4 1
ASGNI4
line 574
;574:				}
LABELV $450
line 576
;575:
;576:				if ( cgs.picked_up & (1 << (cg.score_weapon - 1)) ) {
ADDRLP4 628
CNSTI4 1
ASGNI4
ADDRGP4 cgs+157816
INDIRI4
ADDRLP4 628
INDIRI4
ADDRGP4 cg+162060
INDIRI4
ADDRLP4 628
INDIRI4
SUBI4
LSHI4
BANDI4
CNSTI4 0
EQI4 $457
line 577
;577:					foundWeapon = qtrue;
ADDRLP4 616
CNSTI4 1
ASGNI4
line 578
;578:				}
LABELV $457
line 579
;579:			}
LABELV $447
line 564
ADDRLP4 616
INDIRI4
CNSTI4 0
EQI4 $446
LABELV $448
line 580
;580:		}
LABELV $443
line 581
;581:	}
LABELV $435
line 586
;582:
;583:
;584:	// draw the handicap or bot skill marker (unless player has flag)
;585:	//CG_Printf("%i -- %i -- %i - ", score->client, ci->powerups, score->powerups);
;586:	if ( ci->powerups & ( 1 << PW_NEUTRALFLAG ) ) {
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 512
BANDI4
CNSTI4 0
EQI4 $461
line 588
;587:	//	CG_Printf("Flag\n");
;588:		if( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $463
line 589
;589:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_FREE, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1107296256
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 620
CNSTI4 0
ASGNI4
ADDRLP4 620
INDIRI4
ARGI4
ADDRLP4 620
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 590
;590:		} else {
ADDRGP4 $462
JUMPV
LABELV $463
line 591
;591:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y, 16, 16, TEAM_FREE, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1098907648
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 620
CNSTI4 0
ASGNI4
ADDRLP4 620
INDIRI4
ARGI4
ADDRLP4 620
INDIRI4
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 592
;592:		}
line 593
;593:	} else if ( ci->powerups & ( 1 << PW_REDFLAG ) ) {
ADDRGP4 $462
JUMPV
LABELV $461
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 128
BANDI4
CNSTI4 0
EQI4 $465
line 595
;594:	//	CG_Printf("Flag\n");
;595:		if( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $467
line 596
;596:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_RED, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1107296256
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 597
;597:		} else {
ADDRGP4 $466
JUMPV
LABELV $467
line 598
;598:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y, 16, 16, TEAM_RED, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1098907648
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 599
;599:		}
line 600
;600:	} else if ( ci->powerups & ( 1 << PW_BLUEFLAG ) ) {
ADDRGP4 $466
JUMPV
LABELV $465
ADDRLP4 0
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CNSTI4 256
BANDI4
CNSTI4 0
EQI4 $469
line 602
;601:	//	CG_Printf("Flag\n");
;602:		if( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $471
line 603
;603:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y - ( 32 - BIGCHAR_HEIGHT ) / 2, 32, 32, TEAM_BLUE, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1107296256
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 604
;604:		} else {
ADDRGP4 $470
JUMPV
LABELV $471
line 605
;605:			CG_DrawFlagModel( iconx + DISTANCE_TO_HEAD, y, 16, 16, TEAM_BLUE, qfalse );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 616
CNSTF4 1098907648
ASGNF4
ADDRLP4 616
INDIRF4
ARGF4
ADDRLP4 616
INDIRF4
ARGF4
CNSTI4 2
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 CG_DrawFlagModel
CALLV
pop
line 606
;606:		}
line 607
;607:	} else {
ADDRGP4 $470
JUMPV
LABELV $469
line 610
;608:
;609:		// draw the wins / losses
;610:		if ( cgs.gametype == GT_TOURNAMENT ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 1
NEI4 $473
line 611
;611:			Com_sprintf( cwinloss, sizeof( cwinloss ), "%i/%i", ci->wins, ci->losses );
ADDRLP4 596
ARGP4
CNSTI4 16
ARGI4
ADDRGP4 $204
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 152
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 156
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 612
;612:			if( ci->handicap < 100 && !ci->botSkill ) {
ADDRLP4 0
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 100
GEI4 $476
ADDRLP4 0
INDIRP4
CNSTI4 72
ADDP4
INDIRI4
CNSTI4 0
NEI4 $476
line 613
;613:				CG_DrawStringExt( iconx + DISTANCE_TO_HEAD, y + SMALLCHAR_HEIGHT/2, cwinloss, color, qtrue, qfalse, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT, 0, 0, 0);
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRLP4 624
CNSTI4 8
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 624
INDIRI4
ADDI4
ARGI4
ADDRLP4 596
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 614
;614:			} else {
ADDRGP4 $477
JUMPV
LABELV $476
line 615
;615:				CG_DrawStringExt( iconx + DISTANCE_TO_HEAD, y, cwinloss, color, qtrue, qfalse, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT, 0, 0, 0);
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 596
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 624
CNSTI4 0
ASGNI4
ADDRLP4 624
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 616
;616:			}
LABELV $477
line 617
;617:		}
LABELV $473
line 618
;618:	}
LABELV $470
LABELV $466
LABELV $462
line 621
;619:
;620:	// draw the face
;621:	VectorClear( headAngles );
ADDRLP4 616
CNSTF4 0
ASGNF4
ADDRLP4 20+8
ADDRLP4 616
INDIRF4
ASGNF4
ADDRLP4 20+4
ADDRLP4 616
INDIRF4
ASGNF4
ADDRLP4 20
ADDRLP4 616
INDIRF4
ASGNF4
line 622
;622:	headAngles[YAW] = 180;
ADDRLP4 20+4
CNSTF4 1127481344
ASGNF4
line 623
;623:	if( largeFormat ) {
ADDRFP4 16
INDIRI4
CNSTI4 0
EQI4 $481
line 624
;624:		CG_DrawHead( headx + 28, y - ( ICON_SIZE - BIGCHAR_HEIGHT - 16 ) / 2, ICON_SIZE - 16, ICON_SIZE - 16,
ADDRLP4 548
INDIRI4
CNSTI4 28
ADDI4
CVIF4 4
ARGF4
ADDRFP4 0
INDIRI4
CNSTI4 8
SUBI4
CVIF4 4
ARGF4
ADDRLP4 620
CNSTF4 1107296256
ASGNF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 626
;625:			score->client, headAngles );
;626:	} else {
ADDRGP4 $482
JUMPV
LABELV $481
line 627
;627:		if ( ci->team == TEAM_RED ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 1
NEI4 $483
line 628
;628:			CG_DrawHead( 16, y, 14, 14, score->client, headAngles );
CNSTF4 1098907648
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 620
CNSTF4 1096810496
ASGNF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 629
;629:		} else if ( ci->team == TEAM_BLUE ) {
ADDRGP4 $484
JUMPV
LABELV $483
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 2
NEI4 $485
line 630
;630:			CG_DrawHead( 336, y, 14, 14, score->client, headAngles );
CNSTF4 1135083520
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
ADDRLP4 620
CNSTF4 1096810496
ASGNF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRLP4 620
INDIRF4
ARGF4
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 20
ARGP4
ADDRGP4 CG_DrawHead
CALLV
pop
line 631
;631:		}
LABELV $485
LABELV $484
line 632
;632:	}
LABELV $482
line 645
;633:
;634:#ifdef MISSIONPACK
;635:	// draw the team task
;636:	if ( ci->teamTask != TEAMTASK_NONE ) {
;637:		if ( ci->teamTask == TEAMTASK_OFFENSE ) {
;638:			CG_DrawPic( headx + 48, y, 16, 16, cgs.media.assaultShader );
;639:		} else if ( ci->teamTask == TEAMTASK_DEFENSE ) {
;640:			CG_DrawPic( headx + 48, y, 16, 16, cgs.media.defendShader );
;641:		}
;642:	}
;643:#endif
;644:	// draw the score line
;645:	if ( score->ping == -1 ) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 -1
NEI4 $487
line 647
;646:	//	Com_sprintf(string, sizeof(string), " connecting    %s", ci->name);
;647:		x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2) + (BIGCHAR_WIDTH * 2);
ADDRLP4 552
CNSTI4 191
ASGNI4
line 648
;648:		Com_sprintf(cscore, sizeof(cscore), "Connnecting", 0);
ADDRLP4 32
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $489
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 649
;649:		Com_sprintf(cnet, sizeof(cnet), "", 0);
ADDRLP4 160
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 650
;650:		Com_sprintf(cping, sizeof(cping), "", 0);
ADDRLP4 288
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 651
;651:		Com_sprintf(ctime, sizeof(ctime), "", 0);
ADDRLP4 416
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $391
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 652
;652:	} else {
ADDRGP4 $488
JUMPV
LABELV $487
line 655
;653:	//	Com_sprintf(string, sizeof(string),
;654:	//		"%5i %4i %4i %s", score->score, score->ping, score->time, ci->name);
;655:		x = SB_SCORELINE_X + (SB_RATING_WIDTH / 2);
ADDRLP4 552
CNSTI4 159
ASGNI4
line 656
;656:		Com_sprintf(cscore, sizeof(cscore), "%5i", score->score);
ADDRLP4 32
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $415
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 4
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 657
;657:		Com_sprintf(cnet, sizeof(cnet), "%4i", score->deaths);
ADDRLP4 160
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 112
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 658
;658:		Com_sprintf(cping, sizeof(cping), "%4i", score->ping);
ADDRLP4 288
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 659
;659:		Com_sprintf(ctime, sizeof(ctime), "%4i", score->time);
ADDRLP4 416
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $414
ARGP4
ADDRFP4 4
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 660
;660:	}
LABELV $488
line 663
;661:
;662:	// highlight your position
;663:	if ( score->client == cg.snap->ps.clientNum ) {
ADDRFP4 4
INDIRP4
INDIRI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
NEI4 $490
line 667
;664:		float	hcolor[4];
;665:		int		rank;
;666:
;667:		localClient = qtrue;
ADDRGP4 localClient
CNSTI4 1
ASGNI4
line 669
;668:
;669:		if ( cg.snap->ps.persistant[PERS_TEAM] == TEAM_SPECTATOR
ADDRLP4 640
CNSTI4 3
ASGNI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
ADDRLP4 640
INDIRI4
EQI4 $497
ADDRGP4 cgs+31456
INDIRI4
ADDRLP4 640
INDIRI4
LTI4 $493
LABELV $497
line 670
;670:			|| cgs.gametype >= GT_TEAM ) {
line 671
;671:			rank = -1;
ADDRLP4 636
CNSTI4 -1
ASGNI4
line 672
;672:		} else {
ADDRGP4 $494
JUMPV
LABELV $493
line 673
;673:			rank = cg.snap->ps.persistant[PERS_RANK] & ~RANK_TIED_FLAG;
ADDRLP4 636
ADDRGP4 cg+36
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 -16385
BANDI4
ASGNI4
line 674
;674:		}
LABELV $494
line 675
;675:		if ( rank == 0 ) {
ADDRLP4 636
INDIRI4
CNSTI4 0
NEI4 $499
line 676
;676:			hcolor[0] = 0;
ADDRLP4 620
CNSTF4 0
ASGNF4
line 677
;677:			hcolor[1] = 0;
ADDRLP4 620+4
CNSTF4 0
ASGNF4
line 678
;678:			hcolor[2] = 0.7f;
ADDRLP4 620+8
CNSTF4 1060320051
ASGNF4
line 679
;679:		} else if ( rank == 1 ) {
ADDRGP4 $500
JUMPV
LABELV $499
ADDRLP4 636
INDIRI4
CNSTI4 1
NEI4 $503
line 680
;680:			hcolor[0] = 0.7f;
ADDRLP4 620
CNSTF4 1060320051
ASGNF4
line 681
;681:			hcolor[1] = 0;
ADDRLP4 620+4
CNSTF4 0
ASGNF4
line 682
;682:			hcolor[2] = 0;
ADDRLP4 620+8
CNSTF4 0
ASGNF4
line 683
;683:		} else if ( rank == 2 ) {
ADDRGP4 $504
JUMPV
LABELV $503
ADDRLP4 636
INDIRI4
CNSTI4 2
NEI4 $507
line 684
;684:			hcolor[0] = 0.7f;
ADDRLP4 620
CNSTF4 1060320051
ASGNF4
line 685
;685:			hcolor[1] = 0.7f;
ADDRLP4 620+4
CNSTF4 1060320051
ASGNF4
line 686
;686:			hcolor[2] = 0;
ADDRLP4 620+8
CNSTF4 0
ASGNF4
line 687
;687:		} else {
ADDRGP4 $508
JUMPV
LABELV $507
line 688
;688:			hcolor[0] = 0.7f;
ADDRLP4 620
CNSTF4 1060320051
ASGNF4
line 689
;689:			hcolor[1] = 0.7f;
ADDRLP4 620+4
CNSTF4 1060320051
ASGNF4
line 690
;690:			hcolor[2] = 0.7f;
ADDRLP4 620+8
CNSTF4 1060320051
ASGNF4
line 691
;691:		}
LABELV $508
LABELV $504
LABELV $500
line 693
;692:
;693:		hcolor[3] = fade * 0.16;
ADDRLP4 620+12
CNSTF4 1042536202
ADDRFP4 12
INDIRF4
MULF4
ASGNF4
line 694
;694:		if ( ci->team == TEAM_RED ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 1
NEI4 $514
line 695
;695:			CG_FillRect( 8, y,
CNSTF4 1090519040
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1134034944
ARGF4
CNSTF4 1098907648
ARGF4
ADDRLP4 620
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 697
;696:				304, SMALLCHAR_HEIGHT, hcolor );
;697:		} else if ( ci->team == TEAM_BLUE ) {
ADDRGP4 $515
JUMPV
LABELV $514
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 2
NEI4 $516
line 698
;698:			CG_FillRect( 328, y,
CNSTF4 1134821376
ARGF4
ADDRFP4 0
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1134034944
ARGF4
CNSTF4 1098907648
ARGF4
ADDRLP4 620
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 700
;699:				304, SMALLCHAR_HEIGHT, hcolor );
;700:		}
LABELV $516
LABELV $515
line 701
;701:	}
LABELV $490
line 703
;702:
;703:	drawcolor[0] = drawcolor[1] = drawcolor[2] = 1.0;
ADDRLP4 620
CNSTF4 1065353216
ASGNF4
ADDRLP4 4+8
ADDRLP4 620
INDIRF4
ASGNF4
ADDRLP4 4+4
ADDRLP4 620
INDIRF4
ASGNF4
ADDRLP4 4
ADDRLP4 620
INDIRF4
ASGNF4
line 704
;704:	drawcolor[3] = 1.0;
ADDRLP4 4+12
CNSTF4 1065353216
ASGNF4
line 707
;705:
;706:
;707:	if ( score->ping == -1 ) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 -1
NEI4 $521
line 709
;708:		//CG_DrawStringExt( 40, y, "Connecting", colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
;709:	}
LABELV $521
line 711
;710:
;711:	if ( ci->team == TEAM_RED ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 1
NEI4 $523
line 712
;712:		CG_DrawStringExt( 80 - CG_DrawStrlen(cscore) * (SMALLCHAR_WIDTH + 4) + 2, y, cscore, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 32
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 80
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 32
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 713
;713:		CG_DrawStringExt( 112 - CG_DrawStrlen(cnet) * SMALLCHAR_WIDTH, y + 2, cnet, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 4, 0, 0, 0 );
ADDRLP4 160
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 112
ADDRLP4 632
INDIRI4
CNSTI4 3
LSHI4
SUBI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 160
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 714
;714:	} else if ( ci->team == TEAM_BLUE ) {
ADDRGP4 $524
JUMPV
LABELV $523
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 2
NEI4 $525
line 715
;715:		CG_DrawStringExt( 400 - CG_DrawStrlen(cscore) * (SMALLCHAR_WIDTH + 4) + 2, y, cscore, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 32
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 400
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 32
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 716
;716:		CG_DrawStringExt( 432 - CG_DrawStrlen(cnet) * SMALLCHAR_WIDTH, y + 2, cnet, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 4, 0, 0, 0 );
ADDRLP4 160
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 432
ADDRLP4 632
INDIRI4
CNSTI4 3
LSHI4
SUBI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 2
ADDI4
ARGI4
ADDRLP4 160
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 717
;717:	} else {
ADDRGP4 $526
JUMPV
LABELV $525
line 718
;718:		CG_DrawStringExt( 80 - CG_DrawStrlen(cscore) * (SMALLCHAR_WIDTH + 4) + 2, y + 100, cscore, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 32
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 80
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 100
ADDI4
ARGI4
ADDRLP4 32
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 719
;719:		CG_DrawStringExt( 432 - CG_DrawStrlen(cnet) * SMALLCHAR_WIDTH, y + 102, cnet, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 4, 0, 0, 0 );
ADDRLP4 160
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 432
ADDRLP4 632
INDIRI4
CNSTI4 3
LSHI4
SUBI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 102
ADDI4
ARGI4
ADDRLP4 160
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 720
;720:	}
LABELV $526
LABELV $524
line 722
;721:
;722:	if ( score->ping != -1 ) {
ADDRFP4 4
INDIRP4
CNSTI4 8
ADDP4
INDIRI4
CNSTI4 -1
EQI4 $527
line 723
;723:		if ( ci->team == TEAM_RED ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 1
NEI4 $529
line 724
;724:			CG_DrawStringExt( 152 - CG_DrawStrlen(cping) * (SMALLCHAR_WIDTH + 4) + 2, y, cping, drawcolor, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 288
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 152
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 288
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 725
;725:			CG_DrawStringExt( 184 - CG_DrawStrlen(ctime) * (SMALLCHAR_WIDTH + 4) + 2, y, ctime, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 416
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 184
CNSTI4 12
ADDRLP4 632
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 416
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 726
;726:		} else if ( ci->team == TEAM_BLUE ) {
ADDRGP4 $530
JUMPV
LABELV $529
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 2
NEI4 $531
line 727
;727:			CG_DrawStringExt( 472 - CG_DrawStrlen(cping) * (SMALLCHAR_WIDTH + 4) + 2, y, cping, drawcolor, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 288
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 472
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 288
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 728
;728:			CG_DrawStringExt( 504 - CG_DrawStrlen(ctime) * (SMALLCHAR_WIDTH + 4) + 2, y, ctime, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 416
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 504
CNSTI4 12
ADDRLP4 632
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 416
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 729
;729:		} else {
ADDRGP4 $532
JUMPV
LABELV $531
line 730
;730:			CG_DrawStringExt( 152 - CG_DrawStrlen(cping) * (SMALLCHAR_WIDTH + 4) + 2, y + 100, cping, drawcolor, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 288
ARGP4
ADDRLP4 624
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 152
CNSTI4 12
ADDRLP4 624
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 100
ADDI4
ARGI4
ADDRLP4 288
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 731
;731:			CG_DrawStringExt( 184 - CG_DrawStrlen(ctime) * (SMALLCHAR_WIDTH + 4) + 2, y + 100, ctime, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4, SMALLCHAR_HEIGHT, 0, 0, 0 );
ADDRLP4 416
ARGP4
ADDRLP4 632
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
CNSTI4 184
CNSTI4 12
ADDRLP4 632
INDIRI4
MULI4
SUBI4
CNSTI4 2
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 100
ADDI4
ARGI4
ADDRLP4 416
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 636
CNSTI4 0
ASGNI4
ADDRLP4 636
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRLP4 636
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 732
;732:		}
LABELV $532
LABELV $530
line 733
;733:	}
LABELV $527
line 734
;734:	if ( ci->team == TEAM_RED ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 1
NEI4 $533
line 735
;735:		CG_DrawStringExt( 202 - 2, y + 1, ci->name, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 2, 0, 0, 0 );
CNSTI4 200
ARGI4
ADDRLP4 624
CNSTI4 1
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 624
INDIRI4
ADDI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 736
;736:	} else if ( ci->team == TEAM_BLUE ) {
ADDRGP4 $534
JUMPV
LABELV $533
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 2
NEI4 $535
line 737
;737:		CG_DrawStringExt( 522 - 2, y + 1, ci->name, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 2, 0, 0, 0 );
CNSTI4 520
ARGI4
ADDRLP4 624
CNSTI4 1
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 624
INDIRI4
ADDI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 628
CNSTI4 0
ASGNI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
CNSTI4 8
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRLP4 628
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 738
;738:	} else {
ADDRGP4 $536
JUMPV
LABELV $535
line 739
;739:		CG_DrawStringExt( 202 - 2, y + 101, ci->name, colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH, SMALLCHAR_HEIGHT - 2, 0, 0, 0 );
CNSTI4 200
ARGI4
ADDRFP4 0
INDIRI4
CNSTI4 101
ADDI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 624
CNSTI4 0
ASGNI4
ADDRLP4 624
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 14
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRLP4 624
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 740
;740:	}
LABELV $536
LABELV $534
line 743
;741:
;742:	// add the "ready" marker for intermission exiting
;743:	if ( cg.snap->ps.stats[ STAT_CLIENTS_READY ] & ( 1 << score->client ) ) {
ADDRGP4 cg+36
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
CNSTI4 1
ADDRFP4 4
INDIRP4
INDIRI4
LSHI4
BANDI4
CNSTI4 0
EQI4 $537
line 745
;744://freeze
;745:		if ( !Q_Isfreeze( score->client ) )
ADDRFP4 4
INDIRP4
INDIRI4
ARGI4
ADDRLP4 624
ADDRGP4 Q_Isfreeze
CALLI4
ASGNI4
ADDRLP4 624
INDIRI4
CNSTI4 0
NEI4 $540
line 748
;746://freeze
;747:		//Replace this.
;748:		CG_DrawBigStringColor( iconx + DISTANCE_TO_HEAD, y, "READY", color );
ADDRLP4 544
INDIRI4
CNSTI4 64
ADDI4
ARGI4
ADDRFP4 0
INDIRI4
ARGI4
ADDRGP4 $425
ARGP4
ADDRFP4 8
INDIRP4
ARGP4
ADDRGP4 CG_DrawBigStringColor
CALLV
pop
LABELV $540
line 749
;749:	}
LABELV $537
line 750
;750:}
LABELV $426
endproc CG_NewDrawClientScore 644 44
proc CG_TeamScoreboard 44 20
line 757
;751:
;752:/*
;753:=================
;754:CG_TeamScoreboard
;755:=================
;756:*/
;757:static int CG_TeamScoreboard( int y, team_t team, float fade, int maxClients, int lineHeight ) {
line 764
;758:	int		i;
;759:	score_t	*score;
;760:	float	color[4];
;761:	int		count;
;762:	clientInfo_t	*ci;
;763:
;764:	color[0] = color[1] = color[2] = 1.0;
ADDRLP4 32
CNSTF4 1065353216
ASGNF4
ADDRLP4 16+8
ADDRLP4 32
INDIRF4
ASGNF4
ADDRLP4 16+4
ADDRLP4 32
INDIRF4
ASGNF4
ADDRLP4 16
ADDRLP4 32
INDIRF4
ASGNF4
line 765
;765:	color[3] = fade;
ADDRLP4 16+12
ADDRFP4 8
INDIRF4
ASGNF4
line 767
;766:
;767:	count = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 768
;768:	for ( i = 0 ; i < cg.numScores && count < maxClients ; i++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $549
JUMPV
LABELV $546
line 769
;769:		score = &cg.scores[i];
ADDRLP4 8
CNSTI4 156
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 cg+110484
ADDP4
ASGNP4
line 770
;770:		ci = &cgs.clientinfo[ score->client ];
ADDRLP4 12
CNSTI4 1776
ADDRLP4 8
INDIRP4
INDIRI4
MULI4
ADDRGP4 cgs+40960
ADDP4
ASGNP4
line 772
;771:
;772:		if ( team != ci->team ) {
ADDRFP4 4
INDIRI4
ADDRLP4 12
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
EQI4 $553
line 773
;773:			continue;
ADDRGP4 $547
JUMPV
LABELV $553
line 776
;774:		}
;775:
;776:		if ( cg_oldScoreboard.integer >= 0 ) {
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 0
LTI4 $555
line 777
;777:			CG_DrawClientScore( y + lineHeight * count, score, color, fade, lineHeight == SB_NORMAL_HEIGHT );
ADDRLP4 40
ADDRFP4 16
INDIRI4
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 40
INDIRI4
ADDRLP4 0
INDIRI4
MULI4
ADDI4
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRLP4 16
ARGP4
ADDRFP4 8
INDIRF4
ARGF4
ADDRLP4 40
INDIRI4
CNSTI4 40
NEI4 $559
ADDRLP4 36
CNSTI4 1
ASGNI4
ADDRGP4 $560
JUMPV
LABELV $559
ADDRLP4 36
CNSTI4 0
ASGNI4
LABELV $560
ADDRLP4 36
INDIRI4
ARGI4
ADDRGP4 CG_DrawClientScore
CALLV
pop
line 778
;778:		} else {
ADDRGP4 $556
JUMPV
LABELV $555
line 779
;779:			CG_NewDrawClientScore( y + lineHeight * count, score, color, fade, lineHeight == SB_NORMAL_HEIGHT );
ADDRLP4 40
ADDRFP4 16
INDIRI4
ASGNI4
ADDRFP4 0
INDIRI4
ADDRLP4 40
INDIRI4
ADDRLP4 0
INDIRI4
MULI4
ADDI4
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRLP4 16
ARGP4
ADDRFP4 8
INDIRF4
ARGF4
ADDRLP4 40
INDIRI4
CNSTI4 40
NEI4 $562
ADDRLP4 36
CNSTI4 1
ASGNI4
ADDRGP4 $563
JUMPV
LABELV $562
ADDRLP4 36
CNSTI4 0
ASGNI4
LABELV $563
ADDRLP4 36
INDIRI4
ARGI4
ADDRGP4 CG_NewDrawClientScore
CALLV
pop
line 780
;780:		}
LABELV $556
line 782
;781:
;782:		count++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 783
;783:	}
LABELV $547
line 768
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $549
ADDRLP4 4
INDIRI4
ADDRGP4 cg+110468
INDIRI4
GEI4 $564
ADDRLP4 0
INDIRI4
ADDRFP4 12
INDIRI4
LTI4 $546
LABELV $564
line 785
;784:
;785:	return count;
ADDRLP4 0
INDIRI4
RETI4
LABELV $542
endproc CG_TeamScoreboard 44 20
export CG_DrawOldScoreboard
proc CG_DrawOldScoreboard 68 24
line 795
;786:}
;787:
;788:/*
;789:=================
;790:CG_DrawScoreboard
;791:
;792:Draw the normal in-game scoreboard
;793:=================
;794:*/
;795:qboolean CG_DrawOldScoreboard( void ) {
line 806
;796://	char	string[128];
;797:	int		x, y, w, i, n1, n2;
;798:	float	fade;
;799:	float	*fadeColor;
;800:	char	*s;
;801:	int maxClients;
;802:	int lineHeight;
;803:	int topBorderSize, bottomBorderSize;
;804:
;805:	// don't draw amuthing if the menu or console is up
;806:	if ( cg_paused.integer ) {
ADDRGP4 cg_paused+12
INDIRI4
CNSTI4 0
EQI4 $566
line 807
;807:		cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 808
;808:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $565
JUMPV
LABELV $566
line 811
;809:	}
;810:
;811:	if ( cgs.gametype == GT_SINGLE_PLAYER && cg.predictedPlayerState.pm_type == PM_INTERMISSION ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 2
NEI4 $570
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 5
NEI4 $570
line 812
;812:		cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 813
;813:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $565
JUMPV
LABELV $570
line 817
;814:	}
;815:
;816:	// don't draw scoreboard during death while warmup up
;817:	if ( cg.warmup && !cg.showScores ) {
ADDRLP4 52
CNSTI4 0
ASGNI4
ADDRGP4 cg+130804
INDIRI4
ADDRLP4 52
INDIRI4
EQI4 $576
ADDRGP4 cg+120468
INDIRI4
ADDRLP4 52
INDIRI4
NEI4 $576
line 818
;818:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $565
JUMPV
LABELV $576
line 821
;819:	}
;820:
;821:	if ( cg.showScores || cg.predictedPlayerState.pm_type == PM_DEAD ||
ADDRGP4 cg+120468
INDIRI4
CNSTI4 0
NEI4 $588
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 3
EQI4 $588
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 5
NEI4 $580
LABELV $588
line 822
;822:		 cg.predictedPlayerState.pm_type == PM_INTERMISSION ) {
line 823
;823:		fade = 1.0;
ADDRLP4 12
CNSTF4 1065353216
ASGNF4
line 824
;824:		fadeColor = colorWhite;
ADDRLP4 20
ADDRGP4 colorWhite
ASGNP4
line 825
;825:	} else {
ADDRGP4 $581
JUMPV
LABELV $580
line 826
;826:		fadeColor = CG_FadeColor( cg.scoreFadeTime, FADE_TIME );
ADDRGP4 cg+120476
INDIRI4
ARGI4
CNSTI4 200
ARGI4
ADDRLP4 56
ADDRGP4 CG_FadeColor
CALLP4
ASGNP4
ADDRLP4 20
ADDRLP4 56
INDIRP4
ASGNP4
line 828
;827:
;828:		if ( !fadeColor ) {
ADDRLP4 20
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $590
line 830
;829:			// next time scoreboard comes up, don't print killer
;830:			cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 831
;831:			cg.killerName[0] = 0;
ADDRGP4 cg+120480
CNSTI1 0
ASGNI1
line 832
;832:			return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $565
JUMPV
LABELV $590
line 834
;833:		}
;834:		fade = *fadeColor;
ADDRLP4 12
ADDRLP4 20
INDIRP4
INDIRF4
ASGNF4
line 835
;835:	}
LABELV $581
line 839
;836:
;837:
;838:	// fragged by ... line
;839:	if ( cg.killerName[0] ) {
ADDRGP4 cg+120480
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $594
line 840
;840:		s = va("Fragged by %s", cg.killerName );
ADDRGP4 $597
ARGP4
ADDRGP4 cg+120480
ARGP4
ADDRLP4 56
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 28
ADDRLP4 56
INDIRP4
ASGNP4
line 841
;841:		w = CG_DrawStrlen( s ) * BIGCHAR_WIDTH;
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 60
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 40
ADDRLP4 60
INDIRI4
CNSTI4 4
LSHI4
ASGNI4
line 842
;842:		x = ( SCREEN_WIDTH - w ) / 2;
ADDRLP4 36
CNSTI4 640
ADDRLP4 40
INDIRI4
SUBI4
CNSTI4 2
DIVI4
ASGNI4
line 843
;843:		y = 40;
ADDRLP4 4
CNSTI4 40
ASGNI4
line 844
;844:		CG_DrawBigString( x, y, s, fade );
ADDRLP4 36
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRGP4 CG_DrawBigString
CALLV
pop
line 845
;845:	}
LABELV $594
line 848
;846:
;847:	// current rank
;848:	if ( cgs.gametype < GT_TEAM) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
GEI4 $599
line 849
;849:		if (cg.snap->ps.persistant[PERS_TEAM] != TEAM_SPECTATOR ) {
ADDRGP4 cg+36
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 3
EQI4 $600
line 850
;850:			s = va("%s place with %i",
ADDRGP4 cg+36
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 1
ADDI4
ARGI4
ADDRLP4 56
ADDRGP4 CG_PlaceString
CALLP4
ASGNP4
ADDRGP4 $605
ARGP4
ADDRLP4 56
INDIRP4
ARGP4
ADDRGP4 cg+36
INDIRP4
CNSTI4 292
ADDP4
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 28
ADDRLP4 60
INDIRP4
ASGNP4
line 853
;851:				CG_PlaceString( cg.snap->ps.persistant[PERS_RANK] + 1 ),
;852:				cg.snap->ps.persistant[PERS_SCORE] );
;853:			w = CG_DrawStrlen( s ) * BIGCHAR_WIDTH;
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 64
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 40
ADDRLP4 64
INDIRI4
CNSTI4 4
LSHI4
ASGNI4
line 854
;854:			x = ( SCREEN_WIDTH - w ) / 2;
ADDRLP4 36
CNSTI4 640
ADDRLP4 40
INDIRI4
SUBI4
CNSTI4 2
DIVI4
ASGNI4
line 855
;855:			y = 60;
ADDRLP4 4
CNSTI4 60
ASGNI4
line 856
;856:			CG_DrawBigString( x, y, s, fade );
ADDRLP4 36
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRGP4 CG_DrawBigString
CALLV
pop
line 857
;857:		}
line 858
;858:	} else {
ADDRGP4 $600
JUMPV
LABELV $599
line 859
;859:		if ( cg.teamScores[0] == cg.teamScores[1] ) {
ADDRGP4 cg+110476
INDIRI4
ADDRGP4 cg+110476+4
INDIRI4
NEI4 $608
line 860
;860:			s = va("Teams are tied at %i", cg.teamScores[0] );
ADDRGP4 $613
ARGP4
ADDRGP4 cg+110476
INDIRI4
ARGI4
ADDRLP4 56
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 28
ADDRLP4 56
INDIRP4
ASGNP4
line 861
;861:		} else if ( cg.teamScores[0] >= cg.teamScores[1] ) {
ADDRGP4 $609
JUMPV
LABELV $608
ADDRGP4 cg+110476
INDIRI4
ADDRGP4 cg+110476+4
INDIRI4
LTI4 $615
line 862
;862:			s = va("Red leads %i to %i",cg.teamScores[0], cg.teamScores[1] );
ADDRGP4 $620
ARGP4
ADDRGP4 cg+110476
INDIRI4
ARGI4
ADDRGP4 cg+110476+4
INDIRI4
ARGI4
ADDRLP4 56
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 28
ADDRLP4 56
INDIRP4
ASGNP4
line 863
;863:		} else {
ADDRGP4 $616
JUMPV
LABELV $615
line 864
;864:			s = va("Blue leads %i to %i",cg.teamScores[1], cg.teamScores[0] );
ADDRGP4 $624
ARGP4
ADDRGP4 cg+110476+4
INDIRI4
ARGI4
ADDRGP4 cg+110476
INDIRI4
ARGI4
ADDRLP4 56
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 28
ADDRLP4 56
INDIRP4
ASGNP4
line 865
;865:		}
LABELV $616
LABELV $609
line 867
;866:
;867:		w = CG_DrawStrlen( s ) * BIGCHAR_WIDTH;
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 56
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 40
ADDRLP4 56
INDIRI4
CNSTI4 4
LSHI4
ASGNI4
line 868
;868:		x = ( SCREEN_WIDTH - w ) / 2;
ADDRLP4 36
CNSTI4 640
ADDRLP4 40
INDIRI4
SUBI4
CNSTI4 2
DIVI4
ASGNI4
line 869
;869:		y = 60;
ADDRLP4 4
CNSTI4 60
ASGNI4
line 870
;870:		CG_DrawBigString( x, y, s, fade );
ADDRLP4 36
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 28
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRGP4 CG_DrawBigString
CALLV
pop
line 871
;871:	}
LABELV $600
line 874
;872:
;873:	// scoreboard
;874:	y = cgs.gametype<GT_TEAM?(SB_HEADER):(SB_HEADER - 10);
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
GEI4 $630
ADDRLP4 56
CNSTI4 86
ASGNI4
ADDRGP4 $631
JUMPV
LABELV $630
ADDRLP4 56
CNSTI4 76
ASGNI4
LABELV $631
ADDRLP4 4
ADDRLP4 56
INDIRI4
ASGNI4
line 876
;875:
;876:	CG_DrawPic( SB_SCORE_X + (SB_RATING_WIDTH / 2) + 27, y, 56, 28, cgs.media.scoreboardScore );
CNSTF4 1128792064
ARGF4
ADDRLP4 4
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1113587712
ARGF4
CNSTF4 1105199104
ARGF4
ADDRGP4 cgs+156680+560
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 877
;877:	CG_DrawPic( SB_PING_X - (SB_RATING_WIDTH / 2) , y, 56, 28, cgs.media.scoreboardPing );
CNSTF4 1132691456
ARGF4
ADDRLP4 4
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1113587712
ARGF4
CNSTF4 1105199104
ARGF4
ADDRGP4 cgs+156680+556
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 878
;878:	CG_DrawPic( SB_TIME_X - (SB_RATING_WIDTH / 2) - 25, y, 56, 28, cgs.media.scoreboardTime );
CNSTF4 1134493696
ARGF4
ADDRLP4 4
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1113587712
ARGF4
CNSTF4 1105199104
ARGF4
ADDRGP4 cgs+156680+564
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 879
;879:	CG_DrawPic( SB_NAME_X - (SB_RATING_WIDTH / 2) - 40, y, 56, 28, cgs.media.scoreboardName );
CNSTF4 1136361472
ARGF4
ADDRLP4 4
INDIRI4
CVIF4 4
ARGF4
CNSTF4 1113587712
ARGF4
CNSTF4 1105199104
ARGF4
ADDRGP4 cgs+156680+552
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 881
;880:
;881:	y = SB_TOP;
ADDRLP4 4
CNSTI4 118
ASGNI4
line 885
;882:
;883:	// If there are more than SB_MAXCLIENTS_NORMAL, use the interleaved scores
;884:
;885:	if ( cg.numScores > SB_MAXCLIENTS_NORMAL ) {
ADDRGP4 cg+110468
INDIRI4
CNSTI4 7
LEI4 $640
line 886
;886:		maxClients = SB_MAXCLIENTS_INTER;
ADDRLP4 24
CNSTI4 17
ASGNI4
line 887
;887:		lineHeight = SB_INTER_HEIGHT;
ADDRLP4 8
CNSTI4 16
ASGNI4
line 888
;888:		topBorderSize = 8;
ADDRLP4 44
CNSTI4 8
ASGNI4
line 889
;889:		bottomBorderSize = 16;
ADDRLP4 48
CNSTI4 16
ASGNI4
line 890
;890:	} else {
ADDRGP4 $641
JUMPV
LABELV $640
line 891
;891:		maxClients = SB_MAXCLIENTS_NORMAL;
ADDRLP4 24
CNSTI4 7
ASGNI4
line 892
;892:		cg_oldScoreboard.integer&32?(lineHeight = SB_INTER_HEIGHT):(lineHeight = SB_NORMAL_HEIGHT);
ADDRGP4 cg_oldScoreboard+12
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
EQI4 $645
ADDRLP4 8
CNSTI4 16
ASGNI4
ADDRGP4 $646
JUMPV
LABELV $645
ADDRLP4 8
CNSTI4 40
ASGNI4
LABELV $646
line 894
;893:		//lineHeight = SB_NORMAL_HEIGHT;
;894:		topBorderSize = 16;
ADDRLP4 44
CNSTI4 16
ASGNI4
line 895
;895:		bottomBorderSize = 16;
ADDRLP4 48
CNSTI4 16
ASGNI4
line 896
;896:	}
LABELV $641
line 898
;897:
;898:	localClient = qfalse;
ADDRGP4 localClient
CNSTI4 0
ASGNI4
line 900
;899:
;900:	if ( cgs.gametype >= GT_TEAM ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
LTI4 $647
line 905
;901:		//
;902:		// teamplay scoreboard
;903:		//
;904:		//FIXME: OldScoreboard + !largeFormat == gap between description and colors
;905:		if ( cg.teamScores[0] >= cg.teamScores[1] ) {
ADDRGP4 cg+110476
INDIRI4
ADDRGP4 cg+110476+4
INDIRI4
LTI4 $650
line 906
;906:				n1 = CG_TeamScoreboard( y, TEAM_RED, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 60
INDIRI4
ASGNI4
line 907
;907:				CG_DrawTeamBackground( 0, y - topBorderSize, 640, n1 * lineHeight + bottomBorderSize, 0.33f, TEAM_RED );
CNSTI4 0
ARGI4
ADDRLP4 4
INDIRI4
ADDRLP4 44
INDIRI4
SUBI4
ARGI4
CNSTI4 640
ARGI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
ADDRLP4 48
INDIRI4
ADDI4
ARGI4
CNSTF4 1051260355
ARGF4
CNSTI4 1
ARGI4
ADDRGP4 CG_DrawTeamBackground
CALLV
pop
line 908
;908:				y += (n1 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 909
;909:				maxClients -= n1;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 16
INDIRI4
SUBI4
ASGNI4
line 910
;910:				n2 = CG_TeamScoreboard( y, TEAM_BLUE, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 64
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 32
ADDRLP4 64
INDIRI4
ASGNI4
line 911
;911:				CG_DrawTeamBackground( 0, y - topBorderSize, 640, n2 * lineHeight + bottomBorderSize, 0.33f, TEAM_BLUE );
CNSTI4 0
ARGI4
ADDRLP4 4
INDIRI4
ADDRLP4 44
INDIRI4
SUBI4
ARGI4
CNSTI4 640
ARGI4
ADDRLP4 32
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
ADDRLP4 48
INDIRI4
ADDI4
ARGI4
CNSTF4 1051260355
ARGF4
CNSTI4 2
ARGI4
ADDRGP4 CG_DrawTeamBackground
CALLV
pop
line 912
;912:				y += (n2 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 32
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 913
;913:				maxClients -= n2;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 32
INDIRI4
SUBI4
ASGNI4
line 914
;914:		} else {
ADDRGP4 $651
JUMPV
LABELV $650
line 915
;915:				n1 = CG_TeamScoreboard( y, TEAM_BLUE, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 60
INDIRI4
ASGNI4
line 916
;916:				CG_DrawTeamBackground( 0, y - topBorderSize, 640, n1 * lineHeight + bottomBorderSize, 0.33f, TEAM_BLUE );
CNSTI4 0
ARGI4
ADDRLP4 4
INDIRI4
ADDRLP4 44
INDIRI4
SUBI4
ARGI4
CNSTI4 640
ARGI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
ADDRLP4 48
INDIRI4
ADDI4
ARGI4
CNSTF4 1051260355
ARGF4
CNSTI4 2
ARGI4
ADDRGP4 CG_DrawTeamBackground
CALLV
pop
line 917
;917:				y += (n1 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 918
;918:				maxClients -= n1;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 16
INDIRI4
SUBI4
ASGNI4
line 919
;919:				n2 = CG_TeamScoreboard( y, TEAM_RED, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 64
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 32
ADDRLP4 64
INDIRI4
ASGNI4
line 920
;920:				CG_DrawTeamBackground( 0, y - topBorderSize, 640, n2 * lineHeight + bottomBorderSize, 0.33f, TEAM_RED );
CNSTI4 0
ARGI4
ADDRLP4 4
INDIRI4
ADDRLP4 44
INDIRI4
SUBI4
ARGI4
CNSTI4 640
ARGI4
ADDRLP4 32
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
ADDRLP4 48
INDIRI4
ADDI4
ARGI4
CNSTF4 1051260355
ARGF4
CNSTI4 1
ARGI4
ADDRGP4 CG_DrawTeamBackground
CALLV
pop
line 921
;921:				y += (n2 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 32
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 922
;922:				maxClients -= n2;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 32
INDIRI4
SUBI4
ASGNI4
line 923
;923:		}
LABELV $651
line 925
;924:
;925:		n1 = CG_TeamScoreboard( y, TEAM_SPECTATOR, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 60
INDIRI4
ASGNI4
line 926
;926:		y += (n1 * lineHeight) + SMALLCHAR_HEIGHT * 2;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
ADDI4
ASGNI4
line 928
;927:
;928:	} else {
ADDRGP4 $648
JUMPV
LABELV $647
line 932
;929:		//
;930:		// free for all scoreboard
;931:		//
;932:		n1 = CG_TeamScoreboard( y, TEAM_FREE, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 60
INDIRI4
ASGNI4
line 933
;933:		y += (n1 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 934
;934:		n2 = CG_TeamScoreboard( y, TEAM_SPECTATOR, fade, maxClients - n1, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ADDRLP4 16
INDIRI4
SUBI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 64
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 32
ADDRLP4 64
INDIRI4
ASGNI4
line 935
;935:		y += (n2 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 32
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 936
;936:	}
LABELV $648
line 938
;937:
;938:	if (!localClient) {
ADDRGP4 localClient
INDIRI4
CNSTI4 0
NEI4 $655
line 940
;939:		// draw local client at the bottom
;940:		for ( i = 0 ; i < cg.numScores ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $660
JUMPV
LABELV $657
line 941
;941:			if ( cg.scores[i].client == cg.snap->ps.clientNum ) {
CNSTI4 156
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 cg+110484
ADDP4
INDIRI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
NEI4 $662
line 942
;942:				CG_DrawClientScore( y, &cg.scores[i], fadeColor, fade, lineHeight == SB_NORMAL_HEIGHT );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 156
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 cg+110484
ADDP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 8
INDIRI4
CNSTI4 40
NEI4 $668
ADDRLP4 60
CNSTI4 1
ASGNI4
ADDRGP4 $669
JUMPV
LABELV $668
ADDRLP4 60
CNSTI4 0
ASGNI4
LABELV $669
ADDRLP4 60
INDIRI4
ARGI4
ADDRGP4 CG_DrawClientScore
CALLV
pop
line 943
;943:				break;
ADDRGP4 $659
JUMPV
LABELV $662
line 945
;944:			}
;945:		}
LABELV $658
line 940
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $660
ADDRLP4 0
INDIRI4
ADDRGP4 cg+110468
INDIRI4
LTI4 $657
LABELV $659
line 946
;946:	}
LABELV $655
line 949
;947:
;948:	// load any models that have been deferred
;949:	if ( ++cg.deferredPlayerLoading > 10 ) {
ADDRLP4 60
ADDRGP4 cg+16
ASGNP4
ADDRLP4 64
ADDRLP4 60
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 60
INDIRP4
ADDRLP4 64
INDIRI4
ASGNI4
ADDRLP4 64
INDIRI4
CNSTI4 10
LEI4 $670
line 950
;950:		CG_LoadDeferredPlayers();
ADDRGP4 CG_LoadDeferredPlayers
CALLV
pop
line 951
;951:	}
LABELV $670
line 953
;952:
;953:	return qtrue;
CNSTI4 1
RETI4
LABELV $565
endproc CG_DrawOldScoreboard 68 24
lit
align 4
LABELV $674
byte 4 1065353216
byte 4 1048576000
byte 4 1048576000
byte 4 1045220557
align 4
LABELV $675
byte 4 1048576000
byte 4 1048576000
byte 4 1065353216
byte 4 1045220557
align 4
LABELV $752
byte 4 1065353216
byte 4 1039516303
byte 4 1039516303
byte 4 1045220557
align 4
LABELV $753
byte 4 1039516303
byte 4 1039516303
byte 4 1065353216
byte 4 1045220557
export CG_DrawNewScoreboard
code
proc CG_DrawNewScoreboard 376 44
line 964
;954:
;955:}
;956:
;957:/*
;958:=================
;959:CG_NewDrawScoreboard
;960:
;961:Draw the normal in-game scoreboard
;962:=================
;963:*/
;964:qboolean CG_DrawNewScoreboard( void ) {
line 973
;965:	char	string[128];
;966:	int		x, y, w, i, n1, n2;
;967:	float	fade;
;968:	float	*fadeColor;
;969:	char	*s;
;970:	int maxClients;
;971:	int lineHeight;
;972:	int topBorderSize, bottomBorderSize;
;973:	vec4_t	hred = { 1.0f, 0.25f, 0.25f, 0.2f };
ADDRLP4 168
ADDRGP4 $674
INDIRB
ASGNB 16
line 974
;974:	vec4_t	hblue = { 0.25f, 0.25f, 1.0f, 0.2f };
ADDRLP4 184
ADDRGP4 $675
INDIRB
ASGNB 16
line 975
;975:	int		wred = CG_DrawStrlen( cg_redName.string ) * (SMALLCHAR_WIDTH + 4);
ADDRGP4 cg_redName+16
ARGP4
ADDRLP4 220
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 28
CNSTI4 12
ADDRLP4 220
INDIRI4
MULI4
ASGNI4
line 976
;976:	int		wblue = CG_DrawStrlen( cg_blueName.string ) * (SMALLCHAR_WIDTH + 4);
ADDRGP4 cg_blueName+16
ARGP4
ADDRLP4 224
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 32
CNSTI4 12
ADDRLP4 224
INDIRI4
MULI4
ASGNI4
line 979
;977:
;978:	// don't draw amuthing if the menu or console is up
;979:	if ( cg_paused.integer ) {
ADDRGP4 cg_paused+12
INDIRI4
CNSTI4 0
EQI4 $678
line 980
;980:		cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 981
;981:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $673
JUMPV
LABELV $678
line 984
;982:	}
;983:
;984:	if ( cgs.gametype == GT_SINGLE_PLAYER && cg.predictedPlayerState.pm_type == PM_INTERMISSION ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 2
NEI4 $682
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 5
NEI4 $682
line 985
;985:		cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 986
;986:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $673
JUMPV
LABELV $682
line 990
;987:	}
;988:
;989:	// don't draw scoreboard during death while warmup up
;990:	if ( cg.warmup && !cg.showScores ) {
ADDRLP4 228
CNSTI4 0
ASGNI4
ADDRGP4 cg+130804
INDIRI4
ADDRLP4 228
INDIRI4
EQI4 $688
ADDRGP4 cg+120468
INDIRI4
ADDRLP4 228
INDIRI4
NEI4 $688
line 991
;991:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $673
JUMPV
LABELV $688
line 994
;992:	}
;993:
;994:	if ( cg.showScores || cg.predictedPlayerState.pm_type == PM_DEAD ||
ADDRGP4 cg+120468
INDIRI4
CNSTI4 0
NEI4 $700
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 3
EQI4 $700
ADDRGP4 cg+107636+4
INDIRI4
CNSTI4 5
NEI4 $692
LABELV $700
line 995
;995:		 cg.predictedPlayerState.pm_type == PM_INTERMISSION ) {
line 996
;996:		fade = 1.0;
ADDRLP4 12
CNSTF4 1065353216
ASGNF4
line 997
;997:		fadeColor = colorWhite;
ADDRLP4 20
ADDRGP4 colorWhite
ASGNP4
line 998
;998:	} else {
ADDRGP4 $693
JUMPV
LABELV $692
line 999
;999:		fadeColor = CG_FadeColor( cg.scoreFadeTime, FADE_TIME );
ADDRGP4 cg+120476
INDIRI4
ARGI4
CNSTI4 200
ARGI4
ADDRLP4 232
ADDRGP4 CG_FadeColor
CALLP4
ASGNP4
ADDRLP4 20
ADDRLP4 232
INDIRP4
ASGNP4
line 1001
;1000:
;1001:		if ( !fadeColor ) {
ADDRLP4 20
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $702
line 1003
;1002:			// next time scoreboard comes up, don't print killer
;1003:			cg.deferredPlayerLoading = 0;
ADDRGP4 cg+16
CNSTI4 0
ASGNI4
line 1004
;1004:			cg.killerName[0] = 0;
ADDRGP4 cg+120480
CNSTI1 0
ASGNI1
line 1005
;1005:			return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $673
JUMPV
LABELV $702
line 1007
;1006:		}
;1007:		fade = *fadeColor;
ADDRLP4 12
ADDRLP4 20
INDIRP4
INDIRF4
ASGNF4
line 1008
;1008:	}
LABELV $693
line 1012
;1009:
;1010:
;1011:	// fragged by ... line
;1012:	if ( cg.killerName[0] ) {
ADDRGP4 cg+120480
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $706
line 1013
;1013:		s = va("Fragged by %s", cg.killerName );
ADDRGP4 $597
ARGP4
ADDRGP4 cg+120480
ARGP4
ADDRLP4 232
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 200
ADDRLP4 232
INDIRP4
ASGNP4
line 1014
;1014:		w = CG_DrawStrlen( s ) * BIGCHAR_WIDTH;
ADDRLP4 200
INDIRP4
ARGP4
ADDRLP4 236
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 208
ADDRLP4 236
INDIRI4
CNSTI4 4
LSHI4
ASGNI4
line 1015
;1015:		x = ( SCREEN_WIDTH - w ) / 2;
ADDRLP4 204
CNSTI4 640
ADDRLP4 208
INDIRI4
SUBI4
CNSTI4 2
DIVI4
ASGNI4
line 1016
;1016:		y = 40;
ADDRLP4 4
CNSTI4 40
ASGNI4
line 1017
;1017:		CG_DrawBigString( x, y, s, fade );
ADDRLP4 204
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 200
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRGP4 CG_DrawBigString
CALLV
pop
line 1018
;1018:	}
LABELV $706
line 1021
;1019:
;1020:	// current rank
;1021:	if ( cgs.gametype < GT_TEAM) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
GEI4 $710
line 1022
;1022:		if (cg.snap->ps.persistant[PERS_TEAM] != TEAM_SPECTATOR ) {
ADDRGP4 cg+36
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 3
EQI4 $713
line 1023
;1023:			s = va("%s place with %i",
ADDRGP4 cg+36
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 1
ADDI4
ARGI4
ADDRLP4 232
ADDRGP4 CG_PlaceString
CALLP4
ASGNP4
ADDRGP4 $605
ARGP4
ADDRLP4 232
INDIRP4
ARGP4
ADDRGP4 cg+36
INDIRP4
CNSTI4 292
ADDP4
INDIRI4
ARGI4
ADDRLP4 236
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 200
ADDRLP4 236
INDIRP4
ASGNP4
line 1026
;1024:				CG_PlaceString( cg.snap->ps.persistant[PERS_RANK] + 1 ),
;1025:				cg.snap->ps.persistant[PERS_SCORE] );
;1026:			w = CG_DrawStrlen( s ) * BIGCHAR_WIDTH;
ADDRLP4 200
INDIRP4
ARGP4
ADDRLP4 240
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 208
ADDRLP4 240
INDIRI4
CNSTI4 4
LSHI4
ASGNI4
line 1027
;1027:			x = ( SCREEN_WIDTH - w ) / 2;
ADDRLP4 204
CNSTI4 640
ADDRLP4 208
INDIRI4
SUBI4
CNSTI4 2
DIVI4
ASGNI4
line 1028
;1028:			y = 60;
ADDRLP4 4
CNSTI4 60
ASGNI4
line 1029
;1029:			CG_DrawBigString( x, y, s, fade );
ADDRLP4 204
INDIRI4
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 200
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRGP4 CG_DrawBigString
CALLV
pop
line 1030
;1030:		}
LABELV $713
line 1031
;1031:	}
LABELV $710
line 1034
;1032:
;1033:	// scoreboard
;1034:	y = SB_HEADER;
ADDRLP4 4
CNSTI4 86
ASGNI4
line 1038
;1035:
;1036:
;1037:
;1038:	if ( wred > 18 * (SMALLCHAR_WIDTH + 4) )
ADDRLP4 28
INDIRI4
CNSTI4 216
LEI4 $718
line 1039
;1039:		wred = 18 * (SMALLCHAR_WIDTH + 4);
ADDRLP4 28
CNSTI4 216
ASGNI4
LABELV $718
line 1041
;1040:
;1041:	if ( wblue > 18 * (SMALLCHAR_WIDTH + 4) )
ADDRLP4 32
INDIRI4
CNSTI4 216
LEI4 $720
line 1042
;1042:		wblue = 18 * (SMALLCHAR_WIDTH + 4);
ADDRLP4 32
CNSTI4 216
ASGNI4
LABELV $720
line 1044
;1043:
;1044:	if ( CG_DrawStrlen( cg_redName.string ) ) {
ADDRGP4 cg_redName+16
ARGP4
ADDRLP4 232
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 232
INDIRI4
CNSTI4 0
EQI4 $722
line 1045
;1045:		CG_FillRect( 308 - wred, SB_TOP - 48 - SMALLCHAR_HEIGHT, 4 + wred,
CNSTI4 308
ADDRLP4 28
INDIRI4
SUBI4
CVIF4 4
ARGF4
CNSTF4 1113063424
ARGF4
ADDRLP4 28
INDIRI4
CNSTI4 4
ADDI4
CVIF4 4
ARGF4
CNSTF4 1098907648
ARGF4
ADDRLP4 168
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 1047
;1046:					 SMALLCHAR_HEIGHT, hred );
;1047:	}
LABELV $722
line 1048
;1048:	if ( CG_DrawStrlen( cg_blueName.string ) ) {
ADDRGP4 cg_blueName+16
ARGP4
ADDRLP4 236
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 236
INDIRI4
CNSTI4 0
EQI4 $725
line 1049
;1049:		CG_FillRect( 628 - wblue, SB_TOP - 48 - SMALLCHAR_HEIGHT, 4 + wblue,
CNSTI4 628
ADDRLP4 32
INDIRI4
SUBI4
CVIF4 4
ARGF4
CNSTF4 1113063424
ARGF4
ADDRLP4 32
INDIRI4
CNSTI4 4
ADDI4
CVIF4 4
ARGF4
CNSTF4 1098907648
ARGF4
ADDRLP4 184
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 1051
;1050:					 SMALLCHAR_HEIGHT, hblue );
;1051:	}
LABELV $725
line 1053
;1052:
;1053:	if ( CG_DrawStrlen( cg_redName.string ) ) {
ADDRGP4 cg_redName+16
ARGP4
ADDRLP4 240
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 240
INDIRI4
CNSTI4 0
EQI4 $728
line 1054
;1054:		CG_DrawPic( 308 - wred - 16, SB_TOP - 48 - SMALLCHAR_HEIGHT,
CNSTI4 308
ADDRLP4 28
INDIRI4
SUBI4
CNSTI4 16
SUBI4
CVIF4 4
ARGF4
CNSTF4 1113063424
ARGF4
ADDRLP4 244
CNSTF4 1098907648
ASGNF4
ADDRLP4 244
INDIRF4
ARGF4
ADDRLP4 244
INDIRF4
ARGF4
ADDRGP4 cgs+156680+568
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 1056
;1055:					16, 16, cgs.media.scoreboardTeamnameRed );
;1056:	}
LABELV $728
line 1057
;1057:	if ( CG_DrawStrlen( cg_blueName.string ) ) {
ADDRGP4 cg_blueName+16
ARGP4
ADDRLP4 244
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 244
INDIRI4
CNSTI4 0
EQI4 $733
line 1058
;1058:		CG_DrawPic( 628 - wblue - 16, SB_TOP - 48 - SMALLCHAR_HEIGHT,
CNSTI4 628
ADDRLP4 32
INDIRI4
SUBI4
CNSTI4 16
SUBI4
CVIF4 4
ARGF4
CNSTF4 1113063424
ARGF4
ADDRLP4 248
CNSTF4 1098907648
ASGNF4
ADDRLP4 248
INDIRF4
ARGF4
ADDRLP4 248
INDIRF4
ARGF4
ADDRGP4 cgs+156680+572
INDIRI4
ARGI4
ADDRGP4 CG_DrawPic
CALLV
pop
line 1060
;1059:					16, 16, cgs.media.scoreboardTeamnameBlue );
;1060:	}
LABELV $733
line 1062
;1061:
;1062:	CG_FillRect( 8, SB_TOP - 48, 304, 48, hred );
CNSTF4 1090519040
ARGF4
CNSTF4 1116471296
ARGF4
CNSTF4 1134034944
ARGF4
CNSTF4 1111490560
ARGF4
ADDRLP4 168
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 1063
;1063:	CG_FillRect( 328, SB_TOP - 48, 304, 48, hblue );
CNSTF4 1134821376
ARGF4
CNSTF4 1116471296
ARGF4
CNSTF4 1134034944
ARGF4
CNSTF4 1111490560
ARGF4
ADDRLP4 184
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 1065
;1064:
;1065:	if ( CG_DrawStrlen( cg_redName.string ) ) {
ADDRGP4 cg_redName+16
ARGP4
ADDRLP4 248
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 248
INDIRI4
CNSTI4 0
EQI4 $738
line 1066
;1066:		CG_DrawStringExt( 308 - wred, SB_TOP - 48 - SMALLCHAR_HEIGHT, cg_redName.string,
CNSTI4 308
ADDRLP4 28
INDIRI4
SUBI4
ARGI4
CNSTI4 54
ARGI4
ADDRGP4 cg_redName+16
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 252
CNSTI4 0
ASGNI4
ADDRLP4 252
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
CNSTI4 18
ARGI4
ADDRLP4 252
INDIRI4
ARGI4
ADDRLP4 252
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1069
;1067:						  colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4,
;1068:						  SMALLCHAR_HEIGHT, 18, 0, 0 );
;1069:	}
LABELV $738
line 1070
;1070:	if ( CG_DrawStrlen( cg_blueName.string ) ) {
ADDRGP4 cg_blueName+16
ARGP4
ADDRLP4 252
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 252
INDIRI4
CNSTI4 0
EQI4 $742
line 1071
;1071:		CG_DrawStringExt( 628 - wblue, SB_TOP - 48 - SMALLCHAR_HEIGHT, cg_blueName.string,
CNSTI4 628
ADDRLP4 32
INDIRI4
SUBI4
ARGI4
CNSTI4 54
ARGI4
ADDRGP4 cg_blueName+16
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 256
CNSTI4 0
ASGNI4
ADDRLP4 256
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 12
ARGI4
CNSTI4 16
ARGI4
CNSTI4 18
ARGI4
ADDRLP4 256
INDIRI4
ARGI4
ADDRLP4 256
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1074
;1072:						  colorWhite, qfalse, qtrue, SMALLCHAR_WIDTH + 4,
;1073:						  SMALLCHAR_HEIGHT, 18, 0, 0 );
;1074:	}
LABELV $742
line 1076
;1075:
;1076:	CG_DrawStringExt( 112, SB_TOP - 48 + 8, "Points  Players  AvgPing", colorRed, qfalse, qtrue, 8, 12, 0, 0, 0 );
CNSTI4 112
ARGI4
CNSTI4 78
ARGI4
ADDRGP4 $746
ARGP4
ADDRGP4 colorRed
ARGP4
ADDRLP4 256
CNSTI4 0
ASGNI4
ADDRLP4 256
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 256
INDIRI4
ARGI4
ADDRLP4 256
INDIRI4
ARGI4
ADDRLP4 256
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1077
;1077:	CG_DrawStringExt( 432, SB_TOP - 48 + 8, "Points  Players  AvgPing", colorBlue, qfalse, qtrue, 8, 12, 0, 0, 0 );
CNSTI4 432
ARGI4
CNSTI4 78
ARGI4
ADDRGP4 $746
ARGP4
ADDRGP4 colorBlue
ARGP4
ADDRLP4 260
CNSTI4 0
ASGNI4
ADDRLP4 260
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 260
INDIRI4
ARGI4
ADDRLP4 260
INDIRI4
ARGI4
ADDRLP4 260
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1079
;1078:
;1079:	CG_DrawStringExt( 136 - 20 / 2, SB_TOP - 48 + 8 + 12, "0", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 126
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $747
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 264
CNSTI4 0
ASGNI4
ADDRLP4 264
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 268
CNSTI4 20
ASGNI4
ADDRLP4 268
INDIRI4
ARGI4
ADDRLP4 268
INDIRI4
ARGI4
ADDRLP4 264
INDIRI4
ARGI4
ADDRLP4 264
INDIRI4
ARGI4
ADDRLP4 264
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1080
;1080:	CG_DrawStringExt( 204 - 20 / 2, SB_TOP - 48 + 8 + 12, "4", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 194
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $748
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 272
CNSTI4 0
ASGNI4
ADDRLP4 272
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 276
CNSTI4 20
ASGNI4
ADDRLP4 276
INDIRI4
ARGI4
ADDRLP4 276
INDIRI4
ARGI4
ADDRLP4 272
INDIRI4
ARGI4
ADDRLP4 272
INDIRI4
ARGI4
ADDRLP4 272
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1081
;1081:	CG_DrawStringExt( 276 - 20 / 2, SB_TOP - 48 + 8 + 12, "0", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 266
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $747
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 280
CNSTI4 0
ASGNI4
ADDRLP4 280
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 284
CNSTI4 20
ASGNI4
ADDRLP4 284
INDIRI4
ARGI4
ADDRLP4 284
INDIRI4
ARGI4
ADDRLP4 280
INDIRI4
ARGI4
ADDRLP4 280
INDIRI4
ARGI4
ADDRLP4 280
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1083
;1082:
;1083:	CG_DrawStringExt( 456 - 20 / 2, SB_TOP - 48 + 8 + 12, "0", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 446
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $747
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 288
CNSTI4 0
ASGNI4
ADDRLP4 288
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 292
CNSTI4 20
ASGNI4
ADDRLP4 292
INDIRI4
ARGI4
ADDRLP4 292
INDIRI4
ARGI4
ADDRLP4 288
INDIRI4
ARGI4
ADDRLP4 288
INDIRI4
ARGI4
ADDRLP4 288
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1084
;1084:	CG_DrawStringExt( 524 - 20 / 2, SB_TOP - 48 + 8 + 12, "4", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 514
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $748
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 296
CNSTI4 0
ASGNI4
ADDRLP4 296
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 300
CNSTI4 20
ASGNI4
ADDRLP4 300
INDIRI4
ARGI4
ADDRLP4 300
INDIRI4
ARGI4
ADDRLP4 296
INDIRI4
ARGI4
ADDRLP4 296
INDIRI4
ARGI4
ADDRLP4 296
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1085
;1085:	CG_DrawStringExt( 596 - 20 / 2, SB_TOP - 48 + 8 + 12, "0", colorWhite, qfalse, qtrue, 20, 20, 0, 0, 0 );
CNSTI4 586
ARGI4
CNSTI4 90
ARGI4
ADDRGP4 $747
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 304
CNSTI4 0
ASGNI4
ADDRLP4 304
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 308
CNSTI4 20
ASGNI4
ADDRLP4 308
INDIRI4
ARGI4
ADDRLP4 308
INDIRI4
ARGI4
ADDRLP4 304
INDIRI4
ARGI4
ADDRLP4 304
INDIRI4
ARGI4
ADDRLP4 304
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1087
;1086:
;1087:	y = SB_TOP;
ADDRLP4 4
CNSTI4 118
ASGNI4
line 1091
;1088:
;1089:	// If there are more than SB_MAXCLIENTS_NORMAL, use the interleaved scores
;1090:
;1091:	maxClients = SB_MAXCLIENTS_INTER;
ADDRLP4 24
CNSTI4 17
ASGNI4
line 1092
;1092:	lineHeight = SB_INTER_HEIGHT;
ADDRLP4 8
CNSTI4 16
ASGNI4
line 1093
;1093:	topBorderSize = 8;
ADDRLP4 212
CNSTI4 8
ASGNI4
line 1094
;1094:	bottomBorderSize = 16;
ADDRLP4 216
CNSTI4 16
ASGNI4
line 1096
;1095:
;1096:	localClient = qfalse;
ADDRGP4 localClient
CNSTI4 0
ASGNI4
line 1098
;1097:
;1098:	if ( cgs.gametype >= GT_TEAM ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
LTI4 $749
line 1105
;1099:		//
;1100:		// teamplay scoreboard
;1101:		//
;1102:		// y += lineHeight/2;
;1103:
;1104:
;1105:		vec4_t	sred = { 1.0f, 0.12f, 0.12f, 0.2f };
ADDRLP4 312
ADDRGP4 $752
INDIRB
ASGNB 16
line 1106
;1106:		vec4_t	sblue = { 0.12f, 0.12f, 1.0f, 0.2f };
ADDRLP4 328
ADDRGP4 $753
INDIRB
ASGNB 16
line 1108
;1107:
;1108:		Com_sprintf( string, sizeof( string ), "%i", cg.teamScores[0] );
ADDRLP4 40
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRGP4 cg+110476
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1109
;1109:		CG_DrawStringExt( 8, 70, string, colorWhite, qfalse, qfalse, GIANTCHAR_WIDTH, GIANTCHAR_HEIGHT, 0, FONT_BLOCK, 0 );
CNSTI4 8
ARGI4
CNSTI4 70
ARGI4
ADDRLP4 40
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 344
CNSTI4 0
ASGNI4
ADDRLP4 344
INDIRI4
ARGI4
ADDRLP4 344
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 344
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 344
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1111
;1110:
;1111:		Com_sprintf( string, sizeof( string ), "%i", cg.teamScores[1] );
ADDRLP4 40
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $405
ARGP4
ADDRGP4 cg+110476+4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1112
;1112:		CG_DrawStringExt( 328, 70, string, colorWhite, qfalse, qfalse, GIANTCHAR_WIDTH, GIANTCHAR_HEIGHT, 0, FONT_BLOCK, 0 );
CNSTI4 328
ARGI4
CNSTI4 70
ARGI4
ADDRLP4 40
ARGP4
ADDRGP4 colorWhite
ARGP4
ADDRLP4 348
CNSTI4 0
ASGNI4
ADDRLP4 348
INDIRI4
ARGI4
ADDRLP4 348
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 348
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 348
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1114
;1113:
;1114:		y += TINYCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 8
ADDI4
ASGNI4
line 1116
;1115:
;1116:		CG_DrawStringExt( 40, y, "Score NET Ping Min  Name", colorRed, qfalse, qtrue, TINYCHAR_WIDTH, TINYCHAR_HEIGHT + 4, 0, 0, 0 );
CNSTI4 40
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 $757
ARGP4
ADDRGP4 colorRed
ARGP4
ADDRLP4 352
CNSTI4 0
ASGNI4
ADDRLP4 352
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 352
INDIRI4
ARGI4
ADDRLP4 352
INDIRI4
ARGI4
ADDRLP4 352
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1117
;1117:		CG_DrawStringExt( 360, y, "Score NET Ping Min  Name", colorBlue, qfalse, qtrue, TINYCHAR_WIDTH, TINYCHAR_HEIGHT + 4, 0, 0, 0 );
CNSTI4 360
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 $757
ARGP4
ADDRGP4 colorBlue
ARGP4
ADDRLP4 356
CNSTI4 0
ASGNI4
ADDRLP4 356
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 356
INDIRI4
ARGI4
ADDRLP4 356
INDIRI4
ARGI4
ADDRLP4 356
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1119
;1118:
;1119:		y += SMALLCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 16
ADDI4
ASGNI4
line 1121
;1120:
;1121:		n1 = CG_TeamScoreboard( y, TEAM_RED, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 360
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 360
INDIRI4
ASGNI4
line 1122
;1122:		n2 = CG_TeamScoreboard( y, TEAM_BLUE, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 364
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 36
ADDRLP4 364
INDIRI4
ASGNI4
line 1124
;1123:
;1124:		if ( n1 >= n2 )
ADDRLP4 16
INDIRI4
ADDRLP4 36
INDIRI4
LTI4 $758
line 1125
;1125:			CG_FillRect( 8, SB_TOP, 304, n1 * lineHeight + 32, sred );
CNSTF4 1090519040
ARGF4
CNSTF4 1122762752
ARGF4
CNSTF4 1134034944
ARGF4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
CVIF4 4
ARGF4
ADDRLP4 312
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
ADDRGP4 $759
JUMPV
LABELV $758
line 1127
;1126:		else
;1127:			CG_FillRect( 8, SB_TOP, 304, n2 * lineHeight + 32, sred );
CNSTF4 1090519040
ARGF4
CNSTF4 1122762752
ARGF4
CNSTF4 1134034944
ARGF4
ADDRLP4 36
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
CVIF4 4
ARGF4
ADDRLP4 312
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
LABELV $759
line 1128
;1128:		maxClients -= n1;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 16
INDIRI4
SUBI4
ASGNI4
line 1130
;1129:
;1130:		if ( n1 >= n2 )
ADDRLP4 16
INDIRI4
ADDRLP4 36
INDIRI4
LTI4 $760
line 1131
;1131:			CG_FillRect( 328, SB_TOP, 304, n1 * lineHeight + 32, sblue );
CNSTF4 1134821376
ARGF4
CNSTF4 1122762752
ARGF4
CNSTF4 1134034944
ARGF4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
CVIF4 4
ARGF4
ADDRLP4 328
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
ADDRGP4 $761
JUMPV
LABELV $760
line 1133
;1132:		else
;1133:			CG_FillRect( 328, SB_TOP, 304, n2 * lineHeight + 32, sblue );
CNSTF4 1134821376
ARGF4
CNSTF4 1122762752
ARGF4
CNSTF4 1134034944
ARGF4
ADDRLP4 36
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
CVIF4 4
ARGF4
ADDRLP4 328
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
LABELV $761
line 1134
;1134:		maxClients -= n2;
ADDRLP4 24
ADDRLP4 24
INDIRI4
ADDRLP4 36
INDIRI4
SUBI4
ASGNI4
line 1136
;1135:
;1136:		if ( n1 >= n2 )
ADDRLP4 16
INDIRI4
ADDRLP4 36
INDIRI4
LTI4 $762
line 1137
;1137:			y = SB_TOP + n1 * lineHeight + 32 + 4;
ADDRLP4 4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 118
ADDI4
CNSTI4 32
ADDI4
CNSTI4 4
ADDI4
ASGNI4
ADDRGP4 $763
JUMPV
LABELV $762
line 1139
;1138:		else
;1139:			y = SB_TOP + n2 * lineHeight + 32 + 4;
ADDRLP4 4
ADDRLP4 36
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 118
ADDI4
CNSTI4 32
ADDI4
CNSTI4 4
ADDI4
ASGNI4
LABELV $763
line 1141
;1140:
;1141:		CG_DrawStringExt( 320 - 10 * SMALLCHAR_WIDTH / 2, y,
CNSTI4 280
ARGI4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 $764
ARGP4
ADDRGP4 colorYellow
ARGP4
ADDRLP4 368
CNSTI4 0
ASGNI4
ADDRLP4 368
INDIRI4
ARGI4
CNSTI4 1
ARGI4
CNSTI4 8
ARGI4
CNSTI4 12
ARGI4
ADDRLP4 368
INDIRI4
ARGI4
ADDRLP4 368
INDIRI4
ARGI4
ADDRLP4 368
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1145
;1142:						  "Spectators", colorYellow, qfalse, qtrue, SMALLCHAR_WIDTH,
;1143:						  SMALLCHAR_HEIGHT - 4, 0, 0, 0 );
;1144:
;1145:		n1 = CG_TeamScoreboard( y, TEAM_SPECTATOR, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 372
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 372
INDIRI4
ASGNI4
line 1146
;1146:		y += (n1 * lineHeight) + SMALLCHAR_HEIGHT * 2;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 32
ADDI4
ADDI4
ASGNI4
line 1148
;1147:
;1148:	} else {
ADDRGP4 $750
JUMPV
LABELV $749
line 1152
;1149:		//
;1150:		// free for all scoreboard
;1151:		//
;1152:		n1 = CG_TeamScoreboard( y, TEAM_FREE, fade, maxClients, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 312
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 16
ADDRLP4 312
INDIRI4
ASGNI4
line 1153
;1153:		y += (n1 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 16
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 1154
;1154:		n2 = CG_TeamScoreboard( y, TEAM_SPECTATOR, fade, maxClients - n1, lineHeight );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 24
INDIRI4
ADDRLP4 16
INDIRI4
SUBI4
ARGI4
ADDRLP4 8
INDIRI4
ARGI4
ADDRLP4 316
ADDRGP4 CG_TeamScoreboard
CALLI4
ASGNI4
ADDRLP4 36
ADDRLP4 316
INDIRI4
ASGNI4
line 1155
;1155:		y += (n2 * lineHeight) + BIGCHAR_HEIGHT;
ADDRLP4 4
ADDRLP4 4
INDIRI4
ADDRLP4 36
INDIRI4
ADDRLP4 8
INDIRI4
MULI4
CNSTI4 16
ADDI4
ADDI4
ASGNI4
line 1156
;1156:	}
LABELV $750
line 1158
;1157:
;1158:	if (!localClient) {
ADDRGP4 localClient
INDIRI4
CNSTI4 0
NEI4 $765
line 1160
;1159:		// draw local client at the bottom
;1160:		for ( i = 0 ; i < cg.numScores ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $770
JUMPV
LABELV $767
line 1161
;1161:			if ( cg.scores[i].client == cg.snap->ps.clientNum ) {
CNSTI4 156
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 cg+110484
ADDP4
INDIRI4
ADDRGP4 cg+36
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
NEI4 $772
line 1162
;1162:				CG_NewDrawClientScore( y, &cg.scores[i], fadeColor, fade, lineHeight == SB_NORMAL_HEIGHT );
ADDRLP4 4
INDIRI4
ARGI4
CNSTI4 156
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 cg+110484
ADDP4
ARGP4
ADDRLP4 20
INDIRP4
ARGP4
ADDRLP4 12
INDIRF4
ARGF4
ADDRLP4 8
INDIRI4
CNSTI4 40
NEI4 $778
ADDRLP4 312
CNSTI4 1
ASGNI4
ADDRGP4 $779
JUMPV
LABELV $778
ADDRLP4 312
CNSTI4 0
ASGNI4
LABELV $779
ADDRLP4 312
INDIRI4
ARGI4
ADDRGP4 CG_NewDrawClientScore
CALLV
pop
line 1163
;1163:				break;
ADDRGP4 $769
JUMPV
LABELV $772
line 1165
;1164:			}
;1165:		}
LABELV $768
line 1160
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $770
ADDRLP4 0
INDIRI4
ADDRGP4 cg+110468
INDIRI4
LTI4 $767
LABELV $769
line 1166
;1166:	}
LABELV $765
line 1169
;1167:
;1168:	// load any models that have been deferred
;1169:	if ( ++cg.deferredPlayerLoading > 10 ) {
ADDRLP4 312
ADDRGP4 cg+16
ASGNP4
ADDRLP4 316
ADDRLP4 312
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 312
INDIRP4
ADDRLP4 316
INDIRI4
ASGNI4
ADDRLP4 316
INDIRI4
CNSTI4 10
LEI4 $780
line 1170
;1170:		CG_LoadDeferredPlayers();
ADDRGP4 CG_LoadDeferredPlayers
CALLV
pop
line 1171
;1171:	}
LABELV $780
line 1173
;1172:
;1173:	return qtrue;
CNSTI4 1
RETI4
LABELV $673
endproc CG_DrawNewScoreboard 376 44
proc CG_CenterGiantLine 32 44
line 1183
;1174:}
;1175:
;1176://================================================================================
;1177:
;1178:/*
;1179:================
;1180:CG_CenterGiantLine
;1181:================
;1182:*/
;1183:static void CG_CenterGiantLine( float y, const char *string ) {
line 1187
;1184:	float		x;
;1185:	vec4_t		color;
;1186:
;1187:	color[0] = 1;
ADDRLP4 0
CNSTF4 1065353216
ASGNF4
line 1188
;1188:	color[1] = 1;
ADDRLP4 0+4
CNSTF4 1065353216
ASGNF4
line 1189
;1189:	color[2] = 1;
ADDRLP4 0+8
CNSTF4 1065353216
ASGNF4
line 1190
;1190:	color[3] = 1;
ADDRLP4 0+12
CNSTF4 1065353216
ASGNF4
line 1192
;1191:
;1192:	x = 0.5 * ( 640 - GIANT_WIDTH * CG_DrawStrlen( string ) );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 20
ADDRGP4 CG_DrawStrlen
CALLI4
ASGNI4
ADDRLP4 16
CNSTF4 1056964608
CNSTI4 640
ADDRLP4 20
INDIRI4
CNSTI4 5
LSHI4
SUBI4
CVIF4 4
MULF4
ASGNF4
line 1194
;1193:
;1194:	CG_DrawStringExt( x, y, string, color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
ADDRLP4 16
INDIRF4
CVFI4 4
ARGI4
ADDRFP4 0
INDIRF4
CVFI4 4
ARGI4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 24
CNSTI4 1
ASGNI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 28
CNSTI4 0
ASGNI4
ADDRLP4 28
INDIRI4
ARGI4
ADDRLP4 28
INDIRI4
ARGI4
ADDRLP4 28
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1195
;1195:}
LABELV $783
endproc CG_CenterGiantLine 32 44
export CG_DrawOldTourneyScoreboard
proc CG_DrawOldTourneyScoreboard 108 44
line 1204
;1196:
;1197:/*
;1198:=================
;1199:CG_DrawTourneyScoreboard
;1200:
;1201:Draw the oversize scoreboard for tournements
;1202:=================
;1203:*/
;1204:void CG_DrawOldTourneyScoreboard( void ) {
line 1213
;1205:	const char		*s;
;1206:	vec4_t			color;
;1207:	int				min, tens, ones;
;1208:	clientInfo_t	*ci;
;1209:	int				y;
;1210:	int				i;
;1211:
;1212:	// request more scores regularly
;1213:	if ( cg.scoresRequestTime + 2000 < cg.time ) {
ADDRGP4 cg+110464
INDIRI4
CNSTI4 2000
ADDI4
ADDRGP4 cg+107604
INDIRI4
GEI4 $788
line 1214
;1214:		cg.scoresRequestTime = cg.time;
ADDRGP4 cg+110464
ADDRGP4 cg+107604
INDIRI4
ASGNI4
line 1215
;1215:		trap_SendClientCommand( "score" );
ADDRGP4 $794
ARGP4
ADDRGP4 trap_SendClientCommand
CALLV
pop
line 1216
;1216:	}
LABELV $788
line 1218
;1217:
;1218:	color[0] = 1;
ADDRLP4 8
CNSTF4 1065353216
ASGNF4
line 1219
;1219:	color[1] = 1;
ADDRLP4 8+4
CNSTF4 1065353216
ASGNF4
line 1220
;1220:	color[2] = 1;
ADDRLP4 8+8
CNSTF4 1065353216
ASGNF4
line 1221
;1221:	color[3] = 1;
ADDRLP4 8+12
CNSTF4 1065353216
ASGNF4
line 1224
;1222:
;1223:	// draw the dialog background
;1224:	color[0] = color[1] = color[2] = 0;
ADDRLP4 44
CNSTF4 0
ASGNF4
ADDRLP4 8+8
ADDRLP4 44
INDIRF4
ASGNF4
ADDRLP4 8+4
ADDRLP4 44
INDIRF4
ASGNF4
ADDRLP4 8
ADDRLP4 44
INDIRF4
ASGNF4
line 1225
;1225:	color[3] = 1;
ADDRLP4 8+12
CNSTF4 1065353216
ASGNF4
line 1226
;1226:	CG_FillRect( 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, color );
ADDRLP4 48
CNSTF4 0
ASGNF4
ADDRLP4 48
INDIRF4
ARGF4
ADDRLP4 48
INDIRF4
ARGF4
CNSTF4 1142947840
ARGF4
CNSTF4 1139802112
ARGF4
ADDRLP4 8
ARGP4
ADDRGP4 CG_FillRect
CALLV
pop
line 1229
;1227:
;1228:	// print the mesage of the day
;1229:	s = CG_ConfigString( CS_MOTD );
CNSTI4 4
ARGI4
ADDRLP4 52
ADDRGP4 CG_ConfigString
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 52
INDIRP4
ASGNP4
line 1230
;1230:	if ( !s[0] ) {
ADDRLP4 4
INDIRP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $801
line 1231
;1231:		s = "Scoreboard";
ADDRLP4 4
ADDRGP4 $803
ASGNP4
line 1232
;1232:	}
LABELV $801
line 1235
;1233:
;1234:	// print optional title
;1235:	CG_CenterGiantLine( 8, s );
CNSTF4 1090519040
ARGF4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 CG_CenterGiantLine
CALLV
pop
line 1238
;1236:
;1237:	// print server time
;1238:	ones = cg.time / 1000;
ADDRLP4 32
ADDRGP4 cg+107604
INDIRI4
CNSTI4 1000
DIVI4
ASGNI4
line 1239
;1239:	min = ones / 60;
ADDRLP4 36
ADDRLP4 32
INDIRI4
CNSTI4 60
DIVI4
ASGNI4
line 1240
;1240:	ones %= 60;
ADDRLP4 32
ADDRLP4 32
INDIRI4
CNSTI4 60
MODI4
ASGNI4
line 1241
;1241:	tens = ones / 10;
ADDRLP4 40
ADDRLP4 32
INDIRI4
CNSTI4 10
DIVI4
ASGNI4
line 1242
;1242:	ones %= 10;
ADDRLP4 32
ADDRLP4 32
INDIRI4
CNSTI4 10
MODI4
ASGNI4
line 1243
;1243:	s = va("%i:%i%i", min, tens, ones );
ADDRGP4 $805
ARGP4
ADDRLP4 36
INDIRI4
ARGI4
ADDRLP4 40
INDIRI4
ARGI4
ADDRLP4 32
INDIRI4
ARGI4
ADDRLP4 56
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 56
INDIRP4
ASGNP4
line 1245
;1244:
;1245:	CG_CenterGiantLine( 64, s );
CNSTF4 1115684864
ARGF4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 CG_CenterGiantLine
CALLV
pop
line 1250
;1246:
;1247:
;1248:	// print the two scores
;1249:
;1250:	y = 160;
ADDRLP4 24
CNSTI4 160
ASGNI4
line 1251
;1251:	if ( cgs.gametype >= GT_TEAM ) {
ADDRGP4 cgs+31456
INDIRI4
CNSTI4 3
LTI4 $806
line 1255
;1252:		//
;1253:		// teamplay scoreboard
;1254:		//
;1255:		CG_DrawStringExt( 8, y, "Red Team", color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
CNSTI4 8
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRGP4 $809
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 60
CNSTI4 1
ASGNI4
ADDRLP4 60
INDIRI4
ARGI4
ADDRLP4 60
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1256
;1256:		s = va("%i", cg.teamScores[0] );
ADDRGP4 $405
ARGP4
ADDRGP4 cg+110476
INDIRI4
ARGI4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 68
INDIRP4
ASGNP4
line 1257
;1257:		CG_DrawStringExt( 632 - GIANT_WIDTH * strlen(s), y, s, color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 72
ADDRGP4 strlen
CALLI4
ASGNI4
CNSTI4 632
ADDRLP4 72
INDIRI4
CNSTI4 5
LSHI4
SUBI4
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 76
CNSTI4 1
ASGNI4
ADDRLP4 76
INDIRI4
ARGI4
ADDRLP4 76
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 80
CNSTI4 0
ASGNI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1259
;1258:
;1259:		y += 64;
ADDRLP4 24
ADDRLP4 24
INDIRI4
CNSTI4 64
ADDI4
ASGNI4
line 1261
;1260:
;1261:		CG_DrawStringExt( 8, y, "Blue Team", color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
CNSTI4 8
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRGP4 $811
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 84
CNSTI4 1
ASGNI4
ADDRLP4 84
INDIRI4
ARGI4
ADDRLP4 84
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 88
CNSTI4 0
ASGNI4
ADDRLP4 88
INDIRI4
ARGI4
ADDRLP4 88
INDIRI4
ARGI4
ADDRLP4 88
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1262
;1262:		s = va("%i", cg.teamScores[1] );
ADDRGP4 $405
ARGP4
ADDRGP4 cg+110476+4
INDIRI4
ARGI4
ADDRLP4 92
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 92
INDIRP4
ASGNP4
line 1263
;1263:		CG_DrawStringExt( 632 - GIANT_WIDTH * strlen(s), y, s, color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 96
ADDRGP4 strlen
CALLI4
ASGNI4
CNSTI4 632
ADDRLP4 96
INDIRI4
CNSTI4 5
LSHI4
SUBI4
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 100
CNSTI4 1
ASGNI4
ADDRLP4 100
INDIRI4
ARGI4
ADDRLP4 100
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 104
CNSTI4 0
ASGNI4
ADDRLP4 104
INDIRI4
ARGI4
ADDRLP4 104
INDIRI4
ARGI4
ADDRLP4 104
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1264
;1264:	} else {
ADDRGP4 $807
JUMPV
LABELV $806
line 1268
;1265:		//
;1266:		// free for all scoreboard
;1267:		//
;1268:		for ( i = 0 ; i < MAX_CLIENTS ; i++ ) {
ADDRLP4 28
CNSTI4 0
ASGNI4
LABELV $814
line 1269
;1269:			ci = &cgs.clientinfo[i];
ADDRLP4 0
CNSTI4 1776
ADDRLP4 28
INDIRI4
MULI4
ADDRGP4 cgs+40960
ADDP4
ASGNP4
line 1270
;1270:			if ( !ci->infoValid ) {
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 0
NEI4 $819
line 1271
;1271:				continue;
ADDRGP4 $815
JUMPV
LABELV $819
line 1273
;1272:			}
;1273:			if ( ci->team != TEAM_FREE ) {
ADDRLP4 0
INDIRP4
CNSTI4 68
ADDP4
INDIRI4
CNSTI4 0
EQI4 $821
line 1274
;1274:				continue;
ADDRGP4 $815
JUMPV
LABELV $821
line 1277
;1275:			}
;1276:
;1277:			CG_DrawStringExt( 8, y, ci->name, color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
CNSTI4 8
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 4
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 60
CNSTI4 1
ASGNI4
ADDRLP4 60
INDIRI4
ARGI4
ADDRLP4 60
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRLP4 64
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1278
;1278:			s = va("%i", ci->score );
ADDRGP4 $405
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 128
ADDP4
INDIRI4
ARGI4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 68
INDIRP4
ASGNP4
line 1279
;1279:			CG_DrawStringExt( 632 - GIANT_WIDTH * strlen(s), y, s, color, qtrue, qtrue, GIANT_WIDTH, GIANT_HEIGHT, 0, 0, 0 );
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 72
ADDRGP4 strlen
CALLI4
ASGNI4
CNSTI4 632
ADDRLP4 72
INDIRI4
CNSTI4 5
LSHI4
SUBI4
ARGI4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 76
CNSTI4 1
ASGNI4
ADDRLP4 76
INDIRI4
ARGI4
ADDRLP4 76
INDIRI4
ARGI4
CNSTI4 32
ARGI4
CNSTI4 48
ARGI4
ADDRLP4 80
CNSTI4 0
ASGNI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRLP4 80
INDIRI4
ARGI4
ADDRGP4 CG_DrawStringExt
CALLV
pop
line 1280
;1280:			y += 64;
ADDRLP4 24
ADDRLP4 24
INDIRI4
CNSTI4 64
ADDI4
ASGNI4
line 1281
;1281:		}
LABELV $815
line 1268
ADDRLP4 28
ADDRLP4 28
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 64
LTI4 $814
line 1282
;1282:	}
LABELV $807
line 1283
;1283:}
LABELV $787
endproc CG_DrawOldTourneyScoreboard 108 44
bss
align 4
LABELV localClient
skip 4
import trap_Trace
import CG_NewParticleArea
import initparticles
import CG_ParticleExplosion
import CG_ParticleMisc
import CG_ParticleDust
import CG_ParticleSparks
import CG_ParticleBulletDebris
import CG_ParticleSnowFlurry
import CG_AddParticleShrapnel
import CG_ParticleSmoke
import CG_ParticleSnow
import CG_AddParticles
import CG_ClearParticles
import trap_GetEntityToken
import trap_getCameraInfo
import trap_startCamera
import trap_loadCamera
import trap_SnapVector
import trap_CIN_SetExtents
import trap_CIN_DrawCinematic
import trap_CIN_RunCinematic
import trap_CIN_StopCinematic
import trap_CIN_PlayCinematic
import trap_RealTime
import trap_Key_GetKey
import trap_Key_SetCatcher
import trap_Key_GetCatcher
import trap_Key_IsDown
import trap_R_RegisterFont
import trap_MemoryRemaining
import testPrintFloat
import testPrintInt
import trap_SetUserCmdValue
import trap_GetUserCmd
import trap_GetCurrentCmdNumber
import trap_GetServerCommand
import trap_GetSnapshot
import trap_GetCurrentSnapshotNumber
import trap_GetGameState
import trap_GetGlconfig
import trap_R_RemapShader
import trap_R_LerpTag
import trap_R_ModelBounds
import trap_R_DrawStretchPic
import trap_R_SetColor
import trap_R_RenderScene
import trap_R_LightForPoint
import trap_R_AddLightToScene
import trap_R_AddPolysToScene
import trap_R_AddPolyToScene
import trap_R_AddRefEntityToScene
import trap_R_ClearScene
import trap_R_RegisterShaderNoMip
import trap_R_RegisterShader
import trap_R_RegisterSkin
import trap_R_RegisterModel
import trap_R_LoadWorldMap
import trap_S_StopBackgroundTrack
import trap_S_StartBackgroundTrack
import trap_S_RegisterSound
import trap_S_Respatialize
import trap_S_UpdateEntityPosition
import trap_S_AddRealLoopingSound
import trap_S_AddLoopingSound
import trap_S_ClearLoopingSounds
import trap_S_StartLocalSound
import trap_S_StopLoopingSound
import trap_S_StartSound
import trap_CM_MarkFragments
import trap_CM_TransformedBoxTrace
import trap_CM_BoxTrace
import trap_CM_TransformedPointContents
import trap_CM_PointContents
import trap_CM_TempBoxModel
import trap_CM_InlineModel
import trap_CM_NumInlineModels
import trap_CM_LoadMap
import trap_UpdateScreen
import trap_SendClientCommand
import trap_AddCommand
import trap_SendConsoleCommand
import trap_FS_Seek
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_Args
import trap_Cvar_VariableStringBuffer
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_Milliseconds
import trap_Error
import trap_Print
import CG_AddGib
import Q_Isfreeze
import CG_BodyObituary
import CG_CheckChangedPredictableEvents
import CG_TransitionPlayerState
import CG_Respawn
import CG_PlayBufferedVoiceChats
import CG_VoiceChatLocal
import CG_ShaderStateChanged
import CG_LoadVoiceChats
import CG_SetConfigValues
import CG_ParseServerinfo
import CG_ExecuteNewServerCommands
import CG_InitConsoleCommands
import CG_ConsoleCommand
import CG_DrawInformation
import CG_LoadingClient
import CG_LoadingItem
import CG_LoadingString
import CG_TransitionEntity
import CG_ProcessSnapshots
import CG_MakeExplosion
import CG_Bleed
import CG_BigExplode
import CG_GibPlayer
import CG_ScorePlum
import CG_SpawnEffect
import CG_BubbleTrail
import CG_SmokePuff
import CG_AddLocalEntities
import CG_AllocLocalEntity
import CG_InitLocalEntities
import CG_ImpactMark
import CG_AddMarks
import CG_InitMarkPolys
import CG_OutOfAmmoChange
import CG_DrawWeaponSelect
import CG_AddPlayerWeapon
import CG_AddViewWeapon
import CG_GrappleTrail
import CG_RailTrail
import CG_Bullet
import CG_ShotgunFire
import CG_MissileHitPlayer
import CG_MissileHitWall
import CG_FireGrapple
import CG_FireWeapon
import CG_RegisterItemVisuals
import CG_RegisterWeapon
import CG_Weapon_f
import CG_PrevWeapon_f
import CG_NextWeapon_f
import CG_PositionRotatedEntityOnTag
import CG_PositionEntityOnTag
import CG_AdjustPositionForMover
import CG_Beam
import CG_AddPacketEntities
import CG_SetEntitySoundPosition
import CG_PainEvent
import CG_EntityEvent
import CG_PlaceString
import CG_CheckEvents
import CG_LoadDeferredPlayers
import CG_PredictPlayerState
import CG_Trace
import CG_PointContents
import CG_BuildSolidList
import CG_ParseColors
import isEnemy
import isTeammate
import CG_CustomSound
import CG_NewClientInfo
import CG_AddRefEntityWithPowerups
import CG_ResetPlayerEntity
import CG_Player
import CG_DrawOBs
import CG_ExtractToken
import CG_StatusHandle
import CG_OtherTeamHasFlag
import CG_YourTeamHasFlag
import CG_GameTypeString
import CG_CheckOrderPending
import CG_Text_PaintChar
import CG_Draw3DModel
import CG_GetKillerText
import CG_GetGameStatusText
import CG_GetTeamColor
import CG_InitTeamChat
import CG_SetPrintString
import CG_ShowResponseHead
import CG_RunMenuScript
import CG_OwnerDrawVisible
import CG_GetValue
import CG_SelectNextPlayer
import CG_SelectPrevPlayer
import CG_Text_Height
import CG_Text_Width
import CG_Text_Paint
import CG_OwnerDraw
import CG_DrawTeamBackground
import CG_DrawFlagModel
import CG_DrawActive
import CG_DrawHead
import CG_CenterPrint
import CG_AddLagometerSnapshotInfo
import CG_AddLagometerFrameInfo
import CG_DrawHud2D
import CG_ScanForCrosshairEntity
import CG_DrawTeamInfo
import CG_DrawSnapshot
import CG_DrawScoreboard
import CG_DrawReward
import CG_DrawKeyPress
import CG_DrawIntermission
import CG_DrawHoldableItem
import CG_DrawDisconnect
import CG_DrawCrosshair
import CG_DrawClock
import CG_DrawCenterString
import CG_Alarm
import CG_FigureHUDColor
import DrawMOTDBox
import teamChat2
import teamChat1
import systemChat
import drawTeamOverlayModificationCount
import numSortedTeamPlayers
import sortedTeamPlayers
import CG_DrawTopBottom
import CG_DrawSides
import CG_DrawRect
import UI_DrawProportionalString
import CG_GetColorForHealth
import CG_ColorForHealth
import CG_TileClear
import CG_TeamColor
import CG_FadeFromColorTo
import CG_FadeColor
import CG_DrawStrlen
import CG_DrawSmallStringColor
import CG_DrawSmallString
import CG_DrawBigStringColor
import CG_DrawBigString
import CG_DrawStringExt
import CG_DrawString
import CG_DrawPic
import CG_FillRect
import CG_AdjustFrom640
import CG_DrawActiveFrame
import CG_AddBufferedSound
import CG_ZoomUp_f
import CG_ZoomDown_f
import CG_TestModelPrevSkin_f
import CG_TestModelNextSkin_f
import CG_TestModelPrevFrame_f
import CG_TestModelNextFrame_f
import CG_TestGun_f
import CG_TestModel_f
import CG_BuildSpectatorString
import CG_GetSelectedScore
import CG_SetScoreSelection
import CG_RankRunFrame
import CG_EventHandling
import CG_MouseEvent
import CG_KeyEvent
import CG_LoadMenus
import CG_LastAttacker
import CG_CrosshairPlayer
import CG_UpdateCvars
import CG_StartMusic
import CG_Error
import CG_Printf
import CG_Argv
import CG_ConfigString
import CG_Cvar_ClampInt
import CG_AddBoundingBox
import CG_PredictWeaponEffects
import CG_GetFadeTime
import cg_itemFX
import cg_lightningImpact
import cg_smokeGrowth_RL
import cg_smokeGrowth_GL
import cg_smokeRadius_RL
import cg_smokeRadius_GL
import cg_smoke_SG
import cg_damageDraw
import cg_fallKick
import cg_fontFade
import cg_debugModels
import cg_blueName
import cg_redName
import ch_shadowOffset
import cg_oldScoreboard
import cg_crosshairPulse
import cg_autoRecord
import cg_autoScreenshot
import s_ambient
import s_announcer
import cg_noteamchatbeep
import cg_nochatbeep
import cg_railHum
import cg_fixedTeleporterAngles
import cg_fastRespawn_override
import cg_muzzleFlash
import cg_drawDeathMessage
import cg_aimNudge
import cg_aimType
import cg_fullWeaponCycle
import cl_timeNudge
import sex
import ch_viewKeyPress
import ch_weaponSideBar
import ch_OBDetector
import ch_Speedometer
import ch_file
import language
import cg_motdDisplayTime
import cg_optimizePrediction
import cg_projectileNudge
import sv_fps
import cg_drawBBox
import cg_debugDelag
import cg_delag
import cl_guid
import cl_maxpackets
import snaps
import com_maxfps
import cl_packetdup
import rate
import color2
import color1
import colors
import r_vertexLight
import cg_deadBodyDarken
import cg_adjustTeamColors
import cg_TeamColors
import cg_EnemyColors
import cg_forceColors
import cg_teamModel
import cg_enemyModel
import g_allowHandicap
import g_pro_mode
import g_delagHitscan
import g_gamemode
import g_allowReady
import g_fastSwitch
import g_interference
import g_DynamicGauntletCycle
import weap_bfgCycle
import weap_plasmagunCycle
import weap_railgunCycle
import weap_rocketlauncherCycle
import weap_lightninggunCycle
import weap_grenadelauncherCycle
import weap_shotgunCycle
import weap_machinegunCycle
import weap_gauntletCycle
import weap_enableHook
import cg_enableBreath
import cg_trueLightning
import cg_oldPlasma
import cg_oldRocket
import cg_railStyle
import cg_noProjectileTrail
import cg_noTaunt
import cg_bigFont
import cg_smallFont
import cg_cameraMode
import cg_timescale
import cg_timescaleFadeSpeed
import cg_timescaleFadeEnd
import cg_cameraOrbitDelay
import cg_cameraOrbit
import cg_pmove_fixed
import sv_lock_pmove
import pmove_msec
import pmove_fixed
import cg_smoothClients
import cg_scorePlum
import cg_noVoiceText
import cg_noVoiceChats
import cg_teamChatsOnly
import cg_drawFriend
import cg_deferPlayers
import cg_predictItems
import cg_blood
import cg_paused
import cg_buildScript
import cg_forceModel
import cg_stats
import cg_teamChatHeight
import cg_teamChatTime
import cg_synchronousClients
import cg_drawAttacker
import cg_lagometer
import cg_stereoSeparation
import cg_thirdPerson
import cg_thirdPersonAngle
import cg_thirdPersonRange
import cg_zoomFov
import cg_fov
import cg_simpleItems
import cg_ignore
import cg_autoswitch
import cg_tracerLength
import cg_tracerWidth
import cg_tracerChance
import cg_viewsize
import cg_drawGun
import cg_gun_z
import cg_gun_y
import cg_gun_x
import cg_gun_frame
import cg_brassTime
import cg_addMarks
import cg_footsteps
import cg_showmiss
import cg_noPlayerAnims
import cg_nopredict
import cg_errorDecay
import cg_railTrailTime
import cg_debugEvents
import cg_debugPosition
import cg_debugAnim
import cg_animSpeed
import cg_draw2D
import cg_drawStatus
import cg_crosshairHealth
import cg_crosshairColor
import cg_crosshairSize
import cg_crosshairY
import cg_crosshairX
import cg_drawTeamOverlay
import cg_drawRewards
import cg_drawCrosshairNames
import cg_drawCrosshair
import cg_drawAmmoWarning
import cg_drawIcons
import cg_draw3dIcons
import cg_drawSnapshot
import cg_drawFPS
import cg_drawClock
import cg_drawTimer
import cg_gibs
import cg_shadows
import cg_swingSpeed
import cg_bobroll
import cg_bobpitch
import cg_bobup
import cg_runroll
import cg_runpitch
import cg_centertime
import chat
import autoFile
import max_speed
import hud_count
import hud
import cg_markPolys
import cg_items
import cg_weapons
import cg_entities
import cg
import cgs
import lagometer
import forceModelModificationCount
import BG_ProModePlayerTouchesItem
import BG_PlayerTouchesItem
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_CanItemBeGrabbed
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindItem
import bg_numItems
import bg_itemlist
import Pmove
import PM_UpdateViewAngles
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import va
import trap_FS_FOpenFile
import CG_FileExists
import findCharacter
import FixedName
import SanitizeString
import ConcatArgs
import trap_Argv
import trap_Argc
import Q_CopyStringUntil
import Q_CleanString
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_strrchr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import stristr
import HelpParse
import GetToken
import COM_ParseExt
import COM_Parse
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_SkipPath
import Com_Clamp
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import AnglesToAxis
import vectoangles
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import SnapVectorTowards
import ByteToDir
import DirToByte
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import ColorIndex
import color_z
import color_y
import color_x
import color_w
import color_v
import color_u
import color_t
import color_s
import color_r
import color_q
import color_p
import color_o
import color_n
import color_m
import color_l
import color_k
import color_j
import color_i
import color_h
import color_g
import color_f
import color_e
import color_d
import color_c
import color_b
import color_a
import colorMdGrey
import colorOrange
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import bytedirs
import Com_Memcpy
import Com_Memset
import Hunk_Alloc
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import vsprintf
import _atoi
import atoi
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strchr
import strcmp
import strcpy
import strcat
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $811
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $809
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $805
byte 1 37
byte 1 105
byte 1 58
byte 1 37
byte 1 105
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $803
byte 1 83
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 98
byte 1 111
byte 1 97
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $794
byte 1 115
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 0
align 1
LABELV $764
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 0
align 1
LABELV $757
byte 1 83
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 32
byte 1 78
byte 1 69
byte 1 84
byte 1 32
byte 1 80
byte 1 105
byte 1 110
byte 1 103
byte 1 32
byte 1 77
byte 1 105
byte 1 110
byte 1 32
byte 1 32
byte 1 78
byte 1 97
byte 1 109
byte 1 101
byte 1 0
align 1
LABELV $748
byte 1 52
byte 1 0
align 1
LABELV $747
byte 1 48
byte 1 0
align 1
LABELV $746
byte 1 80
byte 1 111
byte 1 105
byte 1 110
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 32
byte 1 32
byte 1 65
byte 1 118
byte 1 103
byte 1 80
byte 1 105
byte 1 110
byte 1 103
byte 1 0
align 1
LABELV $624
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 108
byte 1 101
byte 1 97
byte 1 100
byte 1 115
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $620
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 108
byte 1 101
byte 1 97
byte 1 100
byte 1 115
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $613
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 116
byte 1 105
byte 1 101
byte 1 100
byte 1 32
byte 1 97
byte 1 116
byte 1 32
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $605
byte 1 37
byte 1 115
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 99
byte 1 101
byte 1 32
byte 1 119
byte 1 105
byte 1 116
byte 1 104
byte 1 32
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $597
byte 1 70
byte 1 114
byte 1 97
byte 1 103
byte 1 103
byte 1 101
byte 1 100
byte 1 32
byte 1 98
byte 1 121
byte 1 32
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $489
byte 1 67
byte 1 111
byte 1 110
byte 1 110
byte 1 110
byte 1 101
byte 1 99
byte 1 116
byte 1 105
byte 1 110
byte 1 103
byte 1 0
align 1
LABELV $425
byte 1 82
byte 1 69
byte 1 65
byte 1 68
byte 1 89
byte 1 0
align 1
LABELV $415
byte 1 37
byte 1 53
byte 1 105
byte 1 0
align 1
LABELV $414
byte 1 37
byte 1 52
byte 1 105
byte 1 0
align 1
LABELV $405
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $404
byte 1 83
byte 1 80
byte 1 69
byte 1 67
byte 1 0
align 1
LABELV $395
byte 1 37
byte 1 46
byte 1 49
byte 1 53
byte 1 115
byte 1 32
byte 1 94
byte 1 49
byte 1 37
byte 1 99
byte 1 0
align 1
LABELV $391
byte 1 0
align 1
LABELV $390
byte 1 67
byte 1 111
byte 1 110
byte 1 110
byte 1 101
byte 1 99
byte 1 116
byte 1 105
byte 1 110
byte 1 103
byte 1 0
align 1
LABELV $228
byte 1 32
byte 1 32
byte 1 48
byte 1 46
byte 1 48
byte 1 48
byte 1 0
align 1
LABELV $227
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 0
align 1
LABELV $204
byte 1 37
byte 1 105
byte 1 47
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $197
byte 1 37
byte 1 50
byte 1 105
byte 1 0
align 1
LABELV $83
byte 1 66
byte 1 97
byte 1 100
byte 1 32
byte 1 115
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 45
byte 1 62
byte 1 99
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 58
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 0
