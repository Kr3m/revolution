export DeathmatchScoreboardMessage
code
proc DeathmatchScoreboardMessage 3372 12
file "../g_cmds.c"
line 15
;1:// Copyright (C) 1999-2000 Id Software, Inc.
;2://
;3:#include "g_local.h"
;4:
;5:#include "../../ui/menudef.h"			// for the voice chats
;6:
;7:/*
;8:==================
;9:DeathmatchScoreboardMessage
;10:
;11:This command is no longer bandwith effeceint, 1 string is sent for every set of client data
;12:==================
;13:*/
;14://byte		str[48] = {0};
;15:void DeathmatchScoreboardMessage( gentity_t *ent ) {
line 20
;16:	char		entry[156];//This might be too tight..
;17:	char		string[1400];
;18:	char		*tova;
;19:	int			stringlength;
;20:	int			i, position = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 21
;21:	int			last_send = 0;
ADDRLP4 2832
CNSTI4 0
ASGNI4
line 28
;22:	gclient_t	*cl;
;23:	byte		bytez[1400];
;24:	//byte		test[5] = {255, 254, 253, 252, 251};
;25:	int			numSorted, scoreFlags, accuracy, perfect;
;26:
;27:
;28:	memset(&bytez, 0, sizeof(bytez));
ADDRLP4 12
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1400
ARGI4
ADDRGP4 memset
CALLP4
pop
line 30
;29:	// send the latest information on all clients
;30:	string[0] = 0;
ADDRLP4 1428
CNSTI1 0
ASGNI1
line 31
;31:	stringlength = 0;
ADDRLP4 2828
CNSTI4 0
ASGNI4
line 32
;32:	scoreFlags = 0;
ADDRLP4 1424
CNSTI4 0
ASGNI4
line 34
;33:
;34:	numSorted = level.numConnectedClients;
ADDRLP4 1416
ADDRGP4 level+120
INDIRU1
CVUI4 1
ASGNI4
line 42
;35:
;36:	//We do this first so we know to memset on the client
;37:	//99 signals memset
;38:	/*trap_SendServerCommand( ent-g_entities, va("scores 99 %i %i %i %i\n", numSorted, 
;39:		level.teamScores[TEAM_RED], level.teamScores[TEAM_BLUE], level.stats_picked) );*/
;40:	
;41:	//These could be moved to the snap to save on bandwidth here
;42:	bytez[position++] = 's';	//Num clients
ADDRLP4 2996
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 2996
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 2996
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 115
ASGNU1
line 43
;43:	bytez[position++] = '1'; //Red score
ADDRLP4 3000
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3000
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3000
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 49
ASGNU1
line 44
;44:	bytez[position++] = 's'; //Blue score
ADDRLP4 3004
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3004
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3004
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 115
ASGNU1
line 45
;45:	bytez[position++] = ' '; //Weapons picked up for marquee minus gauntlet
ADDRLP4 3008
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3008
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3008
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 32
ASGNU1
line 47
;46:
;47:	bytez[position++] = numSorted + 40;	//Num clients
ADDRLP4 3012
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3012
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3012
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1416
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 48
;48:	bytez[position++] = level.teamScores[TEAM_RED] + 40; //Red score
ADDRLP4 3016
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3016
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3016
INDIRI4
ADDRLP4 12
ADDP4
ADDRGP4 level+88+4
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 49
;49:	bytez[position++] = level.teamScores[TEAM_BLUE] + 40; //Blue score
ADDRLP4 3020
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3020
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3020
INDIRI4
ADDRLP4 12
ADDP4
ADDRGP4 level+88+8
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 50
;50:	bytez[position++] = level.stats_picked + 40; //Weapons picked up for marquee minus gauntlet
ADDRLP4 3024
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3024
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3024
INDIRI4
ADDRLP4 12
ADDP4
ADDRGP4 level+10844
INDIRU1
CVUI4 1
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 52
;51:
;52:	for (i=0 ; i < numSorted ; i++) {
ADDRLP4 8
CNSTI4 0
ASGNI4
ADDRGP4 $77
JUMPV
LABELV $74
line 53
;53:		int		ping = 0, time = 0, score = 0;
ADDRLP4 3028
CNSTI4 0
ASGNI4
ADDRLP4 3032
CNSTI4 0
ASGNI4
ADDRLP4 3036
CNSTI4 0
ASGNI4
line 55
;54:
;55:		cl = &level.clients[level.sortedClients[i]];
ADDRLP4 0
CNSTI4 10828
ADDRLP4 8
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+124
ADDP4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 57
;56:
;57:		if ( cl->pers.connected == CON_CONNECTING ) {
ADDRLP4 0
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 1
NEI4 $79
line 58
;58:			ping = -1;
ADDRLP4 3028
CNSTI4 -1
ASGNI4
line 59
;59:		} else {
ADDRGP4 $80
JUMPV
LABELV $79
line 61
;60:			//Ping_fix 2 and 3 adjust ping to be "real"
;61:			switch ( gameSettings.ping_fix ) {
ADDRLP4 3040
ADDRGP4 gameSettings+4
INDIRI4
ASGNI4
ADDRLP4 3040
INDIRI4
CNSTI4 2
EQI4 $84
ADDRLP4 3040
INDIRI4
CNSTI4 3
EQI4 $89
ADDRGP4 $81
JUMPV
LABELV $84
line 63
;62:				case 2:
;63:					{
line 66
;64:						int j;
;65:
;66:						for ( j = 0; j < NUM_PING_SAMPLES; j++ ) {
ADDRLP4 3044
CNSTI4 0
ASGNI4
LABELV $85
line 67
;67:							ping += cl->pers.pingsamples[j];
ADDRLP4 3028
ADDRLP4 3028
INDIRI4
ADDRLP4 3044
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 0
INDIRP4
CNSTI4 10076
ADDP4
ADDP4
INDIRI4
ADDI4
ASGNI4
line 68
;68:						}
LABELV $86
line 66
ADDRLP4 3044
ADDRLP4 3044
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3044
INDIRI4
CNSTI4 16
LTI4 $85
line 69
;69:						ping /= NUM_PING_SAMPLES;
ADDRLP4 3028
ADDRLP4 3028
INDIRI4
CNSTI4 16
DIVI4
ASGNI4
line 70
;70:						break;
ADDRGP4 $82
JUMPV
LABELV $89
line 73
;71:					}
;72:				case 3:
;73:					ping = cl->ps.ping - cl->pers.ping_fix_adjustment;
ADDRLP4 3028
ADDRLP4 0
INDIRP4
CNSTI4 452
ADDP4
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 10144
ADDP4
INDIRI4
SUBI4
ASGNI4
line 74
;74:					break;
ADDRGP4 $82
JUMPV
LABELV $81
line 76
;75:				default:
;76:					ping = cl->ps.ping;
ADDRLP4 3028
ADDRLP4 0
INDIRP4
CNSTI4 452
ADDP4
INDIRI4
ASGNI4
line 77
;77:					break;
LABELV $82
line 79
;78:			}
;79:			ping = ping < 999 ? ping : 999;
ADDRLP4 3028
INDIRI4
CNSTI4 999
GEI4 $91
ADDRLP4 3044
ADDRLP4 3028
INDIRI4
ASGNI4
ADDRGP4 $92
JUMPV
LABELV $91
ADDRLP4 3044
CNSTI4 999
ASGNI4
LABELV $92
ADDRLP4 3028
ADDRLP4 3044
INDIRI4
ASGNI4
line 80
;80:		}
LABELV $80
line 82
;81:
;82:		if ( ping != 999 && ping >= 0 && (position + 5) > 1399 && cl->ps.persistant[PERS_TEAM] == TEAM_SPECTATOR ) {
ADDRLP4 3028
INDIRI4
CNSTI4 999
EQI4 $93
ADDRLP4 3028
INDIRI4
CNSTI4 0
LTI4 $93
ADDRLP4 4
INDIRI4
CNSTI4 5
ADDI4
CNSTI4 1399
LEI4 $93
ADDRLP4 0
INDIRP4
CNSTI4 260
ADDP4
INDIRI4
CNSTI4 3
NEI4 $93
line 83
;83:			break; //We're completely out of room.
ADDRGP4 $76
JUMPV
LABELV $93
line 84
;84:		} else if ( position + 62 > 1399 ) {
ADDRLP4 4
INDIRI4
CNSTI4 62
ADDI4
CNSTI4 1399
LEI4 $95
line 85
;85:			continue; //Skip over players when we run out of room for them
ADDRGP4 $75
JUMPV
LABELV $95
line 88
;86:		}
;87:
;88:		if( cl->accuracy_shots ) {
ADDRLP4 0
INDIRP4
CNSTI4 10312
ADDP4
INDIRI4
CNSTI4 0
EQI4 $97
line 89
;89:			accuracy = cl->accuracy_hits * 100 / cl->accuracy_shots;
ADDRLP4 1412
CNSTI4 100
ADDRLP4 0
INDIRP4
CNSTI4 10316
ADDP4
INDIRI4
MULI4
ADDRLP4 0
INDIRP4
CNSTI4 10312
ADDP4
INDIRI4
DIVI4
ASGNI4
line 90
;90:			if ( accuracy > 100 ) {
ADDRLP4 1412
INDIRI4
CNSTI4 100
LEI4 $98
line 91
;91:				accuracy = 100;
ADDRLP4 1412
CNSTI4 100
ASGNI4
line 92
;92:			}
line 93
;93:		} else {
ADDRGP4 $98
JUMPV
LABELV $97
line 94
;94:			accuracy = 0;
ADDRLP4 1412
CNSTI4 0
ASGNI4
line 95
;95:		}
LABELV $98
line 96
;96:		perfect = ( cl->ps.persistant[PERS_RANK] == 0 && cl->ps.persistant[PERS_KILLED] == 0 ) ? 1 : 0;
ADDRLP4 3052
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 256
ADDP4
INDIRI4
ADDRLP4 3052
INDIRI4
NEI4 $102
ADDRLP4 0
INDIRP4
CNSTI4 280
ADDP4
INDIRI4
ADDRLP4 3052
INDIRI4
NEI4 $102
ADDRLP4 3044
CNSTI4 1
ASGNI4
ADDRGP4 $103
JUMPV
LABELV $102
ADDRLP4 3044
CNSTI4 0
ASGNI4
LABELV $103
ADDRLP4 1420
ADDRLP4 3044
INDIRI4
ASGNI4
line 99
;97:	
;98://freeze
;99:		if ( g_gamemode.integer > 3 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $104
line 100
;100:			scoreFlags = cl->sess.wins;
ADDRLP4 1424
ADDRLP4 0
INDIRP4
CNSTI4 10204
ADDP4
INDIRI4
ASGNI4
line 101
;101:		}
LABELV $104
line 105
;102://freeze
;103:
;104:
;105:		time = ((level.time - cl->pers.enterTime)/60000);
ADDRLP4 3032
ADDRGP4 level+40
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 556
ADDP4
INDIRI4
SUBI4
CNSTI4 60000
DIVI4
ASGNI4
line 106
;106:				bytez[position++] = level.sortedClients[i] + 40;	//ClientNum
ADDRLP4 3056
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3056
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3056
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 8
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+124
ADDP4
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 107
;107:		switch ( ping ) {
ADDRLP4 3064
CNSTI4 -1
ASGNI4
ADDRLP4 3028
INDIRI4
ADDRLP4 3064
INDIRI4
EQI4 $112
ADDRLP4 3028
INDIRI4
ADDRLP4 3064
INDIRI4
LTI4 $109
LABELV $121
ADDRLP4 3028
INDIRI4
CNSTI4 999
EQI4 $111
ADDRGP4 $109
JUMPV
LABELV $111
line 111
;108:			case 999:
;109:				//-2
;110:				//G_Printf("DBG:LAG\n");
;111:				bytez[position++] = 127;						//Ping
ADDRLP4 3068
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3068
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3068
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 127
ASGNU1
line 112
;112:				bytez[position++] = 127;//Ping
ADDRLP4 3072
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3072
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3072
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 127
ASGNU1
line 113
;113:				bytez[position++] = time / 63 + 64;;
ADDRLP4 3076
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3076
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3076
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 114
;114:				bytez[position++] = time % 63 + 64;;
ADDRLP4 3080
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3080
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3080
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 115
;115:				break;
ADDRGP4 $110
JUMPV
LABELV $112
line 122
;116:				//When -2 only send the bare minimum to squeeze more into the string because the client has lagged out
;117:			case -1:
;118:				//Connecting
;119:				//When connectiong only send the bare minimum to squeeze more into the string
;120:				//G_Printf("DBG:CONN\n");
;121:				//bytez[position++] = level.sortedClients[i] + 40;	//ClientNum
;122:				bytez[position++] = 127;						//Ping
ADDRLP4 3084
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3084
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3084
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 127
ASGNU1
line 123
;123:				bytez[position++] = 126;						//Ping
ADDRLP4 3088
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3088
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3088
INDIRI4
ADDRLP4 12
ADDP4
CNSTU1 126
ASGNU1
line 124
;124:				bytez[position++] = time / 63 + 64;
ADDRLP4 3092
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3092
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3092
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 125
;125:				bytez[position++] = time % 63 + 64;
ADDRLP4 3096
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3096
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3096
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 126
;126:				break;
ADDRGP4 $110
JUMPV
LABELV $109
line 130
;127:			default:
;128:				//Everyone else
;129:				//Send everything for this client
;130:				switch ( cl->ps.persistant[PERS_TEAM] ) {
ADDRLP4 3100
ADDRLP4 0
INDIRP4
CNSTI4 260
ADDP4
INDIRI4
ASGNI4
ADDRLP4 3100
INDIRI4
CNSTI4 3
EQI4 $116
ADDRGP4 $113
JUMPV
LABELV $116
line 136
;131:					case TEAM_SPECTATOR:
;132:						//G_Printf("DBG:SPEC\n");
;133:						//bytez[position++] = (byte)level.sortedClients[i] + 40;	//ClientNum
;134:						//memcpy(&bytez[position], &level.sortedClients[i], sizeof(bytez[position]));
;135:						//position++;
;136:						bytez[position++] = ping / 63 + 64;				//Ping
ADDRLP4 3104
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3104
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3104
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3028
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 137
;137:						bytez[position++] = ping % 63 + 64;				//Ping
ADDRLP4 3108
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3108
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3108
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3028
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 138
;138:						bytez[position++] = time / 63 + 64;
ADDRLP4 3112
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3112
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3112
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 139
;139:						bytez[position++] = time % 63 + 64;
ADDRLP4 3116
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3116
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3116
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 140
;140:						break;
ADDRGP4 $114
JUMPV
LABELV $113
line 144
;141:					default: //62
;142:						//G_Printf("DBG:PLAYER\n");
;143:						//bytez[position++] = level.sortedClients[i];	//ClientNum
;144:						score = cl->ps.persistant[PERS_SCORE];
ADDRLP4 3036
ADDRLP4 0
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 145
;145:						if ( score < 0 ) {
ADDRLP4 3036
INDIRI4
CNSTI4 0
GEI4 $117
line 146
;146:							accuracy += 101;
ADDRLP4 1412
ADDRLP4 1412
INDIRI4
CNSTI4 101
ADDI4
ASGNI4
line 147
;147:							score *= -1;
ADDRLP4 3036
CNSTI4 -1
ADDRLP4 3036
INDIRI4
MULI4
ASGNI4
line 148
;148:						}
LABELV $117
line 150
;149:
;150:						bytez[position++] = ping / 63 + 64;				//Ping
ADDRLP4 3120
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3120
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3120
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3028
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 151
;151:						bytez[position++] = ping % 63 + 64;				//Ping
ADDRLP4 3124
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3124
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3124
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3028
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 152
;152:						bytez[position++] = time / 63 + 64;
ADDRLP4 3128
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3128
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3128
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 153
;153:						bytez[position++] = time % 63 + 64;
ADDRLP4 3132
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3132
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3132
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 3032
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 154
;154:						bytez[position++] = cl->ps.persistant[PERS_SCORE] / 63 + 64;
ADDRLP4 3136
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3136
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3136
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 155
;155:						bytez[position++] = cl->ps.persistant[PERS_SCORE] % 63 + 64;
ADDRLP4 3140
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3140
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3140
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 156
;156:						bytez[position++] = scoreFlags / 63 + 64;
ADDRLP4 3144
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3144
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3144
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1424
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 157
;157:						bytez[position++] = scoreFlags % 63 + 64;
ADDRLP4 3148
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3148
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3148
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1424
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 158
;158:						bytez[position++] = g_entities[level.sortedClients[i]].s.powerups + 40;
ADDRLP4 3152
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3152
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3152
INDIRI4
ADDRLP4 12
ADDP4
CNSTI4 896
ADDRLP4 8
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+124
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+188
ADDP4
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 159
;159:						bytez[position++] = accuracy / 63 + 64;
ADDRLP4 3156
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3156
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3156
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1412
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 160
;160:						bytez[position++] = accuracy % 63 + 64;
ADDRLP4 3160
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3160
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3160
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1412
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 161
;161:						bytez[position++] = cl->ps.persistant[PERS_IMPRESSIVE_COUNT] / 63 + 64;
ADDRLP4 3164
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3164
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3164
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 284
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 162
;162:						bytez[position++] = cl->ps.persistant[PERS_IMPRESSIVE_COUNT] % 63 + 64;
ADDRLP4 3168
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3168
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3168
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 284
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 163
;163:						bytez[position++] = cl->ps.persistant[PERS_EXCELLENT_COUNT] / 63 + 64;
ADDRLP4 3172
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3172
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3172
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 288
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 164
;164:						bytez[position++] = cl->ps.persistant[PERS_EXCELLENT_COUNT] % 63 + 64;
ADDRLP4 3176
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3176
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3176
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 288
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 165
;165:						bytez[position++] = cl->ps.persistant[PERS_GAUNTLET_FRAG_COUNT] / 63 + 64;
ADDRLP4 3180
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3180
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3180
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 166
;166:						bytez[position++] = cl->ps.persistant[PERS_GAUNTLET_FRAG_COUNT] % 63 + 64;
ADDRLP4 3184
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3184
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3184
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 300
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 167
;167:						bytez[position++] = cl->ps.persistant[PERS_DEFEND_COUNT] / 63 + 64;
ADDRLP4 3188
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3188
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3188
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 292
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 168
;168:						bytez[position++] = cl->ps.persistant[PERS_DEFEND_COUNT] % 63 + 64;
ADDRLP4 3192
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3192
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3192
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 292
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 169
;169:						bytez[position++] = cl->ps.persistant[PERS_ASSIST_COUNT] / 63 + 64;
ADDRLP4 3196
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3196
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3196
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 296
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 170
;170:						bytez[position++] = cl->ps.persistant[PERS_ASSIST_COUNT] % 63 + 64;
ADDRLP4 3200
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3200
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3200
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 296
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 171
;171:						bytez[position++] = perfect + 40;
ADDRLP4 3204
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3204
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3204
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 1420
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 172
;172:						bytez[position++] = cl->ps.persistant[PERS_CAPTURES] / 63 + 64;
ADDRLP4 3208
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3208
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3208
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 173
;173:						bytez[position++] = cl->ps.persistant[PERS_CAPTURES] % 63 + 64;
ADDRLP4 3212
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3212
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3212
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 175
;174:						//Weapons
;175:						bytez[position++] = cl->pers.stats_shots[WP_GAUNTLET] / 63 + 64;
ADDRLP4 3216
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3216
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3216
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9860
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 176
;176:						bytez[position++] = cl->pers.stats_shots[WP_GAUNTLET] % 63 + 64;
ADDRLP4 3220
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3220
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3220
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9860
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 177
;177:						bytez[position++] = cl->pers.stats_shots[WP_MACHINEGUN] / 63 + 64;
ADDRLP4 3224
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3224
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3224
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9864
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 178
;178:						bytez[position++] = cl->pers.stats_shots[WP_MACHINEGUN] % 63 + 64;
ADDRLP4 3228
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3228
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3228
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9864
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 179
;179:						bytez[position++] = cl->pers.stats_shots[WP_SHOTGUN] / 63 + 64;
ADDRLP4 3232
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3232
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3232
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9868
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 180
;180:						bytez[position++] = cl->pers.stats_shots[WP_SHOTGUN] % 63 + 64;
ADDRLP4 3236
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3236
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3236
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9868
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 181
;181:						bytez[position++] = cl->pers.stats_shots[WP_GRENADE_LAUNCHER] / 63 + 64;
ADDRLP4 3240
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3240
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3240
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9872
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 182
;182:						bytez[position++] = cl->pers.stats_shots[WP_GRENADE_LAUNCHER] % 63 + 64;
ADDRLP4 3244
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3244
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3244
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9872
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 183
;183:						bytez[position++] = cl->pers.stats_shots[WP_ROCKET_LAUNCHER] / 63 + 64;
ADDRLP4 3248
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3248
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3248
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9876
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 184
;184:						bytez[position++] = cl->pers.stats_shots[WP_ROCKET_LAUNCHER] % 63 + 64;
ADDRLP4 3252
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3252
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3252
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9876
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 185
;185:						bytez[position++] = cl->pers.stats_shots[WP_LIGHTNING] / 63 + 64;
ADDRLP4 3256
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3256
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3256
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9880
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 186
;186:						bytez[position++] = cl->pers.stats_shots[WP_LIGHTNING] % 63 + 64;
ADDRLP4 3260
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3260
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3260
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9880
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 187
;187:						bytez[position++] = cl->pers.stats_shots[WP_RAILGUN] / 63 + 64;
ADDRLP4 3264
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3264
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3264
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 188
;188:						bytez[position++] = cl->pers.stats_shots[WP_RAILGUN] % 63 + 64;
ADDRLP4 3268
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3268
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3268
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 189
;189:						bytez[position++] = cl->pers.stats_shots[WP_PLASMAGUN] / 63 + 64;
ADDRLP4 3272
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3272
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3272
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9888
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 190
;190:						bytez[position++] = cl->pers.stats_shots[WP_PLASMAGUN] % 63 + 64;
ADDRLP4 3276
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3276
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3276
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9888
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 191
;191:						bytez[position++] = cl->pers.stats_shots[WP_BFG] / 63 + 64;
ADDRLP4 3280
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3280
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3280
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9892
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 192
;192:						bytez[position++] = cl->pers.stats_shots[WP_BFG] % 63 + 64;
ADDRLP4 3284
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3284
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3284
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9892
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 193
;193:						bytez[position++] = cl->pers.stats_hits[WP_GAUNTLET] / 63 + 64;
ADDRLP4 3288
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3288
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3288
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9904
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 194
;194:						bytez[position++] = cl->pers.stats_hits[WP_GAUNTLET] % 63 + 64;
ADDRLP4 3292
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3292
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3292
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9904
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 195
;195:						bytez[position++] = cl->pers.stats_hits[WP_MACHINEGUN] / 63 + 64;
ADDRLP4 3296
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3296
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3296
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9908
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 196
;196:						bytez[position++] = cl->pers.stats_hits[WP_MACHINEGUN] % 63 + 64;
ADDRLP4 3300
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3300
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3300
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9908
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 197
;197:						bytez[position++] = cl->pers.stats_hits[WP_SHOTGUN] / 63 + 64;
ADDRLP4 3304
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3304
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3304
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9912
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 198
;198:						bytez[position++] = cl->pers.stats_hits[WP_SHOTGUN] % 63 + 64;
ADDRLP4 3308
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3308
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3308
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9912
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 199
;199:						bytez[position++] = cl->pers.stats_hits[WP_GRENADE_LAUNCHER] / 63 + 64;
ADDRLP4 3312
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3312
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3312
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9916
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 200
;200:						bytez[position++] = cl->pers.stats_hits[WP_GRENADE_LAUNCHER] % 63 + 64;
ADDRLP4 3316
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3316
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3316
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9916
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 201
;201:						bytez[position++] = cl->pers.stats_hits[WP_ROCKET_LAUNCHER] / 63 + 64;
ADDRLP4 3320
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3320
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3320
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9920
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 202
;202:						bytez[position++] = cl->pers.stats_hits[WP_ROCKET_LAUNCHER] % 63 + 64;
ADDRLP4 3324
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3324
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3324
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9920
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 203
;203:						bytez[position++] = cl->pers.stats_hits[WP_LIGHTNING] / 63 + 64;
ADDRLP4 3328
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3328
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3328
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9924
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 204
;204:						bytez[position++] = cl->pers.stats_hits[WP_LIGHTNING] % 63 + 64;
ADDRLP4 3332
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3332
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3332
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9924
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 205
;205:						bytez[position++] = cl->pers.stats_hits[WP_RAILGUN] / 63 + 64;
ADDRLP4 3336
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3336
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3336
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 206
;206:						bytez[position++] = cl->pers.stats_hits[WP_RAILGUN] % 63 + 64;
ADDRLP4 3340
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3340
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3340
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 207
;207:						bytez[position++] = cl->pers.stats_hits[WP_PLASMAGUN] / 63 + 64;
ADDRLP4 3344
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3344
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3344
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9932
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 208
;208:						bytez[position++] = cl->pers.stats_hits[WP_PLASMAGUN] % 63 + 64;
ADDRLP4 3348
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3348
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3348
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9932
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 209
;209:						bytez[position++] = cl->pers.stats_hits[WP_BFG] / 63 + 64;
ADDRLP4 3352
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3352
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3352
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9936
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 210
;210:						bytez[position++] = cl->pers.stats_hits[WP_BFG] % 63 + 64;
ADDRLP4 3356
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3356
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3356
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 9936
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 212
;211:						//
;212:						bytez[position++] = cl->ps.persistant[PERS_KILLED] / 63 + 64;
ADDRLP4 3360
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3360
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3360
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 280
ADDP4
INDIRI4
CNSTI4 63
DIVI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 213
;213:						bytez[position++] = cl->ps.persistant[PERS_KILLED] % 63 + 64;
ADDRLP4 3364
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3364
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3364
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 280
ADDP4
INDIRI4
CNSTI4 63
MODI4
CNSTI4 64
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 214
;214:						bytez[position++] = cl->pers.stats_specnum + 40;
ADDRLP4 3368
ADDRLP4 4
INDIRI4
ASGNI4
ADDRLP4 4
ADDRLP4 3368
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 3368
INDIRI4
ADDRLP4 12
ADDP4
ADDRLP4 0
INDIRP4
CNSTI4 10064
ADDP4
INDIRI4
CNSTI4 40
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 215
;215:						break;
LABELV $114
line 217
;216:				}
;217:		}
LABELV $110
line 258
;218:
;219:		//Com_sprintf (entry, sizeof(entry),
;220:		//	"%i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i %i",
;221:		//	level.sortedClients[i],							//  1 - 1 byte
;222:		//	cl->ps.persistant[PERS_SCORE],					//  2 - 2 byte
;223:		//	ping,											//  3 - 2 byte && move this to slot 2 -- if it's -1, don't send the rest.
;224:		//	(level.time - cl->pers.enterTime)/60000,		//  4 - 2 byte
;225:		//	scoreFlags,										//  5 - 2 byte
;226:		//	g_entities[level.sortedClients[i]].s.powerups,	//  6 - 1 byte
;227:		//	accuracy,										//  7 - 2 byte && check for removal from message
;228:		//	cl->ps.persistant[PERS_IMPRESSIVE_COUNT],		//  8 - 2 byte
;229:		//	cl->ps.persistant[PERS_EXCELLENT_COUNT],		//  9 - 2 byte
;230:		//	cl->ps.persistant[PERS_GAUNTLET_FRAG_COUNT],	// 10 - 2 byte
;231:		//	cl->ps.persistant[PERS_DEFEND_COUNT],			// 11 - 2 byte
;232:		//	cl->ps.persistant[PERS_ASSIST_COUNT],			// 12 - 2 byte
;233:		//	perfect,										// 13 - 1 byte
;234:		//	cl->ps.persistant[PERS_CAPTURES],				// 14 - 2 byte || we limit capturelimit to 255
;235:		//	cl->pers.stats_shots[WP_GAUNTLET],				// 15 - 2 byte
;236:		//	cl->pers.stats_shots[WP_MACHINEGUN],			// 16 - 2 byte
;237:		//	cl->pers.stats_shots[WP_SHOTGUN],				// 17 - 2 byte
;238:		//	cl->pers.stats_shots[WP_GRENADE_LAUNCHER],		// 18 - 2 byte
;239:		//	cl->pers.stats_shots[WP_ROCKET_LAUNCHER],		// 19 - 2 byte
;240:		//	cl->pers.stats_shots[WP_LIGHTNING],				// 20 - 2 byte
;241:		//	cl->pers.stats_shots[WP_RAILGUN],				// 21 - 2 byte
;242:		//	cl->pers.stats_shots[WP_PLASMAGUN],				// 22 - 2 byte
;243:		//	cl->pers.stats_shots[WP_BFG],					// 23 - 2 byte
;244:		//	cl->pers.stats_hits[WP_GAUNTLET],				// 24 - 2 byte
;245:		//	cl->pers.stats_hits[WP_MACHINEGUN],				// 25 - 2 byte
;246:		//	cl->pers.stats_hits[WP_SHOTGUN],				// 26 - 2 byte
;247:		//	cl->pers.stats_hits[WP_GRENADE_LAUNCHER],		// 27 - 2 byte
;248:		//	cl->pers.stats_hits[WP_ROCKET_LAUNCHER],		// 28 - 2 byte
;249:		//	cl->pers.stats_hits[WP_LIGHTNING],				// 29 - 2 byte
;250:		//	cl->pers.stats_hits[WP_RAILGUN],				// 30 - 2 byte
;251:		//	cl->pers.stats_hits[WP_PLASMAGUN],				// 31 - 2 byte
;252:		//	cl->pers.stats_hits[WP_BFG],					// 32 - 2 byte
;253:		//	cl->pers.stats_deaths,							// 33 - 2 byte
;254:		//	cl->pers.stats_specnum							// 34 - 1 byte
;255:		//	);
;256:		//	last_send++;
;257:		//	trap_SendServerCommand( ent-g_entities, va("scores %s\n", entry ) );
;258:	}
LABELV $75
line 52
ADDRLP4 8
ADDRLP4 8
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $77
ADDRLP4 8
INDIRI4
ADDRLP4 1416
INDIRI4
LTI4 $74
LABELV $76
line 261
;259:
;260:	//G_Printf("^2%s\n", bytez);
;261:	memcpy(string, bytez,sizeof(string));
ADDRLP4 1428
ARGP4
ADDRLP4 12
ARGP4
CNSTI4 1400
ARGI4
ADDRGP4 memcpy
CALLP4
pop
line 265
;262:	//G_Printf("%s\n", bytez);
;263:	//G_Printf("%s\n", string);
;264:	//G_Printf("^5DBG:memcpy: %d %d %d %d %d -- %s\n", (int)str[0], (int)str[1], (int)str[2], (int)str[3], (int)str[4], str);
;265:	trap_SendServerCommand( ent-g_entities, string );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1428
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 267
;266:	
;267:}
LABELV $67
endproc DeathmatchScoreboardMessage 3372 12
export Cmd_Score_f
proc Cmd_Score_f 0 4
line 277
;268:
;269:
;270:/*
;271:==================
;272:Cmd_Score_f
;273:
;274:Request current scoreboard information
;275:==================
;276:*/
;277:void Cmd_Score_f( gentity_t *ent ) {
line 278
;278:	DeathmatchScoreboardMessage( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 DeathmatchScoreboardMessage
CALLV
pop
line 279
;279:}
LABELV $122
endproc Cmd_Score_f 0 4
export FindMapNameForNumber
proc FindMapNameForNumber 5144 16
line 283
;280:
;281:
;282:
;283:int FindMapNameForNumber( char* mapName, int mapNumber ) {
line 288
;284:	char		filelist[5120];// > 410+ maps will show at this setting
;285:	char*		fileptr;
;286:	int			mapCnt, numfiles, filelen;
;287:
;288:	numfiles = trap_FS_GetFileList( "maps", "bsp", filelist, sizeof(filelist) );
ADDRGP4 $124
ARGP4
ADDRGP4 $125
ARGP4
ADDRLP4 16
ARGP4
CNSTI4 5120
ARGI4
ADDRLP4 5136
ADDRGP4 trap_FS_GetFileList
CALLI4
ASGNI4
ADDRLP4 12
ADDRLP4 5136
INDIRI4
ASGNI4
line 289
;289:	fileptr = filelist;
ADDRLP4 4
ADDRLP4 16
ASGNP4
line 290
;290:	mapCnt = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 291
;291:	for (mapCnt=0; mapCnt<numfiles; mapCnt++, fileptr += filelen+1)
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $129
JUMPV
LABELV $126
line 292
;292:	{
line 293
;293:		filelen = strlen(fileptr);
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 5140
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 8
ADDRLP4 5140
INDIRI4
ASGNI4
line 294
;294:		if( mapCnt == mapNumber ) {
ADDRLP4 0
INDIRI4
ADDRFP4 4
INDIRI4
NEI4 $130
line 295
;295:			COM_StripExtension(fileptr,mapName);
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 COM_StripExtension
CALLV
pop
line 296
;296:			break;
ADDRGP4 $128
JUMPV
LABELV $130
line 298
;297:		}
;298:	}
LABELV $127
line 291
ADDRLP4 5140
CNSTI4 1
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRLP4 5140
INDIRI4
ADDI4
ASGNI4
ADDRLP4 4
ADDRLP4 8
INDIRI4
ADDRLP4 5140
INDIRI4
ADDI4
ADDRLP4 4
INDIRP4
ADDP4
ASGNP4
LABELV $129
ADDRLP4 0
INDIRI4
ADDRLP4 12
INDIRI4
LTI4 $126
LABELV $128
line 299
;299:	return numfiles;
ADDRLP4 12
INDIRI4
RETI4
LABELV $123
endproc FindMapNameForNumber 5144 16
export Cmd_MapList_f
proc Cmd_MapList_f 6824 16
line 308
;300:}
;301:/*
;302:==================
;303:Cmd_MapList_f
;304:
;305:Request list of maps on the server
;306:==================
;307:*/
;308:void Cmd_MapList_f( gentity_t *ent  ) {
line 318
;309:	char		filelist[5120];// > 410+ maps will show at this setting
;310:	char		mapName[MAX_QPATH];
;311:	char		mapList[MAX_MAPLIST_SIZE];
;312:	char*		fileptr;
;313:	char		entry[512];
;314:	int			filelen, numfiles, mapCnt, entryLen, mapListLen, itemCnt;
;315:	char		filter[MAX_QPATH];
;316:	qboolean	filtering;
;317:	//TODO:Evo: send an ugly string to the client to reformat with pretty 25 character columns so it'd easier to read
;318:	trap_Argv(1, filter, sizeof(filter));
CNSTI4 1
ARGI4
ADDRLP4 1608
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 319
;319:	filtering = ( filter && strlen(filter) > 0 );
ADDRLP4 1608
CVPU4 4
CNSTU4 0
EQU4 $134
ADDRLP4 1608
ARGP4
ADDRLP4 6796
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 6796
INDIRI4
CNSTI4 0
LEI4 $134
ADDRLP4 6792
CNSTI4 1
ASGNI4
ADDRGP4 $135
JUMPV
LABELV $134
ADDRLP4 6792
CNSTI4 0
ASGNI4
LABELV $135
ADDRLP4 1604
ADDRLP4 6792
INDIRI4
ASGNI4
line 321
;320:
;321:	numfiles = trap_FS_GetFileList( "maps", "bsp", filelist, sizeof(filelist) );
ADDRGP4 $124
ARGP4
ADDRGP4 $125
ARGP4
ADDRLP4 1672
ARGP4
CNSTI4 5120
ARGI4
ADDRLP4 6800
ADDRGP4 trap_FS_GetFileList
CALLI4
ASGNI4
ADDRLP4 1600
ADDRLP4 6800
INDIRI4
ASGNI4
line 322
;322:	fileptr = filelist;
ADDRLP4 1516
ADDRLP4 1672
ASGNP4
line 323
;323:	mapCnt = 0;
ADDRLP4 1512
CNSTI4 0
ASGNI4
line 324
;324:	itemCnt = -1;
ADDRLP4 1584
CNSTI4 -1
ASGNI4
line 325
;325:	memset(entry, 0, sizeof(entry));
ADDRLP4 0
ARGP4
CNSTI4 0
ARGI4
CNSTI4 512
ARGI4
ADDRGP4 memset
CALLP4
pop
line 326
;326:	strcpy(mapList, "print \"^3Maps:\n^1=====^7\n" );
ADDRLP4 512
ARGP4
ADDRGP4 $136
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 327
;327:	for (mapCnt=0; mapCnt<numfiles; mapCnt++, fileptr += filelen+1)
ADDRLP4 1512
CNSTI4 0
ASGNI4
ADDRGP4 $140
JUMPV
LABELV $137
line 328
;328:	{
line 329
;329:		filelen = strlen(fileptr);
ADDRLP4 1516
INDIRP4
ARGP4
ADDRLP4 6804
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1588
ADDRLP4 6804
INDIRI4
ASGNI4
line 330
;330:		COM_StripExtension(fileptr,mapName);
ADDRLP4 1516
INDIRP4
ARGP4
ADDRLP4 1520
ARGP4
ADDRGP4 COM_StripExtension
CALLV
pop
line 332
;331:
;332:		if( filtering ) {
ADDRLP4 1604
INDIRI4
CNSTI4 0
EQI4 $141
line 333
;333:			if( trap_StringContains(mapName, filter, 0) == -1 )
ADDRLP4 1520
ARGP4
ADDRLP4 1608
ARGP4
CNSTI4 0
ARGI4
ADDRLP4 6808
ADDRGP4 trap_StringContains
CALLI4
ASGNI4
ADDRLP4 6808
INDIRI4
CNSTI4 -1
NEI4 $143
line 334
;334:			{
line 335
;335:				continue;
ADDRGP4 $138
JUMPV
LABELV $143
line 337
;336:			}
;337:		}
LABELV $141
line 339
;338:		
;339:		itemCnt++;
ADDRLP4 1584
ADDRLP4 1584
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 340
;340:		if( itemCnt % 3 < 2 ) {
ADDRLP4 1584
INDIRI4
CNSTI4 3
MODI4
CNSTI4 2
GEI4 $145
line 341
;341:			Q_strcat(entry, sizeof(entry), va("^3%d:^7%s^3, ", mapCnt, mapName));
ADDRGP4 $147
ARGP4
ADDRLP4 1512
INDIRI4
ARGI4
ADDRLP4 1520
ARGP4
ADDRLP4 6808
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
ARGP4
CNSTI4 512
ARGI4
ADDRLP4 6808
INDIRP4
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 342
;342:			continue;
ADDRGP4 $138
JUMPV
LABELV $145
line 344
;343:		}
;344:		Q_strcat(entry, sizeof(entry), va("^3%d:^7%s\n", mapCnt, mapName));
ADDRGP4 $148
ARGP4
ADDRLP4 1512
INDIRI4
ARGI4
ADDRLP4 1520
ARGP4
ADDRLP4 6808
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
ARGP4
CNSTI4 512
ARGI4
ADDRLP4 6808
INDIRP4
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 345
;345:		entryLen = strlen(entry);
ADDRLP4 0
ARGP4
ADDRLP4 6812
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1592
ADDRLP4 6812
INDIRI4
ASGNI4
line 346
;346:		mapListLen = strlen(mapList);
ADDRLP4 512
ARGP4
ADDRLP4 6816
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1596
ADDRLP4 6816
INDIRI4
ASGNI4
line 349
;347:		//-1: null term, -1: null term, +1: end quote, +1: null term
;348:		//if( (mapListLen -1) + (entryLen -1) +1 +1 < MAX_MAPLIST_SIZE )
;349:		if( (mapListLen + entryLen) < MAX_MAPLIST_SIZE - 4 )
ADDRLP4 1596
INDIRI4
ADDRLP4 1592
INDIRI4
ADDI4
CNSTI4 996
GEI4 $149
line 350
;350:		{
line 351
;351:			Q_strcat(mapList, sizeof(mapList), entry);
ADDRLP4 512
ARGP4
CNSTI4 1000
ARGI4
ADDRLP4 0
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 352
;352:		} else {
ADDRGP4 $150
JUMPV
LABELV $149
line 353
;353:			Q_strcat(mapList, sizeof(mapList), "\"\n");
ADDRLP4 512
ARGP4
CNSTI4 1000
ARGI4
ADDRGP4 $151
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 354
;354:			trap_SendServerCommand(ent-g_entities, mapList);
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 512
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 355
;355:			mapList[0] = 0;
ADDRLP4 512
CNSTI1 0
ASGNI1
line 356
;356:			Q_strcat(mapList, sizeof(mapList), va("print \"%s",entry));
ADDRGP4 $152
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 6820
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 512
ARGP4
CNSTI4 1000
ARGI4
ADDRLP4 6820
INDIRP4
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 357
;357:		}
LABELV $150
line 358
;358:		entry[0] = 0;//clear out entry for next go round
ADDRLP4 0
CNSTI1 0
ASGNI1
line 359
;359:	}
LABELV $138
line 327
ADDRLP4 6804
CNSTI4 1
ASGNI4
ADDRLP4 1512
ADDRLP4 1512
INDIRI4
ADDRLP4 6804
INDIRI4
ADDI4
ASGNI4
ADDRLP4 1516
ADDRLP4 1588
INDIRI4
ADDRLP4 6804
INDIRI4
ADDI4
ADDRLP4 1516
INDIRP4
ADDP4
ASGNP4
LABELV $140
ADDRLP4 1512
INDIRI4
ADDRLP4 1600
INDIRI4
LTI4 $137
line 362
;360:	
;361:	//check to see if we have an entry that was never added to the maplist
;362:	if( itemCnt % 3 < 2 ) {
ADDRLP4 1584
INDIRI4
CNSTI4 3
MODI4
CNSTI4 2
GEI4 $153
line 364
;363:		int len;
;364:		Q_strcat(mapList, sizeof(mapList), entry);
ADDRLP4 512
ARGP4
CNSTI4 1000
ARGI4
ADDRLP4 0
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 366
;365:		//adjust the end of the maplist line to not have a trailing comma and space
;366:		len = strlen(mapList);
ADDRLP4 512
ARGP4
ADDRLP4 6812
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 6808
ADDRLP4 6812
INDIRI4
ASGNI4
line 367
;367:		mapList[len - 2] = '\n';
ADDRLP4 6808
INDIRI4
ADDRLP4 512-2
ADDP4
CNSTI1 10
ASGNI1
line 368
;368:		mapList[len - 1] = 0;
ADDRLP4 6808
INDIRI4
ADDRLP4 512-1
ADDP4
CNSTI1 0
ASGNI1
line 369
;369:	}
LABELV $153
line 373
;370:
;371:	//adjust numfiles as we were filtering, just in case this might be 
;372:	//extended at some point in the future
;373:	if( filtering ) {
ADDRLP4 1604
INDIRI4
CNSTI4 0
EQI4 $157
line 375
;374:		//adjust it for 1 because we use it as a counter above, not an actual "count"
;375:		numfiles = itemCnt + 1;
ADDRLP4 1600
ADDRLP4 1584
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 376
;376:	}
LABELV $157
line 378
;377:	//send the last mapList
;378:	if( numfiles > 0 ) {
ADDRLP4 1600
INDIRI4
CNSTI4 0
LEI4 $159
line 379
;379:		Q_strcat(mapList, sizeof(mapList), "\"\n");
ADDRLP4 512
ARGP4
CNSTI4 1000
ARGI4
ADDRGP4 $151
ARGP4
ADDRGP4 Q_strcat
CALLV
pop
line 380
;380:		trap_SendServerCommand(ent-g_entities, mapList);
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 512
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 381
;381:	}
LABELV $159
line 382
;382:}
LABELV $132
endproc Cmd_MapList_f 6824 16
export CheatsOk
proc CheatsOk 4 8
line 389
;383:
;384:/*
;385:==================
;386:CheatsOk
;387:==================
;388:*/
;389:qboolean	CheatsOk( gentity_t *ent ) {
line 390
;390:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $162
line 391
;391:		trap_SendServerCommand( ent-g_entities, va("print \"Cheats are not enabled on this server.\n\""));
ADDRGP4 $165
ARGP4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 392
;392:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $161
JUMPV
LABELV $162
line 394
;393:	}
;394:	if ( ent->health <= 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 732
ADDP4
INDIRI4
CNSTI4 0
GTI4 $166
line 395
;395:		trap_SendServerCommand( ent-g_entities, va("print \"You must be alive to use this command.\n\""));
ADDRGP4 $168
ARGP4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 396
;396:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $161
JUMPV
LABELV $166
line 398
;397:	}
;398:	return qtrue;
CNSTI4 1
RETI4
LABELV $161
endproc CheatsOk 4 8
export ClientNumberFromString
proc ClientNumberFromString 2072 8
line 409
;399:}
;400:
;401:/*
;402:==================
;403:ClientNumberFromString
;404:
;405:Returns a player number for either a number or name string
;406:Returns -1 if invalid
;407:==================
;408:*/
;409:int ClientNumberFromString( gentity_t *to, char *s ) {
line 416
;410:	gclient_t	*cl;
;411:	int			idnum;
;412:	char		s2[MAX_STRING_CHARS];
;413:	char		n2[MAX_STRING_CHARS];
;414:
;415:	// numeric values are just slot numbers
;416:	if (s[0] >= '0' && s[0] <= '9') {
ADDRLP4 2056
ADDRFP4 4
INDIRP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 48
LTI4 $170
ADDRLP4 2056
INDIRI4
CNSTI4 57
GTI4 $170
line 417
;417:		idnum = atoi( s );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 2060
INDIRI4
ASGNI4
line 418
;418:		if ( idnum < 0 || idnum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $175
ADDRLP4 4
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $172
LABELV $175
line 419
;419:			trap_SendServerCommand( to-g_entities, va("print \"Bad client slot: %i\n\"", idnum));
ADDRGP4 $176
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 420
;420:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $169
JUMPV
LABELV $172
line 423
;421:		}
;422:
;423:		cl = &level.clients[idnum];
ADDRLP4 0
CNSTI4 10828
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 424
;424:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $177
line 425
;425:			trap_SendServerCommand( to-g_entities, va("print \"Client %i is not active\n\"", idnum));
ADDRGP4 $179
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 426
;426:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $169
JUMPV
LABELV $177
line 428
;427:		}
;428:		return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $169
JUMPV
LABELV $170
line 432
;429:	}
;430:
;431:	// check for a name match
;432:	SanitizeString( s, s2 );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 433
;433:	for ( idnum=0,cl=level.clients ; idnum < level.maxclients ; idnum++,cl++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
ADDRGP4 level
INDIRP4
ASGNP4
ADDRGP4 $183
JUMPV
LABELV $180
line 434
;434:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $185
line 435
;435:			continue;
ADDRGP4 $181
JUMPV
LABELV $185
line 437
;436:		}
;437:		SanitizeString( cl->pers.netname, n2 );
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 438
;438:		if ( !strcmp( n2, s2 ) ) {
ADDRLP4 8
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2060
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 2060
INDIRI4
CNSTI4 0
NEI4 $187
line 439
;439:			return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $169
JUMPV
LABELV $187
line 441
;440:		}
;441:	}
LABELV $181
line 433
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRP4
CNSTI4 10828
ADDP4
ASGNP4
LABELV $183
ADDRLP4 4
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $180
line 443
;442:
;443:	trap_SendServerCommand( to-g_entities, va("print \"User %s is not on the server\n\"", s));
ADDRGP4 $189
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 444
;444:	return -1;
CNSTI4 -1
RETI4
LABELV $169
endproc ClientNumberFromString 2072 8
export Cmd_Weapon_f
proc Cmd_Weapon_f 1036 12
line 452
;445:}
;446:/*
;447:==================
;448:Cmd_Weapon_f
;449:
;450:==================
;451:*/
;452:void Cmd_Weapon_f ( gentity_t *ent ) {
line 458
;453:	char		weapon[MAX_TOKEN_CHARS];
;454:	//char		*weapon;
;455:	int			weaponInt;
;456:
;457:	//weapon = ConcatArgs( 1 );
;458:	trap_Argv( 1, weapon, sizeof( weapon ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 459
;459:	weaponInt = atoi(weapon);
ADDRLP4 4
ARGP4
ADDRLP4 1028
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 1028
INDIRI4
ASGNI4
line 465
;460:
;461:	/*if ( ent->client->frameAimType <= 2 ) {
;462:		trap_SendServerCommand( ent-g_entities, va("print \"DBGRWS: Weapon:s:%s - Weapon:i:%i\n\"", weapon, weaponInt) );
;463:	}*/
;464:
;465:	if (weaponInt >= 0 && weaponInt <= 10) {
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $191
ADDRLP4 0
INDIRI4
CNSTI4 10
GTI4 $191
line 466
;466:		ent->client->weaponSwitch = weaponInt;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10820
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 467
;467:	} else {
ADDRGP4 $192
JUMPV
LABELV $191
line 468
;468:		ent->client->weaponSwitch = WP_BFG;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10820
ADDP4
CNSTI4 9
ASGNI4
line 469
;469:	}
LABELV $192
line 470
;470:}
LABELV $190
endproc Cmd_Weapon_f 1036 12
export Cmd_HitClients_f
proc Cmd_HitClients_f 1072 12
line 481
;471:
;472:
;473:
;474:/*
;475:==================
;476:Cmd_HitClients_f
;477:
;478:==================
;479:*/
;480:void Cmd_HitClients_f (gentity_t *ent)
;481:{
line 487
;482:	char		*timeStampChar;
;483:	int			timeStamp;
;484:	char		*hitClientsChar;
;485:	int			hitClients;
;486://	int			i,j;
;487:	usercmd_t	*tmpCmd = 0;
ADDRLP4 1040
CNSTP4 0
ASGNP4
line 488
;488:	int			flag = 0;
ADDRLP4 1044
CNSTI4 0
ASGNI4
line 493
;489:
;490:	char		arg[MAX_TOKEN_CHARS];
;491:
;492:
;493:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 496
;494:
;495:
;496:	timeStampChar = arg;
ADDRLP4 1024
ADDRLP4 0
ASGNP4
line 497
;497:	timeStamp = atoi(timeStampChar);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1048
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1028
ADDRLP4 1048
INDIRI4
ASGNI4
line 499
;498:
;499:	hitClientsChar = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1052
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 1032
ADDRLP4 1052
INDIRP4
ASGNP4
line 500
;500:	hitClients = atoi(hitClientsChar);
ADDRLP4 1032
INDIRP4
ARGP4
ADDRLP4 1056
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1036
ADDRLP4 1056
INDIRI4
ASGNI4
line 502
;501:
;502:	ent->client->pers.hitTargetsIndex++;
ADDRLP4 1060
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 9848
ADDP4
ASGNP4
ADDRLP4 1060
INDIRP4
ADDRLP4 1060
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 504
;503:
;504:	if (ent->client->pers.hitTargetsIndex > 255)
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 9848
ADDP4
INDIRI4
CNSTI4 255
LEI4 $194
line 505
;505:		ent->client->pers.hitTargetsIndex = 0;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 9848
ADDP4
CNSTI4 0
ASGNI4
LABELV $194
line 507
;506:
;507:	ent->client->pers.hitTargets[ent->client->pers.hitTargetsIndex].timeIndex = timeStamp;
ADDRLP4 1064
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1064
INDIRP4
CNSTI4 9848
ADDP4
INDIRI4
CNSTI4 3
LSHI4
ADDRLP4 1064
INDIRP4
CNSTI4 7800
ADDP4
ADDP4
CNSTI4 4
ADDP4
ADDRLP4 1028
INDIRI4
ASGNI4
line 508
;508:	ent->client->pers.hitTargets[ent->client->pers.hitTargetsIndex].hitTargets = hitClients;
ADDRLP4 1068
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
CNSTI4 9848
ADDP4
INDIRI4
CNSTI4 3
LSHI4
ADDRLP4 1068
INDIRP4
CNSTI4 7800
ADDP4
ADDP4
ADDRLP4 1036
INDIRI4
ASGNI4
line 534
;509:
;510:	/*
;511:
;512:	ent->client->hitClient = hitClients;
;513:	ent->client->hitClientTime = timeStamp;
;514:
;515:	if (timeStamp)
;516:	{
;517:		for (j=0; j<256; j++)
;518:		{
;519:			if (ent->client->pers.fireStack[j] == timeStamp)
;520:			{
;521:				G_TimeShiftClient(ent, timeStamp, qfalse, ent);
;522:
;523:				FireWeapon( ent, 0 );
;524:
;525:				G_UnTimeShiftClient(ent);
;526:
;527:				return;
;528:			}
;529:		}
;530:
;531:	}
;532:	*/
;533:
;534:}
LABELV $193
endproc Cmd_HitClients_f 1072 12
export Cmd_Give_f
proc Cmd_Give_f 132 12
line 546
;535:
;536:
;537:
;538:/*
;539:==================
;540:Cmd_Give_f
;541:
;542:Give items to a client
;543:==================
;544:*/
;545:void Cmd_Give_f (gentity_t *ent)
;546:{
line 554
;547:	char		*name;
;548:	gitem_t		*it;
;549:	int			i;
;550:	qboolean	give_all;
;551:	gentity_t		*it_ent;
;552:	trace_t		trace;
;553:
;554:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 76
INDIRI4
CNSTI4 0
NEI4 $197
line 555
;555:		return;
ADDRGP4 $196
JUMPV
LABELV $197
line 558
;556:	}
;557:
;558:	name = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 80
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 80
INDIRP4
ASGNP4
line 560
;559:
;560:	if (Q_stricmp(name, "all") == 0)
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $201
ARGP4
ADDRLP4 84
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 84
INDIRI4
CNSTI4 0
NEI4 $199
line 561
;561:		give_all = qtrue;
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 $200
JUMPV
LABELV $199
line 563
;562:	else
;563:		give_all = qfalse;
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $200
line 565
;564:
;565:	if (give_all || Q_stricmp( name, "health") == 0)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $205
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $204
ARGP4
ADDRLP4 88
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 88
INDIRI4
CNSTI4 0
NEI4 $202
LABELV $205
line 566
;566:	{
line 567
;567:		ent->health = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 92
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 92
INDIRP4
CNSTI4 732
ADDP4
ADDRLP4 92
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 208
ADDP4
INDIRI4
ASGNI4
line 568
;568:		if (!give_all)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $206
line 569
;569:			return;
ADDRGP4 $196
JUMPV
LABELV $206
line 570
;570:	}
LABELV $202
line 572
;571:
;572:	if (give_all || Q_stricmp(name, "weapons") == 0)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $211
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $210
ARGP4
ADDRLP4 92
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 92
INDIRI4
CNSTI4 0
NEI4 $208
LABELV $211
line 573
;573:	{
line 574
;574:		ent->client->ps.stats[STAT_WEAPONS] = (1 << WP_NUM_WEAPONS) - 1 - 
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 192
ADDP4
CNSTI4 1022
ASGNI4
line 576
;575:			( 1 << WP_GRAPPLING_HOOK ) - ( 1 << WP_NONE );
;576:		if (!give_all)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $212
line 577
;577:			return;
ADDRGP4 $196
JUMPV
LABELV $212
line 578
;578:	}
LABELV $208
line 580
;579:
;580:	if (give_all || Q_stricmp(name, "ammo") == 0)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $217
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $216
ARGP4
ADDRLP4 96
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 96
INDIRI4
CNSTI4 0
NEI4 $214
LABELV $217
line 581
;581:	{
line 582
;582:		for ( i = 0 ; i < MAX_WEAPONS ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $218
line 583
;583:			ent->client->ps.ammo[i] = 999;
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 376
ADDP4
ADDP4
CNSTI4 999
ASGNI4
line 584
;584:		}
LABELV $219
line 582
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $218
line 585
;585:		if (!give_all)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $222
line 586
;586:			return;
ADDRGP4 $196
JUMPV
LABELV $222
line 587
;587:	}
LABELV $214
line 589
;588:
;589:	if (give_all || Q_stricmp(name, "armor") == 0)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $227
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $226
ARGP4
ADDRLP4 100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 100
INDIRI4
CNSTI4 0
NEI4 $224
LABELV $227
line 590
;590:	{
line 591
;591:		ent->client->ps.stats[STAT_ARMOR] = 200;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 196
ADDP4
CNSTI4 200
ASGNI4
line 593
;592:
;593:		if (!give_all)
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $228
line 594
;594:			return;
ADDRGP4 $196
JUMPV
LABELV $228
line 595
;595:	}
LABELV $224
line 597
;596:
;597:	if (Q_stricmp(name, "excellent") == 0) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $232
ARGP4
ADDRLP4 104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 104
INDIRI4
CNSTI4 0
NEI4 $230
line 598
;598:		ent->client->ps.persistant[PERS_EXCELLENT_COUNT]++;
ADDRLP4 108
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 288
ADDP4
ASGNP4
ADDRLP4 108
INDIRP4
ADDRLP4 108
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 599
;599:		return;
ADDRGP4 $196
JUMPV
LABELV $230
line 601
;600:	}
;601:	if (Q_stricmp(name, "impressive") == 0) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $235
ARGP4
ADDRLP4 108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 108
INDIRI4
CNSTI4 0
NEI4 $233
line 602
;602:		ent->client->ps.persistant[PERS_IMPRESSIVE_COUNT]++;
ADDRLP4 112
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 284
ADDP4
ASGNP4
ADDRLP4 112
INDIRP4
ADDRLP4 112
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 603
;603:		return;
ADDRGP4 $196
JUMPV
LABELV $233
line 605
;604:	}
;605:	if (Q_stricmp(name, "gauntletaward") == 0) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $238
ARGP4
ADDRLP4 112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 112
INDIRI4
CNSTI4 0
NEI4 $236
line 606
;606:		ent->client->ps.persistant[PERS_GAUNTLET_FRAG_COUNT]++;
ADDRLP4 116
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 300
ADDP4
ASGNP4
ADDRLP4 116
INDIRP4
ADDRLP4 116
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 607
;607:		return;
ADDRGP4 $196
JUMPV
LABELV $236
line 609
;608:	}
;609:	if (Q_stricmp(name, "defend") == 0) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $241
ARGP4
ADDRLP4 116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 116
INDIRI4
CNSTI4 0
NEI4 $239
line 610
;610:		ent->client->ps.persistant[PERS_DEFEND_COUNT]++;
ADDRLP4 120
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 292
ADDP4
ASGNP4
ADDRLP4 120
INDIRP4
ADDRLP4 120
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 611
;611:		return;
ADDRGP4 $196
JUMPV
LABELV $239
line 613
;612:	}
;613:	if (Q_stricmp(name, "assist") == 0) {
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 $244
ARGP4
ADDRLP4 120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 120
INDIRI4
CNSTI4 0
NEI4 $242
line 614
;614:		ent->client->ps.persistant[PERS_ASSIST_COUNT]++;
ADDRLP4 124
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 296
ADDP4
ASGNP4
ADDRLP4 124
INDIRP4
ADDRLP4 124
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 615
;615:		return;
ADDRGP4 $196
JUMPV
LABELV $242
line 619
;616:	}
;617:
;618:	// spawn a specific item right on the player
;619:	if ( !give_all ) {
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $245
line 620
;620:		it = BG_FindItem (name);
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 124
ADDRGP4 BG_FindItem
CALLP4
ASGNP4
ADDRLP4 16
ADDRLP4 124
INDIRP4
ASGNP4
line 621
;621:		if (!it) {
ADDRLP4 16
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $247
line 622
;622:			return;
ADDRGP4 $196
JUMPV
LABELV $247
line 625
;623:		}
;624:
;625:		it_ent = G_Spawn();
ADDRLP4 128
ADDRGP4 G_Spawn
CALLP4
ASGNP4
ADDRLP4 12
ADDRLP4 128
INDIRP4
ASGNP4
line 626
;626:		VectorCopy( ent->r.currentOrigin, it_ent->s.origin );
ADDRLP4 12
INDIRP4
CNSTI4 92
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 488
ADDP4
INDIRB
ASGNB 12
line 627
;627:		it_ent->classname = it->classname;
ADDRLP4 12
INDIRP4
CNSTI4 524
ADDP4
ADDRLP4 16
INDIRP4
INDIRP4
ASGNP4
line 628
;628:		G_SpawnItem (it_ent, it);
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 G_SpawnItem
CALLV
pop
line 629
;629:		FinishSpawningItem(it_ent );
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 FinishSpawningItem
CALLV
pop
line 630
;630:		memset( &trace, 0, sizeof( trace ) );
ADDRLP4 20
ARGP4
CNSTI4 0
ARGI4
CNSTI4 56
ARGI4
ADDRGP4 memset
CALLP4
pop
line 631
;631:		Touch_Item (it_ent, ent, &trace);
ADDRLP4 12
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 20
ARGP4
ADDRGP4 Touch_Item
CALLV
pop
line 632
;632:		if (it_ent->inuse) {
ADDRLP4 12
INDIRP4
CNSTI4 520
ADDP4
INDIRI4
CNSTI4 0
EQI4 $249
line 633
;633:			G_FreeEntity( it_ent );
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 G_FreeEntity
CALLV
pop
line 634
;634:		}
LABELV $249
line 635
;635:	}
LABELV $245
line 636
;636:}
LABELV $196
endproc Cmd_Give_f 132 12
export Cmd_God_f
proc Cmd_God_f 16 8
line 649
;637:
;638:
;639:/*
;640:==================
;641:Cmd_God_f
;642:
;643:Sets client to godmode
;644:
;645:argv(0) god
;646:==================
;647:*/
;648:void Cmd_God_f (gentity_t *ent)
;649:{
line 652
;650:	char	*msg;
;651:
;652:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $252
line 653
;653:		return;
ADDRGP4 $251
JUMPV
LABELV $252
line 656
;654:	}
;655:
;656:	ent->flags ^= FL_GODMODE;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 16
BXORI4
ASGNI4
line 657
;657:	if (!(ent->flags & FL_GODMODE) )
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
NEI4 $254
line 658
;658:		msg = "godmode OFF\n";
ADDRLP4 0
ADDRGP4 $256
ASGNP4
ADDRGP4 $255
JUMPV
LABELV $254
line 660
;659:	else
;660:		msg = "godmode ON\n";
ADDRLP4 0
ADDRGP4 $257
ASGNP4
LABELV $255
line 662
;661:
;662:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $258
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 663
;663:}
LABELV $251
endproc Cmd_God_f 16 8
export Cmd_Notarget_f
proc Cmd_Notarget_f 16 8
line 675
;664:
;665:
;666:/*
;667:==================
;668:Cmd_Notarget_f
;669:
;670:Sets client to notarget
;671:
;672:argv(0) notarget
;673:==================
;674:*/
;675:void Cmd_Notarget_f( gentity_t *ent ) {
line 678
;676:	char	*msg;
;677:
;678:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $260
line 679
;679:		return;
ADDRGP4 $259
JUMPV
LABELV $260
line 682
;680:	}
;681:
;682:	ent->flags ^= FL_NOTARGET;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 32
BXORI4
ASGNI4
line 683
;683:	if (!(ent->flags & FL_NOTARGET) )
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
NEI4 $262
line 684
;684:		msg = "notarget OFF\n";
ADDRLP4 0
ADDRGP4 $264
ASGNP4
ADDRGP4 $263
JUMPV
LABELV $262
line 686
;685:	else
;686:		msg = "notarget ON\n";
ADDRLP4 0
ADDRGP4 $265
ASGNP4
LABELV $263
line 688
;687:
;688:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $258
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 689
;689:}
LABELV $259
endproc Cmd_Notarget_f 16 8
export Cmd_Noclip_f
proc Cmd_Noclip_f 20 8
line 699
;690:
;691:
;692:/*
;693:==================
;694:Cmd_Noclip_f
;695:
;696:argv(0) noclip
;697:==================
;698:*/
;699:void Cmd_Noclip_f( gentity_t *ent ) {
line 702
;700:	char	*msg;
;701:
;702:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $267
line 703
;703:		return;
ADDRGP4 $266
JUMPV
LABELV $267
line 706
;704:	}
;705:
;706:	if ( ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10240
ADDP4
INDIRI4
CNSTI4 0
EQI4 $269
line 707
;707:		msg = "noclip OFF\n";
ADDRLP4 0
ADDRGP4 $271
ASGNP4
line 708
;708:	} else {
ADDRGP4 $270
JUMPV
LABELV $269
line 709
;709:		msg = "noclip ON\n";
ADDRLP4 0
ADDRGP4 $272
ASGNP4
line 710
;710:	}
LABELV $270
line 711
;711:	ent->client->noclip = !ent->client->noclip;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10240
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 0
NEI4 $274
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 $275
JUMPV
LABELV $274
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $275
ADDRLP4 12
INDIRP4
ADDRLP4 8
INDIRI4
ASGNI4
line 713
;712:
;713:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $258
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 16
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 714
;714:}
LABELV $266
endproc Cmd_Noclip_f 20 8
export Cmd_LevelShot_f
proc Cmd_LevelShot_f 4 8
line 727
;715:
;716:
;717:/*
;718:==================
;719:Cmd_LevelShot_f
;720:
;721:This is just to help generate the level pictures
;722:for the menus.  It goes to the intermission immediately
;723:and sends over a command to the client to resize the view,
;724:hide the scoreboard, and take a special screenshot
;725:==================
;726:*/
;727:void Cmd_LevelShot_f( gentity_t *ent ) {
line 728
;728:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $277
line 729
;729:		return;
ADDRGP4 $276
JUMPV
LABELV $277
line 733
;730:	}
;731:
;732:	// doesn't work in single player
;733:	if ( g_gametype.integer != 0 ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 0
EQI4 $279
line 734
;734:		trap_SendServerCommand( ent-g_entities, 
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $282
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 736
;735:			"print \"Must be in g_gametype 0 for levelshot\n\"" );
;736:		return;
ADDRGP4 $276
JUMPV
LABELV $279
line 739
;737:	}
;738:
;739:	BeginIntermission();
ADDRGP4 BeginIntermission
CALLV
pop
line 740
;740:	trap_SendServerCommand( ent-g_entities, "clientLevelShot" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $283
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 741
;741:}
LABELV $276
endproc Cmd_LevelShot_f 4 8
export Cmd_TeamTask_f
proc Cmd_TeamTask_f 2068 12
line 754
;742:
;743:
;744:/*
;745:==================
;746:Cmd_LevelShot_f
;747:
;748:This is just to help generate the level pictures
;749:for the menus.  It goes to the intermission immediately
;750:and sends over a command to the client to resize the view,
;751:hide the scoreboard, and take a special screenshot
;752:==================
;753:*/
;754:void Cmd_TeamTask_f( gentity_t *ent ) {
line 758
;755:	char userinfo[MAX_INFO_STRING];
;756:	char		arg[MAX_TOKEN_CHARS];
;757:	int task;
;758:	int client = ent->client - level.clients;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 10828
DIVI4
ASGNI4
line 760
;759:
;760:	if ( trap_Argc() != 2 ) {
ADDRLP4 2056
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 2
EQI4 $285
line 761
;761:		return;
ADDRGP4 $284
JUMPV
LABELV $285
line 763
;762:	}
;763:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 764
;764:	task = atoi( arg );
ADDRLP4 1028
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 2052
ADDRLP4 2060
INDIRI4
ASGNI4
line 766
;765:
;766:	trap_GetUserinfo(client, userinfo, sizeof(userinfo));
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 767
;767:	Info_SetValueForKey(userinfo, "teamtask", va("%d", task));
ADDRGP4 $288
ARGP4
ADDRLP4 2052
INDIRI4
ARGI4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
ARGP4
ADDRGP4 $287
ARGP4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 Info_SetValueForKey
CALLV
pop
line 768
;768:	trap_SetUserinfo(client, userinfo);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
ADDRGP4 trap_SetUserinfo
CALLV
pop
line 769
;769:	ClientUserinfoChanged(client);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 770
;770:}
LABELV $284
endproc Cmd_TeamTask_f 2068 12
export Cmd_Kill_f
proc Cmd_Kill_f 20 20
line 779
;771:
;772:
;773:
;774:/*
;775:=================
;776:Cmd_Kill_f
;777:=================
;778:*/
;779:void Cmd_Kill_f( gentity_t *ent ) {
line 783
;780:/*freeze
;781:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
;782:freeze*/
;783:	if ( (g_gamemode.integer > 3 && is_spectator( ent->client )) || 
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $295
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 is_spectator
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $294
LABELV $295
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 4
GEI4 $290
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $290
LABELV $294
line 784
;784:		(g_gamemode.integer < 4 && ent->client->sess.sessionTeam == TEAM_SPECTATOR)) {
line 786
;785://freeze
;786:		return;
ADDRGP4 $289
JUMPV
LABELV $290
line 788
;787:	}
;788:	if ( level.match_called == 1 ) {
ADDRGP4 level+10828
INDIRI4
CNSTI4 1
NEI4 $296
line 789
;789:		return;
ADDRGP4 $289
JUMPV
LABELV $296
line 791
;790:	}
;791:	if (ent->health <= 0) {
ADDRFP4 0
INDIRP4
CNSTI4 732
ADDP4
INDIRI4
CNSTI4 0
GTI4 $299
line 792
;792:		return;
ADDRGP4 $289
JUMPV
LABELV $299
line 794
;793:	}
;794:	ent->flags &= ~FL_GODMODE;
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 795
;795:	ent->client->ps.stats[STAT_HEALTH] = ent->health = -999;
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
CNSTI4 -999
ASGNI4
ADDRLP4 8
INDIRP4
CNSTI4 732
ADDP4
ADDRLP4 12
INDIRI4
ASGNI4
ADDRLP4 8
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 184
ADDP4
ADDRLP4 12
INDIRI4
ASGNI4
line 797
;796:
;797:	player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 16
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 16
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 20
ARGI4
ADDRGP4 player_die
CALLV
pop
line 798
;798:}
LABELV $289
endproc Cmd_Kill_f 20 20
export BroadcastTeamChange
proc BroadcastTeamChange 8 8
line 808
;799:
;800:/*
;801:=================
;802:BroadCastTeamChange
;803:
;804:Let everyone know about a team change
;805:=================
;806:*/
;807:void BroadcastTeamChange( gclient_t *client, int oldTeam )
;808:{
line 809
;809:	if ( client->sess.sessionTeam == TEAM_RED ) {
ADDRFP4 0
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 1
NEI4 $302
line 810
;810:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " joined the red team.\n\"",
ADDRGP4 $304
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 812
;811:			client->pers.netname) );
;812:	} else if ( client->sess.sessionTeam == TEAM_BLUE ) {
ADDRGP4 $303
JUMPV
LABELV $302
ADDRFP4 0
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
NEI4 $305
line 813
;813:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " joined the blue team.\n\"",
ADDRGP4 $307
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 815
;814:		client->pers.netname));
;815:	} else if ( client->sess.sessionTeam == TEAM_SPECTATOR && oldTeam != TEAM_SPECTATOR ) {
ADDRGP4 $306
JUMPV
LABELV $305
ADDRLP4 0
CNSTI4 3
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $308
ADDRFP4 4
INDIRI4
ADDRLP4 0
INDIRI4
EQI4 $308
line 816
;816:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " joined the spectators.\n\"",
ADDRGP4 $310
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 818
;817:		client->pers.netname));
;818:	} else if ( client->sess.sessionTeam == TEAM_FREE ) {
ADDRGP4 $309
JUMPV
LABELV $308
ADDRFP4 0
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 0
NEI4 $311
line 819
;819:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " joined the battle.\n\"",
ADDRGP4 $313
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 821
;820:		client->pers.netname));
;821:	}
LABELV $311
LABELV $309
LABELV $306
LABELV $303
line 822
;822:}
LABELV $301
endproc BroadcastTeamChange 8 8
export CheckForAutoUnlock
proc CheckForAutoUnlock 8 8
line 829
;823:
;824:/*
;825:=================
;826:CheckForAutoUnlock
;827:=================
;828:*/
;829:void CheckForAutoUnlock ( int team ) {
line 831
;830:	//FIXME: Using a time hack to prevent auto-unlocking on map_restarts
;831:	if ( level.waited[team] >= level.time ) {
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10848
ADDP4
INDIRI4
ADDRGP4 level+40
INDIRI4
LTI4 $315
line 832
;832:		level.waited[team] = 0;
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10848
ADDP4
CNSTI4 0
ASGNI4
line 833
;833:		if ( level.team_Locked[team] && TeamCount(-1, team) == 0 ) {
ADDRLP4 0
ADDRFP4 0
INDIRI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
INDIRI4
CNSTI4 0
EQI4 $316
CNSTI4 -1
ARGI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 4
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $316
line 834
;834:			level.team_Locked[team] = qfalse;
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
CNSTI4 0
ASGNI4
line 835
;835:		}
line 836
;836:	} else if ( level.waited[team] == 0 ) {
ADDRGP4 $316
JUMPV
LABELV $315
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10848
ADDP4
INDIRI4
CNSTI4 0
NEI4 $324
line 837
;837:		level.waited[team] = level.time + 10000;
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10848
ADDP4
ADDRGP4 level+40
INDIRI4
CNSTI4 10000
ADDI4
ASGNI4
line 838
;838:	}
LABELV $324
LABELV $316
line 839
;839:}
LABELV $314
endproc CheckForAutoUnlock 8 8
export SetTeam
proc SetTeam 96 20
line 846
;840:
;841:/*
;842:=================
;843:SetTeam
;844:=================
;845:*/
;846:void SetTeam( gentity_t *ent, char *s, qboolean forced ) {
line 857
;847:	int					team, oldTeam;
;848:	gclient_t			*client;
;849:	int					clientNum;
;850:	spectatorState_t	specState;
;851:	int					specClient;
;852:	int					teamLeader;
;853:
;854:	//
;855:	// see what change is requested
;856:	//
;857:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
line 858
;858:	oldTeam = client->sess.sessionTeam;
ADDRLP4 8
ADDRLP4 0
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 860
;859:
;860:	clientNum = client - level.clients;
ADDRLP4 12
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 10828
DIVI4
ASGNI4
line 861
;861:	specClient = 0;
ADDRLP4 20
CNSTI4 0
ASGNI4
line 862
;862:	specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 863
;863:	if ( !Q_stricmp( s, "scoreboard" ) || !Q_stricmp( s, "score" )  ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $332
ARGP4
ADDRLP4 28
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
EQI4 $334
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $333
ARGP4
ADDRLP4 32
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 0
NEI4 $330
LABELV $334
line 864
;864:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 865
;865:		specState = SPECTATOR_SCOREBOARD;
ADDRLP4 16
CNSTI4 3
ASGNI4
line 866
;866:	} else if ( !Q_stricmp( s, "follow1" ) ) {
ADDRGP4 $331
JUMPV
LABELV $330
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $337
ARGP4
ADDRLP4 36
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 36
INDIRI4
CNSTI4 0
NEI4 $335
line 867
;867:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 868
;868:		specState = SPECTATOR_FOLLOW;
ADDRLP4 16
CNSTI4 2
ASGNI4
line 869
;869:		specClient = -1;
ADDRLP4 20
CNSTI4 -1
ASGNI4
line 870
;870:	} else if ( !Q_stricmp( s, "follow2" ) ) {
ADDRGP4 $336
JUMPV
LABELV $335
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $340
ARGP4
ADDRLP4 40
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 40
INDIRI4
CNSTI4 0
NEI4 $338
line 871
;871:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 872
;872:		specState = SPECTATOR_FOLLOW;
ADDRLP4 16
CNSTI4 2
ASGNI4
line 873
;873:		specClient = -2;
ADDRLP4 20
CNSTI4 -2
ASGNI4
line 874
;874:	} else if ( !Q_stricmp( s, "spectator" ) || !Q_stricmp( s, "s" ) ) {
ADDRGP4 $339
JUMPV
LABELV $338
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $343
ARGP4
ADDRLP4 44
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 44
INDIRI4
CNSTI4 0
EQI4 $345
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $344
ARGP4
ADDRLP4 48
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 48
INDIRI4
CNSTI4 0
NEI4 $341
LABELV $345
line 875
;875:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 876
;876:		specState = SPECTATOR_FREE;
ADDRLP4 16
CNSTI4 1
ASGNI4
line 877
;877:	} else if ( g_gametype.integer >= GT_TEAM ) {
ADDRGP4 $342
JUMPV
LABELV $341
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $346
line 879
;878:		// if running a team game, assign player to one of the teams
;879:		specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 880
;880:		if ( !Q_stricmp( s, "red" ) || !Q_stricmp( s, "r" ) ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $351
ARGP4
ADDRLP4 52
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 52
INDIRI4
CNSTI4 0
EQI4 $353
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $352
ARGP4
ADDRLP4 56
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 56
INDIRI4
CNSTI4 0
NEI4 $349
LABELV $353
line 881
;881:			if ( level.team_Locked[TEAM_RED] == qtrue && !forced ) {
ADDRGP4 level+10864+4
INDIRI4
CNSTI4 1
NEI4 $354
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $354
line 882
;882:				trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
ADDRGP4 $358
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 884
;883:					"cp \"Red team is Locked\n\"" );
;884:				team = oldTeam;
ADDRLP4 4
ADDRLP4 8
INDIRI4
ASGNI4
line 885
;885:			} else {
ADDRGP4 $350
JUMPV
LABELV $354
line 886
;886:				team = TEAM_RED;
ADDRLP4 4
CNSTI4 1
ASGNI4
line 887
;887:			}
line 888
;888:		} else if ( !Q_stricmp( s, "blue" ) || !Q_stricmp( s, "b" ) ) {
ADDRGP4 $350
JUMPV
LABELV $349
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $361
ARGP4
ADDRLP4 60
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 60
INDIRI4
CNSTI4 0
EQI4 $363
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $362
ARGP4
ADDRLP4 64
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 64
INDIRI4
CNSTI4 0
NEI4 $359
LABELV $363
line 889
;889:			if ( level.team_Locked[TEAM_BLUE] == qtrue && !forced ) {
ADDRGP4 level+10864+8
INDIRI4
CNSTI4 1
NEI4 $364
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $364
line 890
;890:				trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
ADDRGP4 $368
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 892
;891:					"cp \"Blue team is Locked\n\"" );
;892:				team = oldTeam;
ADDRLP4 4
ADDRLP4 8
INDIRI4
ASGNI4
line 893
;893:			} else {
ADDRGP4 $360
JUMPV
LABELV $364
line 894
;894:				team = TEAM_BLUE;
ADDRLP4 4
CNSTI4 2
ASGNI4
line 895
;895:			}
line 896
;896:		} else {
ADDRGP4 $360
JUMPV
LABELV $359
line 898
;897:			// pick the team with the least number of players
;898:			team = PickTeam( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRLP4 68
ADDRGP4 PickTeam
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 68
INDIRI4
ASGNI4
line 899
;899:		}
LABELV $360
LABELV $350
line 901
;900:
;901:		if ( g_teamForceBalance.integer  ) {
ADDRGP4 g_teamForceBalance+12
INDIRI4
CNSTI4 0
EQI4 $347
line 904
;902:			int		counts[TEAM_NUM_TEAMS];
;903:
;904:			counts[TEAM_BLUE] = TeamCount( ent->client->ps.clientNum, TEAM_BLUE );
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 84
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 68+8
ADDRLP4 84
INDIRI4
ASGNI4
line 905
;905:			counts[TEAM_RED] = TeamCount( ent->client->ps.clientNum, TEAM_RED );
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 88
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 68+4
ADDRLP4 88
INDIRI4
ASGNI4
line 908
;906:
;907:			// We allow a spread of two
;908:			if ( team == TEAM_RED && counts[TEAM_RED] - counts[TEAM_BLUE] > 1 ) {
ADDRLP4 92
CNSTI4 1
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 92
INDIRI4
NEI4 $374
ADDRLP4 68+4
INDIRI4
ADDRLP4 68+8
INDIRI4
SUBI4
ADDRLP4 92
INDIRI4
LEI4 $374
line 909
;909:				trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
ADDRGP4 $378
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 911
;910:					"cp \"Red team has too many players.\n\"" );
;911:				return; // ignore the request
ADDRGP4 $329
JUMPV
LABELV $374
line 913
;912:			}
;913:			if ( team == TEAM_BLUE && counts[TEAM_BLUE] - counts[TEAM_RED] > 1 ) {
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $347
ADDRLP4 68+8
INDIRI4
ADDRLP4 68+4
INDIRI4
SUBI4
CNSTI4 1
LEI4 $347
line 914
;914:				trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
ADDRGP4 $383
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 916
;915:					"cp \"Blue team has too many players.\n\"" );
;916:				return; // ignore the request
ADDRGP4 $329
JUMPV
line 920
;917:			}
;918:
;919:			// It's ok, the team we are switching to has less or same number of players
;920:		}
line 922
;921:
;922:	} else {
LABELV $346
line 924
;923:		// force them to spectators if there aren't any spots free
;924:		team = TEAM_FREE;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 925
;925:	}
LABELV $347
LABELV $342
LABELV $339
LABELV $336
LABELV $331
line 929
;926:
;927:	
;928:	// override decision if limiting the players
;929:	if ( (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $384
ADDRGP4 level+121
INDIRU1
CVUI4 1
CNSTI4 2
LTI4 $384
line 930
;930:		&& level.numNonSpectatorClients >= 2 ) {
line 931
;931:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 932
;932:	} else if ( g_maxGameClients.integer > 0 && 
ADDRGP4 $385
JUMPV
LABELV $384
ADDRGP4 g_maxGameClients+12
INDIRI4
CNSTI4 0
LEI4 $388
ADDRGP4 level+121
INDIRU1
CVUI4 1
ADDRGP4 g_maxGameClients+12
INDIRI4
LTI4 $388
line 933
;933:		level.numNonSpectatorClients >= g_maxGameClients.integer ) {
line 934
;934:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 935
;935:	}
LABELV $388
LABELV $385
line 941
;936:
;937:	//
;938:	// decide if we will allow the change
;939:	//
;940:	//oldTeam = client->sess.sessionTeam;
;941:	if ( team == oldTeam && team != TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $393
ADDRLP4 4
INDIRI4
CNSTI4 3
EQI4 $393
line 942
;942:		return;
ADDRGP4 $329
JUMPV
LABELV $393
line 950
;943:	}
;944:
;945:	//
;946:	// execute the team change
;947:	//
;948:
;949:	// if the player was dead leave the body
;950:	if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 184
ADDP4
INDIRI4
CNSTI4 0
GTI4 $395
line 951
;951:		CopyToBodyQue(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 CopyToBodyQue
CALLV
pop
line 952
;952:	}
LABELV $395
line 955
;953:
;954:	// he starts at 'base'
;955:	client->pers.teamState.state = TEAM_BEGIN;
ADDRLP4 0
INDIRP4
CNSTI4 560
ADDP4
CNSTI4 0
ASGNI4
line 956
;956:	if ( oldTeam != TEAM_SPECTATOR ) {
ADDRLP4 8
INDIRI4
CNSTI4 3
EQI4 $397
line 958
;957:		// Kill him (makes sure he loses flags, etc)
;958:		ent->flags &= ~FL_GODMODE;
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 536
ADDP4
ASGNP4
ADDRLP4 56
INDIRP4
ADDRLP4 56
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 959
;959:		ent->client->ps.stats[STAT_HEALTH] = ent->health = 0;
ADDRLP4 60
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRLP4 60
INDIRP4
CNSTI4 732
ADDP4
ADDRLP4 64
INDIRI4
ASGNI4
ADDRLP4 60
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 184
ADDP4
ADDRLP4 64
INDIRI4
ASGNI4
line 960
;960:		player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 68
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 68
INDIRP4
ARGP4
ADDRLP4 68
INDIRP4
ARGP4
ADDRLP4 68
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 20
ARGI4
ADDRGP4 player_die
CALLV
pop
line 962
;961:
;962:	}
LABELV $397
line 964
;963:	// they go to the end of the line for tournements
;964:	if ( team == TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
CNSTI4 3
NEI4 $399
line 965
;965:		client->sess.spectatorTime = level.time;
ADDRLP4 0
INDIRP4
CNSTI4 10192
ADDP4
ADDRGP4 level+40
INDIRI4
ASGNI4
line 966
;966:	}
LABELV $399
line 968
;967:
;968:	if ( level.team_Locked[team] ) {
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
INDIRI4
CNSTI4 0
EQI4 $402
line 970
;969:		//FIXME: Needed fail-safe?
;970:		return;
ADDRGP4 $329
JUMPV
LABELV $402
line 972
;971:	}
;972:	client->sess.sessionTeam = team;
ADDRLP4 0
INDIRP4
CNSTI4 10188
ADDP4
ADDRLP4 4
INDIRI4
ASGNI4
line 973
;973:	client->sess.spectatorState = specState;
ADDRLP4 0
INDIRP4
CNSTI4 10196
ADDP4
ADDRLP4 16
INDIRI4
ASGNI4
line 974
;974:	client->sess.spectatorClient = specClient;
ADDRLP4 0
INDIRP4
CNSTI4 10200
ADDP4
ADDRLP4 20
INDIRI4
ASGNI4
line 976
;975:
;976:	client->sess.teamLeader = qfalse;
ADDRLP4 0
INDIRP4
CNSTI4 10212
ADDP4
CNSTI4 0
ASGNI4
line 977
;977:	if ( team == TEAM_RED || team == TEAM_BLUE ) {
ADDRLP4 4
INDIRI4
CNSTI4 1
EQI4 $407
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $405
LABELV $407
line 978
;978:		teamLeader = TeamLeader( team );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 TeamLeader
CALLI4
ASGNI4
ADDRLP4 24
ADDRLP4 60
INDIRI4
ASGNI4
line 980
;979:		// if there is no team leader or the team leader is a bot and this client is not a bot
;980:		if ( teamLeader == -1 || ( !(g_entities[clientNum].r.svFlags & SVF_BOT) && (g_entities[teamLeader].r.svFlags & SVF_BOT) ) ) {
ADDRLP4 64
ADDRLP4 24
INDIRI4
ASGNI4
ADDRLP4 64
INDIRI4
CNSTI4 -1
EQI4 $414
ADDRLP4 68
CNSTI4 896
ASGNI4
ADDRLP4 72
CNSTI4 8
ASGNI4
ADDRLP4 76
CNSTI4 0
ASGNI4
ADDRLP4 68
INDIRI4
ADDRLP4 12
INDIRI4
MULI4
ADDRGP4 g_entities+208+216
ADDP4
INDIRI4
ADDRLP4 72
INDIRI4
BANDI4
ADDRLP4 76
INDIRI4
NEI4 $408
ADDRLP4 68
INDIRI4
ADDRLP4 64
INDIRI4
MULI4
ADDRGP4 g_entities+208+216
ADDP4
INDIRI4
ADDRLP4 72
INDIRI4
BANDI4
ADDRLP4 76
INDIRI4
EQI4 $408
LABELV $414
line 981
;981:			SetLeader( team, clientNum );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 SetLeader
CALLV
pop
line 982
;982:		}
LABELV $408
line 983
;983:	}
LABELV $405
line 985
;984:	// make sure there is a team leader on the team the player came from
;985:	if ( oldTeam == TEAM_RED || oldTeam == TEAM_BLUE ) {
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $417
ADDRLP4 8
INDIRI4
CNSTI4 2
NEI4 $415
LABELV $417
line 986
;986:		CheckTeamLeader( oldTeam );
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 CheckTeamLeader
CALLV
pop
line 987
;987:	}
LABELV $415
line 989
;988:
;989:	BroadcastTeamChange( client, oldTeam );
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 BroadcastTeamChange
CALLV
pop
line 992
;990:
;991:	// get and distribute relevent paramters
;992:	ClientUserinfoChanged( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 994
;993:
;994:	ClientBegin( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 ClientBegin
CALLV
pop
line 995
;995:}
LABELV $329
endproc SetTeam 96 20
export StopFollowing
proc StopFollowing 24 12
line 1005
;996:
;997:/*
;998:=================
;999:StopFollowing
;1000:
;1001:If the client being followed leaves the game, or you just want to drop
;1002:to free floating spectator mode
;1003:=================
;1004:*/
;1005:void StopFollowing( gentity_t *ent ) {
line 1006
;1006:	ent->client->ps.persistant[ PERS_TEAM ] = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 260
ADDP4
CNSTI4 3
ASGNI4
line 1007
;1007:	/*freeze*/if ( g_gamemode.integer < 4 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 4
GEI4 $419
line 1008
;1008:	ent->client->sess.sessionTeam = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
CNSTI4 3
ASGNI4
line 1009
;1009:	}
LABELV $419
line 1011
;1010:/*freeze*/
;1011:	SetClientViewAngle( ent, ent->client->ps.viewangles );
ADDRLP4 0
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 152
ADDP4
ARGP4
ADDRGP4 SetClientViewAngle
CALLV
pop
line 1012
;1012:	ent->client->ps.stats[ STAT_HEALTH ] = ent->health = 100;
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
CNSTI4 100
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 732
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 184
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
line 1013
;1013:	memset( ent->client->ps.powerups, 0, sizeof ( ent->client->ps.powerups ) );
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 312
ADDP4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 64
ARGI4
ADDRGP4 memset
CALLP4
pop
line 1015
;1014://freeze
;1015:	if ( g_gamemode.integer > 3 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $422
line 1016
;1016:	ent->client->sess.spectatorState = SPECTATOR_FREE;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
CNSTI4 1
ASGNI4
line 1017
;1017:	ent->client->ps.pm_flags &= ~PMF_FOLLOW;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 -4097
BANDI4
ASGNI4
line 1018
;1018:	ent->r.svFlags &= ~SVF_BOT;
ADDRLP4 16
ADDRFP4 0
INDIRP4
CNSTI4 424
ADDP4
ASGNP4
ADDRLP4 16
INDIRP4
ADDRLP4 16
INDIRP4
INDIRI4
CNSTI4 -9
BANDI4
ASGNI4
line 1019
;1019:	ent->client->ps.clientNum = ent - g_entities;
ADDRLP4 20
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ASGNI4
line 1020
;1020:	}
LABELV $422
line 1021
;1021:}
LABELV $418
endproc StopFollowing 24 12
export Cmd_Team_f
proc Cmd_Team_f 1044 12
line 1028
;1022:
;1023:/*
;1024:=================
;1025:Cmd_Team_f
;1026:=================
;1027:*/
;1028:void Cmd_Team_f( gentity_t *ent ) {
line 1029
;1029:	int			oldTeam = ent->client->sess.sessionTeam;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 1032
;1030:	char		s[MAX_TOKEN_CHARS];
;1031:
;1032:	if ( ent->client->sess.speconly & 2 && !sv_allowUnnamed.integer ) {
ADDRLP4 1028
CNSTI4 0
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10220
ADDP4
INDIRI4
CNSTI4 2
BANDI4
ADDRLP4 1028
INDIRI4
EQI4 $426
ADDRGP4 sv_allowUnnamed+12
INDIRI4
ADDRLP4 1028
INDIRI4
NEI4 $426
line 1033
;1033:		trap_SendServerCommand( ent-g_entities, "print \"^3You're not allowed to join the game as UnnamedPlayer\n\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $429
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1034
;1034:	}
LABELV $426
line 1036
;1035:
;1036:	if ( trap_Argc() != 2 ) {
ADDRLP4 1032
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 2
EQI4 $430
line 1037
;1037:		switch ( oldTeam ) {
ADDRLP4 1036
ADDRLP4 1024
INDIRI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 0
LTI4 $425
ADDRLP4 1036
INDIRI4
CNSTI4 3
GTI4 $425
ADDRLP4 1036
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $442
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $442
address $438
address $436
address $434
address $440
code
LABELV $434
line 1039
;1038:		case TEAM_BLUE:
;1039:			trap_SendServerCommand( ent-g_entities, "print \"Blue team\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $435
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1040
;1040:			break;
ADDRGP4 $425
JUMPV
LABELV $436
line 1042
;1041:		case TEAM_RED:
;1042:			trap_SendServerCommand( ent-g_entities, "print \"Red team\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $437
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1043
;1043:			break;
ADDRGP4 $425
JUMPV
LABELV $438
line 1045
;1044:		case TEAM_FREE:
;1045:			trap_SendServerCommand( ent-g_entities, "print \"Free team\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $439
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1046
;1046:			break;
ADDRGP4 $425
JUMPV
LABELV $440
line 1048
;1047:		case TEAM_SPECTATOR:
;1048:			trap_SendServerCommand( ent-g_entities, "print \"Spectator team\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $441
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1050
;1049:			//FIXME: Add part of auto-unlock here?
;1050:			break;
line 1052
;1051:		}
;1052:		return;
ADDRGP4 $425
JUMPV
LABELV $430
line 1055
;1053:	}
;1054:
;1055:	if ( ent->client->switchTeamTime > level.time ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10368
ADDP4
INDIRI4
ADDRGP4 level+40
INDIRI4
LEI4 $443
line 1056
;1056:		trap_SendServerCommand( ent-g_entities, "print \"May not switch teams more than once per 5 seconds.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $446
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1057
;1057:		return;
ADDRGP4 $425
JUMPV
LABELV $443
line 1061
;1058:	}
;1059:
;1060:	// if they are playing a tournement game, count as a loss
;1061:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $447
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 0
NEI4 $447
line 1062
;1062:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 1063
;1063:		ent->client->sess.losses++;
ADDRLP4 1036
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10208
ADDP4
ASGNP4
ADDRLP4 1036
INDIRP4
ADDRLP4 1036
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1064
;1064:	}
LABELV $447
line 1067
;1065:
;1066://freeze
;1067:	if ( g_gamemode.integer > 3 && ent->freezeState ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $450
ADDRFP4 0
INDIRP4
CNSTI4 888
ADDP4
INDIRI4
CNSTI4 0
EQI4 $450
line 1068
;1068:		if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
INDIRI4
CNSTI4 2
NEI4 $425
line 1069
;1069:			StopFollowing( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 1070
;1070:		}
line 1071
;1071:		return;
ADDRGP4 $425
JUMPV
LABELV $450
line 1074
;1072:	}
;1073://freeze
;1074:	trap_Argv( 1, s, sizeof( s ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1075
;1075:	if ( s[0] == 'b' && level.team_Locked[TEAM_BLUE] || atoi(s) == TEAM_BLUE && level.team_Locked[TEAM_BLUE] ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 98
NEI4 $462
ADDRGP4 level+10864+8
INDIRI4
CNSTI4 0
NEI4 $461
LABELV $462
ADDRLP4 0
ARGP4
ADDRLP4 1036
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
NEI4 $455
ADDRGP4 level+10864+8
INDIRI4
CNSTI4 0
EQI4 $455
LABELV $461
line 1076
;1076:		trap_SendServerCommand( ent-g_entities, "print \"Blue team is Locked\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $463
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1077
;1077:		return;
ADDRGP4 $425
JUMPV
LABELV $455
line 1078
;1078:	} else if ( s[0] == 'r' && level.team_Locked[TEAM_RED] || atoi(s) == TEAM_RED && level.team_Locked[TEAM_RED] ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 114
NEI4 $471
ADDRGP4 level+10864+4
INDIRI4
CNSTI4 0
NEI4 $470
LABELV $471
ADDRLP4 0
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 1
NEI4 $464
ADDRGP4 level+10864+4
INDIRI4
CNSTI4 0
EQI4 $464
LABELV $470
line 1079
;1079:		trap_SendServerCommand( ent-g_entities, "print \"Red team is Locked\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $472
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1080
;1080:		return;
ADDRGP4 $425
JUMPV
LABELV $464
line 1081
;1081:	} else if ( level.team_Locked[TEAM_FREE] ) {
ADDRGP4 level+10864
INDIRI4
CNSTI4 0
EQI4 $473
line 1082
;1082:		trap_SendServerCommand( ent-g_entities, "print \"Free team is Locked\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $476
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1083
;1083:		return;
ADDRGP4 $425
JUMPV
LABELV $473
line 1086
;1084:	}
;1085:
;1086:	SetTeam( ent, s, qfalse);
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 SetTeam
CALLV
pop
line 1088
;1087:
;1088:	if ( oldTeam != ent->client->sess.sessionTeam )
ADDRLP4 1024
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
EQI4 $477
line 1089
;1089:		ent->client->switchTeamTime = level.time + 5000;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10368
ADDP4
ADDRGP4 level+40
INDIRI4
CNSTI4 5000
ADDI4
ASGNI4
LABELV $477
line 1090
;1090:}
LABELV $425
endproc Cmd_Team_f 1044 12
export Cmd_Follow_f
proc Cmd_Follow_f 1044 12
line 1098
;1091:
;1092:
;1093:/*
;1094:=================
;1095:Cmd_Follow_f
;1096:=================
;1097:*/
;1098:void Cmd_Follow_f( gentity_t *ent ) {
line 1102
;1099:	int		i;
;1100:	char	arg[MAX_TOKEN_CHARS];
;1101:
;1102:	if ( trap_Argc() != 2 ) {
ADDRLP4 1028
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 2
EQI4 $481
line 1103
;1103:		if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
INDIRI4
CNSTI4 2
NEI4 $480
line 1104
;1104:			StopFollowing( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 1105
;1105:		}
line 1106
;1106:		return;
ADDRGP4 $480
JUMPV
LABELV $481
line 1109
;1107:	}
;1108:
;1109:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1110
;1110:	i = ClientNumberFromString( ent, arg );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1032
ADDRGP4 ClientNumberFromString
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 1032
INDIRI4
ASGNI4
line 1111
;1111:	if ( i == -1 ) {
ADDRLP4 0
INDIRI4
CNSTI4 -1
NEI4 $485
line 1112
;1112:		return;
ADDRGP4 $480
JUMPV
LABELV $485
line 1116
;1113:	}
;1114:
;1115:	// can't follow self
;1116:	if ( &level.clients[ i ] == ent->client ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CVPU4 4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
NEU4 $487
line 1117
;1117:		return;
ADDRGP4 $480
JUMPV
LABELV $487
line 1122
;1118:	}
;1119:
;1120:	// can't follow another spectator
;1121://freeze
;1122:	if ( g_gamemode.integer > 3 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $489
line 1123
;1123:		if ( ent->freezeState && !is_spectator( ent->client ) ) return;
ADDRLP4 1036
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1036
INDIRP4
CNSTI4 888
ADDP4
INDIRI4
CNSTI4 0
EQI4 $490
ADDRLP4 1036
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ARGP4
ADDRLP4 1040
ADDRGP4 is_spectator
CALLI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 0
NEI4 $490
ADDRGP4 $480
JUMPV
line 1124
;1124:	} else {
LABELV $489
line 1125
;1125:		if ( ent->client->sess.sessionTeam != TEAM_SPECTATOR && level.clients[ i ].sess.sessionTeam != ent->client->sess.sessionTeam ) return;
ADDRLP4 1036
CNSTI4 10188
ASGNI4
ADDRLP4 1040
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ADDRLP4 1036
INDIRI4
ADDP4
INDIRI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 3
EQI4 $494
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ADDRLP4 1036
INDIRI4
ADDP4
INDIRI4
ADDRLP4 1040
INDIRI4
EQI4 $494
ADDRGP4 $480
JUMPV
LABELV $494
line 1126
;1126:		}
LABELV $490
line 1127
;1127:	if ( (g_gamemode.integer > 3 && is_spectator( &level.clients[ i ] )) ||
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $501
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ARGP4
ADDRLP4 1036
ADDRGP4 is_spectator
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 0
NEI4 $500
LABELV $501
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 4
GEI4 $496
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $496
LABELV $500
line 1128
;1128:		(g_gamemode.integer < 4 && level.clients[ i ].sess.sessionTeam == TEAM_SPECTATOR) ) {
line 1132
;1129:/*freeze
;1130:	if ( level.clients[ i ].sess.sessionTeam == TEAM_SPECTATOR ) {
;1131:freeze*/
;1132:		return;
ADDRGP4 $480
JUMPV
LABELV $496
line 1136
;1133:	}
;1134:
;1135:	// if they are playing a tournement game, count as a loss
;1136:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $502
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 0
NEI4 $502
line 1137
;1137:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 1138
;1138:		ent->client->sess.losses++;
ADDRLP4 1040
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10208
ADDP4
ASGNP4
ADDRLP4 1040
INDIRP4
ADDRLP4 1040
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1139
;1139:	}
LABELV $502
line 1142
;1140:
;1141:	// first set them to spectator
;1142:	if ( ent->client->sess.sessionTeam != TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
EQI4 $505
line 1143
;1143:		SetTeam( ent, "spectator", qfalse );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $343
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 SetTeam
CALLV
pop
line 1144
;1144:	}
LABELV $505
line 1146
;1145:
;1146:	ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
CNSTI4 2
ASGNI4
line 1147
;1147:	ent->client->sess.spectatorClient = i;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10200
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 1148
;1148:}
LABELV $480
endproc Cmd_Follow_f 1044 12
export Cmd_FollowCycle_f
proc Cmd_FollowCycle_f 20 12
line 1155
;1149:
;1150:/*
;1151:=================
;1152:Cmd_FollowCycle_f
;1153:=================
;1154:*/
;1155:void Cmd_FollowCycle_f( gentity_t *ent, int dir ) {
line 1160
;1156:	int		clientnum;
;1157:	int		original;
;1158:
;1159://freeze
;1160:	if ( g_gamemode.integer > 3 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $508
line 1161
;1161:		if ( ent->freezeState && !is_spectator( ent->client ) ) return;
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 888
ADDP4
INDIRI4
CNSTI4 0
EQI4 $511
ADDRLP4 8
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 is_spectator
CALLI4
ASGNI4
ADDRLP4 12
INDIRI4
CNSTI4 0
NEI4 $511
ADDRGP4 $507
JUMPV
LABELV $511
line 1162
;1162:		if ( Set_Client( ent ) ) return;
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 16
ADDRGP4 Set_Client
CALLI4
ASGNI4
ADDRLP4 16
INDIRI4
CNSTI4 0
EQI4 $513
ADDRGP4 $507
JUMPV
LABELV $513
line 1163
;1163:	}
LABELV $508
line 1166
;1164://freeze
;1165:	// if they are playing a tournement game, count as a loss
;1166:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $515
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 0
NEI4 $515
line 1167
;1167:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 1168
;1168:		ent->client->sess.losses++;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10208
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1169
;1169:	}
LABELV $515
line 1171
;1170:	// first set them to spectator
;1171:	if ( ent->client->sess.spectatorState == SPECTATOR_NOT ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
INDIRI4
CNSTI4 0
NEI4 $518
line 1172
;1172:		SetTeam( ent, "spectator", qfalse );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $343
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 SetTeam
CALLV
pop
line 1173
;1173:	}
LABELV $518
line 1175
;1174:
;1175:	if ( dir != 1 && dir != -1 ) {
ADDRLP4 8
ADDRFP4 4
INDIRI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $520
ADDRLP4 8
INDIRI4
CNSTI4 -1
EQI4 $520
line 1176
;1176:		G_Error( "Cmd_FollowCycle_f: bad dir %i", dir );
ADDRGP4 $522
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Error
CALLV
pop
line 1177
;1177:	}
LABELV $520
line 1179
;1178:
;1179:	clientnum = ent->client->sess.spectatorClient;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10200
ADDP4
INDIRI4
ASGNI4
line 1180
;1180:	original = clientnum;
ADDRLP4 4
ADDRLP4 0
INDIRI4
ASGNI4
LABELV $523
line 1181
;1181:	do {
line 1182
;1182:		clientnum += dir;
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRFP4 4
INDIRI4
ADDI4
ASGNI4
line 1183
;1183:		if ( clientnum >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $526
line 1184
;1184:			clientnum = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 1185
;1185:		}
LABELV $526
line 1186
;1186:		if ( clientnum < 0 ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
GEI4 $529
line 1187
;1187:			clientnum = level.maxclients - 1;
ADDRLP4 0
ADDRGP4 level+28
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 1188
;1188:		}
LABELV $529
line 1191
;1189:
;1190:		// can only follow connected clients
;1191:		if ( level.clients[ clientnum ].pers.connected != CON_CONNECTED ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $532
line 1192
;1192:			continue;
ADDRGP4 $524
JUMPV
LABELV $532
line 1197
;1193:		}
;1194:
;1195:		// can't follow another spectator
;1196://freeze
;1197:		if ( g_gamemode.integer > 3 ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $534
line 1198
;1198:		if ( &level.clients[ clientnum ] == ent->client ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CVPU4 4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
NEU4 $537
line 1199
;1199:			if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
INDIRI4
CNSTI4 2
NEI4 $539
line 1200
;1200:				StopFollowing( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 1201
;1201:				ent->client->ps.pm_flags |= PMF_TIME_KNOCKBACK;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 64
BORI4
ASGNI4
line 1202
;1202:				ent->client->ps.pm_time = 100;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 16
ADDP4
CNSTI4 100
ASGNI4
line 1203
;1203:				return;
ADDRGP4 $507
JUMPV
LABELV $539
line 1205
;1204:			}
;1205:		}
LABELV $537
line 1206
;1206:		if ( g_entities[ clientnum ].freezeState ) continue;
CNSTI4 896
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+888
ADDP4
INDIRI4
CNSTI4 0
EQI4 $535
ADDRGP4 $524
JUMPV
line 1207
;1207:		} else {
LABELV $534
line 1208
;1208:		if ( ent->client->sess.sessionTeam != TEAM_SPECTATOR && level.clients[ clientnum ].sess.sessionTeam != ent->client->sess.sessionTeam ) continue;
ADDRLP4 12
CNSTI4 10188
ASGNI4
ADDRLP4 16
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ADDRLP4 12
INDIRI4
ADDP4
INDIRI4
ASGNI4
ADDRLP4 16
INDIRI4
CNSTI4 3
EQI4 $544
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ADDRLP4 12
INDIRI4
ADDP4
INDIRI4
ADDRLP4 16
INDIRI4
EQI4 $544
ADDRGP4 $524
JUMPV
LABELV $544
line 1209
;1209:		}
LABELV $535
line 1210
;1210:		if ( (g_gamemode.integer > 3 && is_spectator( &level.clients[ clientnum ] )) || 
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
LEI4 $551
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ARGP4
ADDRLP4 12
ADDRGP4 is_spectator
CALLI4
ASGNI4
ADDRLP4 12
INDIRI4
CNSTI4 0
NEI4 $550
LABELV $551
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 4
GEI4 $546
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $546
LABELV $550
line 1211
;1211:			(g_gamemode.integer < 4 && level.clients[ clientnum ].sess.sessionTeam == TEAM_SPECTATOR) ) {
line 1215
;1212:/*freeze
;1213:		if ( level.clients[ clientnum ].sess.sessionTeam == TEAM_SPECTATOR ) {
;1214:freeze*/
;1215:			continue;
ADDRGP4 $524
JUMPV
LABELV $546
line 1219
;1216:		}
;1217:
;1218:		// this is good, we can use it
;1219:		ent->client->sess.spectatorClient = clientnum;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10200
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 1220
;1220:		ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10196
ADDP4
CNSTI4 2
ASGNI4
line 1221
;1221:		return;
ADDRGP4 $507
JUMPV
LABELV $524
line 1222
;1222:	} while ( clientnum != original );
ADDRLP4 0
INDIRI4
ADDRLP4 4
INDIRI4
NEI4 $523
line 1225
;1223:
;1224:	// leave it where it was
;1225:}
LABELV $507
endproc Cmd_FollowCycle_f 20 12
proc G_SayTo 48 24
line 1234
;1226:
;1227:
;1228:/*
;1229:==================
;1230:G_Say
;1231:==================
;1232:*/
;1233:
;1234:static void G_SayTo( gentity_t *ent, gentity_t *other, int mode, int color, const char *name, const char *message ) {
line 1235
;1235:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $553
line 1236
;1236:		return;
ADDRGP4 $552
JUMPV
LABELV $553
line 1238
;1237:	}
;1238:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $555
line 1239
;1239:		return;
ADDRGP4 $552
JUMPV
LABELV $555
line 1241
;1240:	}
;1241:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $557
line 1242
;1242:		return;
ADDRGP4 $552
JUMPV
LABELV $557
line 1244
;1243:	}
;1244:	if ( other->client->pers.connected != CON_CONNECTED ) {
ADDRFP4 4
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $559
line 1245
;1245:		return;
ADDRGP4 $552
JUMPV
LABELV $559
line 1247
;1246:	}
;1247:	if ( mode == SAY_TEAM  && other->client->sess.sessionTeam != ent->client->sess.sessionTeam ) { 
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $561
ADDRLP4 0
CNSTI4 516
ASGNI4
ADDRLP4 4
CNSTI4 10188
ASGNI4
ADDRFP4 4
INDIRP4
ADDRLP4 0
INDIRI4
ADDP4
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
ADDRLP4 0
INDIRI4
ADDP4
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRI4
EQI4 $561
line 1249
;1248:	// Spectators can't see say_team chat when used by players in tournament/free-for-all
;1249:		return;
ADDRGP4 $552
JUMPV
LABELV $561
line 1253
;1250:	}
;1251:
;1252:	// no chatting to players in tournements
;1253:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 g_gametype+12
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $563
ADDRLP4 12
CNSTI4 516
ASGNI4
ADDRLP4 16
CNSTI4 10188
ASGNI4
ADDRLP4 20
CNSTI4 0
ASGNI4
ADDRFP4 4
INDIRP4
ADDRLP4 12
INDIRI4
ADDP4
INDIRP4
ADDRLP4 16
INDIRI4
ADDP4
INDIRI4
ADDRLP4 20
INDIRI4
NEI4 $563
ADDRFP4 0
INDIRP4
ADDRLP4 12
INDIRI4
ADDP4
INDIRP4
ADDRLP4 16
INDIRI4
ADDP4
INDIRI4
ADDRLP4 20
INDIRI4
EQI4 $563
ADDRGP4 g_muteTourneyspecs+12
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $563
line 1255
;1254:		&& other->client->sess.sessionTeam == TEAM_FREE
;1255:		&& ent->client->sess.sessionTeam != TEAM_FREE && g_muteTourneyspecs.integer == 1 ) {
line 1256
;1256:		return;
ADDRGP4 $552
JUMPV
LABELV $563
line 1259
;1257:	}
;1258:		//Mute spectators		
;1259:	if ((g_gametype.integer != GT_TOURNAMENT && g_muteSpecs.integer == 1)
ADDRLP4 24
CNSTI4 1
ASGNI4
ADDRGP4 g_gametype+12
INDIRI4
ADDRLP4 24
INDIRI4
EQI4 $567
ADDRGP4 g_muteSpecs+12
INDIRI4
ADDRLP4 24
INDIRI4
NEI4 $567
ADDRLP4 28
CNSTI4 516
ASGNI4
ADDRLP4 32
CNSTI4 10188
ASGNI4
ADDRLP4 36
CNSTI4 3
ASGNI4
ADDRFP4 4
INDIRP4
ADDRLP4 28
INDIRI4
ADDP4
INDIRP4
ADDRLP4 32
INDIRI4
ADDP4
INDIRI4
ADDRLP4 36
INDIRI4
EQI4 $567
ADDRFP4 0
INDIRP4
ADDRLP4 28
INDIRI4
ADDP4
INDIRP4
ADDRLP4 32
INDIRI4
ADDP4
INDIRI4
ADDRLP4 36
INDIRI4
NEI4 $567
line 1261
;1260:		&& other->client->sess.sessionTeam != TEAM_SPECTATOR
;1261:		&& ent->client->sess.sessionTeam == TEAM_SPECTATOR )	{ 
line 1262
;1262:		return; 
ADDRGP4 $552
JUMPV
LABELV $567
line 1265
;1263:	}
;1264:
;1265:	trap_SendServerCommand( other-g_entities, va("%s \"%s%c%c%s\"", 
ADDRGP4 $571
ARGP4
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $575
ADDRLP4 40
ADDRGP4 $572
ASGNP4
ADDRGP4 $576
JUMPV
LABELV $575
ADDRLP4 40
ADDRGP4 $573
ASGNP4
LABELV $576
ADDRLP4 40
INDIRP4
ARGP4
ADDRFP4 16
INDIRP4
ARGP4
CNSTI4 94
ARGI4
ADDRFP4 12
INDIRI4
ARGI4
ADDRFP4 20
INDIRP4
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1268
;1266:		mode == SAY_TEAM ? "tchat" : "chat",
;1267:		name, Q_COLOR_ESCAPE, color, message));
;1268:}
LABELV $552
endproc G_SayTo 48 24
export G_Say
proc G_Say 452 28
line 1272
;1269:
;1270:#define EC		"\x19"
;1271:
;1272:void G_Say( gentity_t *ent, gentity_t *target, int mode, const char *chatText ) {
line 1287
;1273:	int			j;
;1274:	gentity_t	*other;
;1275:	int			color;
;1276:	char		name[64];
;1277:	// don't let text be too long for malicious reasons
;1278:	char		text[MAX_SAY_TEXT];
;1279:	char		location[64];
;1280:
;1281:	/*if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
;1282:		mode = SAY_ALL;
;1283:	}
;1284:	No real need to do this anymore.
;1285:	*/
;1286:
;1287:	switch ( mode ) {
ADDRLP4 396
ADDRFP4 8
INDIRI4
ASGNI4
ADDRLP4 396
INDIRI4
CNSTI4 0
EQI4 $580
ADDRLP4 396
INDIRI4
CNSTI4 1
EQI4 $583
ADDRLP4 396
INDIRI4
CNSTI4 2
EQI4 $589
ADDRGP4 $578
JUMPV
LABELV $578
LABELV $580
line 1290
;1288:	default:
;1289:	case SAY_ALL:
;1290:		G_LogPrintf( "say: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $581
ARGP4
ADDRLP4 400
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 400
INDIRI4
ADDP4
INDIRP4
ADDRLP4 400
INDIRI4
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1291
;1291:		Com_sprintf (name, sizeof(name), "%s%c%c"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 264
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $582
ARGP4
ADDRLP4 404
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 404
INDIRI4
ADDP4
INDIRP4
ADDRLP4 404
INDIRI4
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1292
;1292:		color = COLOR_GREEN;
ADDRLP4 328
CNSTI4 50
ASGNI4
line 1293
;1293:		break;
ADDRGP4 $579
JUMPV
LABELV $583
line 1295
;1294:	case SAY_TEAM:
;1295:		G_LogPrintf( "sayteam: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $584
ARGP4
ADDRLP4 408
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 408
INDIRI4
ADDP4
INDIRP4
ADDRLP4 408
INDIRI4
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1296
;1296:		if (Team_GetLocationMsg(ent, location, sizeof(location)))
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 332
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 412
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 412
INDIRI4
CNSTI4 0
EQI4 $585
line 1297
;1297:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC") (%s)"EC": ", 
ADDRLP4 264
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $587
ARGP4
ADDRLP4 416
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 416
INDIRI4
ADDP4
INDIRP4
ADDRLP4 416
INDIRI4
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 332
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $586
JUMPV
LABELV $585
line 1300
;1298:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location);
;1299:		else
;1300:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC")"EC": ", 
ADDRLP4 264
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $588
ARGP4
ADDRLP4 420
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 420
INDIRI4
ADDP4
INDIRP4
ADDRLP4 420
INDIRI4
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $586
line 1302
;1301:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
;1302:		color = COLOR_CYAN;
ADDRLP4 328
CNSTI4 53
ASGNI4
line 1303
;1303:		break;
ADDRGP4 $579
JUMPV
LABELV $589
line 1305
;1304:	case SAY_TELL:
;1305:		if (target && g_gametype.integer >= GT_TEAM &&
ADDRLP4 424
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 424
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $590
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $590
ADDRLP4 428
CNSTI4 516
ASGNI4
ADDRLP4 432
CNSTI4 10188
ASGNI4
ADDRLP4 436
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 424
INDIRP4
ADDRLP4 428
INDIRI4
ADDP4
INDIRP4
ADDRLP4 432
INDIRI4
ADDP4
INDIRI4
ADDRLP4 436
INDIRP4
ADDRLP4 428
INDIRI4
ADDP4
INDIRP4
ADDRLP4 432
INDIRI4
ADDP4
INDIRI4
NEI4 $590
ADDRLP4 436
INDIRP4
ARGP4
ADDRLP4 332
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 440
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 440
INDIRI4
CNSTI4 0
EQI4 $590
line 1308
;1306:			target->client->sess.sessionTeam == ent->client->sess.sessionTeam &&
;1307:			Team_GetLocationMsg(ent, location, sizeof(location)))
;1308:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"] (%s)"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location );
ADDRLP4 264
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $593
ARGP4
ADDRLP4 444
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 444
INDIRI4
ADDP4
INDIRP4
ADDRLP4 444
INDIRI4
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 332
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $591
JUMPV
LABELV $590
line 1310
;1309:		else
;1310:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"]"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 264
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $594
ARGP4
ADDRLP4 448
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 448
INDIRI4
ADDP4
INDIRP4
ADDRLP4 448
INDIRI4
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $591
line 1311
;1311:		color = COLOR_MAGENTA;
ADDRLP4 328
CNSTI4 54
ASGNI4
line 1312
;1312:		break;
LABELV $579
line 1315
;1313:	}
;1314:
;1315:	Q_strncpyz( text, chatText, sizeof(text) );
ADDRLP4 8
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
CNSTI4 256
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1317
;1316:
;1317:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $595
line 1318
;1318:		G_SayTo( ent, target, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 328
INDIRI4
ARGI4
ADDRLP4 264
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1319
;1319:		return;
ADDRGP4 $577
JUMPV
LABELV $595
line 1323
;1320:	}
;1321:
;1322:	// echo the text to the console
;1323:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $597
line 1324
;1324:		G_Printf( "%s%s\n", name, text);
ADDRGP4 $600
ARGP4
ADDRLP4 264
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1325
;1325:	}
LABELV $597
line 1328
;1326:
;1327:	// send it to all the apropriate clients
;1328:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $604
JUMPV
LABELV $601
line 1329
;1329:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 896
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1330
;1330:		G_SayTo( ent, other, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 328
INDIRI4
ARGI4
ADDRLP4 264
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1331
;1331:	}
LABELV $602
line 1328
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $604
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $601
line 1332
;1332:}
LABELV $577
endproc G_Say 452 28
proc Cmd_Say_f 12 16
line 1340
;1333:
;1334:
;1335:/*
;1336:==================
;1337:Cmd_Say_f
;1338:==================
;1339:*/
;1340:static void Cmd_Say_f( gentity_t *ent, int mode, qboolean arg0 ) {
line 1343
;1341:	char		*p;
;1342:
;1343:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $607
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $607
line 1344
;1344:		return;
ADDRGP4 $606
JUMPV
LABELV $607
line 1347
;1345:	}
;1346:
;1347:	if ( ent->client->mutestatus && (mode != SAY_TEAM && g_gametype.integer >= GT_TEAM) ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10816
ADDP4
INDIRI4
CNSTI4 0
EQI4 $609
ADDRFP4 4
INDIRI4
CNSTI4 1
EQI4 $609
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $609
line 1348
;1348:		trap_SendServerCommand( ent-g_entities, "print \"^1You have been muted!\n" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $612
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1349
;1349:		return;
ADDRGP4 $606
JUMPV
LABELV $609
line 1352
;1350:	}
;1351:
;1352:	if (arg0) {
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $613
line 1353
;1353:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1354
;1354:	} else {
ADDRGP4 $614
JUMPV
LABELV $613
line 1355
;1355:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1356
;1356:	}
LABELV $614
line 1358
;1357:
;1358:	G_Say( ent, NULL, mode, p );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1359
;1359:}
LABELV $606
endproc Cmd_Say_f 12 16
proc Cmd_Tell_f 1072 16
line 1366
;1360:
;1361:/*
;1362:==================
;1363:Cmd_Tell_f
;1364:==================
;1365:*/
;1366:static void Cmd_Tell_f( gentity_t *ent ) {
line 1372
;1367:	int			targetNum;
;1368:	gentity_t	*target;
;1369:	char		*p;
;1370:	char		arg[MAX_TOKEN_CHARS];
;1371:
;1372:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $616
line 1373
;1373:		return;
ADDRGP4 $615
JUMPV
LABELV $616
line 1376
;1374:	}
;1375:
;1376:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1377
;1377:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 1040
INDIRI4
ASGNI4
line 1378
;1378:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $621
ADDRLP4 4
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $618
LABELV $621
line 1379
;1379:		return;
ADDRGP4 $615
JUMPV
LABELV $618
line 1382
;1380:	}
;1381:
;1382:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 896
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1383
;1383:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $625
ADDRLP4 0
INDIRP4
CNSTI4 520
ADDP4
INDIRI4
CNSTI4 0
EQI4 $625
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $622
LABELV $625
line 1384
;1384:		return;
ADDRGP4 $615
JUMPV
LABELV $622
line 1387
;1385:	}
;1386:
;1387:	p = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 1056
INDIRP4
ASGNP4
line 1389
;1388:
;1389:	G_LogPrintf( "tell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, p );
ADDRGP4 $626
ARGP4
ADDRLP4 1060
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1390
;1390:	G_Say( ent, target, SAY_TELL, p );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1393
;1391:	// don't tell to the player self if it was already directed to this player
;1392:	// also don't send the chat back to a bot
;1393:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1064
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1064
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $627
ADDRLP4 1064
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $627
line 1394
;1394:		G_Say( ent, ent, SAY_TELL, p );
ADDRLP4 1068
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
ARGP4
ADDRLP4 1068
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1395
;1395:	}
LABELV $627
line 1396
;1396:}
LABELV $615
endproc Cmd_Tell_f 1072 16
proc G_VoiceTo 16 24
line 1399
;1397:
;1398:
;1399:static void G_VoiceTo( gentity_t *ent, gentity_t *other, int mode, const char *id, qboolean voiceonly ) {
line 1403
;1400:	int color;
;1401:	char *cmd;
;1402:
;1403:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $630
line 1404
;1404:		return;
ADDRGP4 $629
JUMPV
LABELV $630
line 1406
;1405:	}
;1406:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $632
line 1407
;1407:		return;
ADDRGP4 $629
JUMPV
LABELV $632
line 1409
;1408:	}
;1409:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $634
line 1410
;1410:		return;
ADDRGP4 $629
JUMPV
LABELV $634
line 1412
;1411:	}
;1412:	if ( mode == SAY_TEAM && !OnSameTeam(ent, other) ) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $636
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $636
line 1413
;1413:		return;
ADDRGP4 $629
JUMPV
LABELV $636
line 1416
;1414:	}
;1415:	// no chatting to players in tournements
;1416:	if ( (g_gametype.integer == GT_TOURNAMENT )) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $638
line 1417
;1417:		return;
ADDRGP4 $629
JUMPV
LABELV $638
line 1420
;1418:	}
;1419:
;1420:	if (mode == SAY_TEAM) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $641
line 1421
;1421:		color = COLOR_CYAN;
ADDRLP4 0
CNSTI4 53
ASGNI4
line 1422
;1422:		cmd = "vtchat";
ADDRLP4 4
ADDRGP4 $643
ASGNP4
line 1423
;1423:	}
ADDRGP4 $642
JUMPV
LABELV $641
line 1424
;1424:	else if (mode == SAY_TELL) {
ADDRFP4 8
INDIRI4
CNSTI4 2
NEI4 $644
line 1425
;1425:		color = COLOR_MAGENTA;
ADDRLP4 0
CNSTI4 54
ASGNI4
line 1426
;1426:		cmd = "vtell";
ADDRLP4 4
ADDRGP4 $646
ASGNP4
line 1427
;1427:	}
ADDRGP4 $645
JUMPV
LABELV $644
line 1428
;1428:	else {
line 1429
;1429:		color = COLOR_GREEN;
ADDRLP4 0
CNSTI4 50
ASGNI4
line 1430
;1430:		cmd = "vchat";
ADDRLP4 4
ADDRGP4 $647
ASGNP4
line 1431
;1431:	}
LABELV $645
LABELV $642
line 1433
;1432:
;1433:	trap_SendServerCommand( other-g_entities, va("%s %d %d %d %s", cmd, voiceonly, ent->s.number, color, id));
ADDRGP4 $648
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRFP4 0
INDIRP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1434
;1434:}
LABELV $629
endproc G_VoiceTo 16 24
export G_Voice
proc G_Voice 12 20
line 1436
;1435:
;1436:void G_Voice( gentity_t *ent, gentity_t *target, int mode, const char *id, qboolean voiceonly ) {
line 1440
;1437:	int			j;
;1438:	gentity_t	*other;
;1439:
;1440:	if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
GEI4 $650
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $650
line 1441
;1441:		mode = SAY_ALL;
ADDRFP4 8
CNSTI4 0
ASGNI4
line 1442
;1442:	}
LABELV $650
line 1444
;1443:
;1444:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $653
line 1445
;1445:		G_VoiceTo( ent, target, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1446
;1446:		return;
ADDRGP4 $649
JUMPV
LABELV $653
line 1450
;1447:	}
;1448:
;1449:	// echo the text to the console
;1450:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $655
line 1451
;1451:		G_Printf( "voice: %s %s\n", ent->client->pers.netname, id);
ADDRGP4 $658
ARGP4
ADDRLP4 8
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1452
;1452:	}
LABELV $655
line 1455
;1453:
;1454:	// send it to all the apropriate clients
;1455:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $662
JUMPV
LABELV $659
line 1456
;1456:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 896
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1457
;1457:		G_VoiceTo( ent, other, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1458
;1458:	}
LABELV $660
line 1455
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $662
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $659
line 1459
;1459:}
LABELV $649
endproc G_Voice 12 20
proc Cmd_Voice_f 12 20
line 1466
;1460:
;1461:/*
;1462:==================
;1463:Cmd_Voice_f
;1464:==================
;1465:*/
;1466:static void Cmd_Voice_f( gentity_t *ent, int mode, qboolean arg0, qboolean voiceonly ) {
line 1469
;1467:	char		*p;
;1468:
;1469:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $665
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $665
line 1470
;1470:		return;
ADDRGP4 $664
JUMPV
LABELV $665
line 1473
;1471:	}
;1472:
;1473:	if (arg0)
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $667
line 1474
;1474:	{
line 1475
;1475:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1476
;1476:	}
ADDRGP4 $668
JUMPV
LABELV $667
line 1478
;1477:	else
;1478:	{
line 1479
;1479:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1480
;1480:	}
LABELV $668
line 1482
;1481:
;1482:	G_Voice( ent, NULL, mode, p, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 12
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1483
;1483:}
LABELV $664
endproc Cmd_Voice_f 12 20
proc Cmd_VoiceTell_f 1072 20
line 1490
;1484:
;1485:/*
;1486:==================
;1487:Cmd_VoiceTell_f
;1488:==================
;1489:*/
;1490:static void Cmd_VoiceTell_f( gentity_t *ent, qboolean voiceonly ) {
line 1496
;1491:	int			targetNum;
;1492:	gentity_t	*target;
;1493:	char		*id;
;1494:	char		arg[MAX_TOKEN_CHARS];
;1495:
;1496:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $670
line 1497
;1497:		return;
ADDRGP4 $669
JUMPV
LABELV $670
line 1500
;1498:	}
;1499:
;1500:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1501
;1501:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 1040
INDIRI4
ASGNI4
line 1502
;1502:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $675
ADDRLP4 4
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $672
LABELV $675
line 1503
;1503:		return;
ADDRGP4 $669
JUMPV
LABELV $672
line 1506
;1504:	}
;1505:
;1506:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 896
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1507
;1507:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $679
ADDRLP4 0
INDIRP4
CNSTI4 520
ADDP4
INDIRI4
CNSTI4 0
EQI4 $679
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $676
LABELV $679
line 1508
;1508:		return;
ADDRGP4 $669
JUMPV
LABELV $676
line 1511
;1509:	}
;1510:
;1511:	id = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 1056
INDIRP4
ASGNP4
line 1513
;1512:
;1513:	G_LogPrintf( "vtell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, id );
ADDRGP4 $680
ARGP4
ADDRLP4 1060
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1514
;1514:	G_Voice( ent, target, SAY_TELL, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1517
;1515:	// don't tell to the player self if it was already directed to this player
;1516:	// also don't send the chat back to a bot
;1517:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1064
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1064
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $681
ADDRLP4 1064
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $681
line 1518
;1518:		G_Voice( ent, ent, SAY_TELL, id, voiceonly );
ADDRLP4 1068
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
ARGP4
ADDRLP4 1068
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1519
;1519:	}
LABELV $681
line 1520
;1520:}
LABELV $669
endproc Cmd_VoiceTell_f 1072 20
proc Cmd_VoiceTaunt_f 56 20
line 1528
;1521:
;1522:
;1523:/*
;1524:==================
;1525:Cmd_VoiceTaunt_f
;1526:==================
;1527:*/
;1528:static void Cmd_VoiceTaunt_f( gentity_t *ent ) {
line 1532
;1529:	gentity_t *who;
;1530:	int i;
;1531:
;1532:	if (!ent->client) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $684
line 1533
;1533:		return;
ADDRGP4 $683
JUMPV
LABELV $684
line 1537
;1534:	}
;1535:
;1536:	// insult someone who just killed you
;1537:	if (ent->enemy && ent->enemy->client && ent->enemy->client->lastkilled_client == ent->s.number) {
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
ADDRLP4 8
INDIRP4
CNSTI4 768
ADDP4
INDIRP4
ASGNP4
ADDRLP4 16
CNSTU4 0
ASGNU4
ADDRLP4 12
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $686
ADDRLP4 20
ADDRLP4 12
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $686
ADDRLP4 20
INDIRP4
CNSTI4 10320
ADDP4
INDIRI4
ADDRLP4 8
INDIRP4
INDIRI4
NEI4 $686
line 1539
;1538:		// i am a dead corpse
;1539:		if (!(ent->enemy->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 768
ADDP4
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $688
line 1540
;1540:			G_Voice( ent, ent->enemy, SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
CNSTI4 768
ADDP4
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $690
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1541
;1541:		}
LABELV $688
line 1542
;1542:		if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $691
line 1543
;1543:			G_Voice( ent, ent,        SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $690
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1544
;1544:		}
LABELV $691
line 1545
;1545:		ent->enemy = NULL;
ADDRFP4 0
INDIRP4
CNSTI4 768
ADDP4
CNSTP4 0
ASGNP4
line 1546
;1546:		return;
ADDRGP4 $683
JUMPV
LABELV $686
line 1549
;1547:	}
;1548:	// insult someone you just killed
;1549:	if (ent->client->lastkilled_client >= 0 && ent->client->lastkilled_client != ent->s.number) {
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 28
ADDRLP4 24
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10320
ADDP4
INDIRI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
LTI4 $693
ADDRLP4 28
INDIRI4
ADDRLP4 24
INDIRP4
INDIRI4
EQI4 $693
line 1550
;1550:		who = g_entities + ent->client->lastkilled_client;
ADDRLP4 0
CNSTI4 896
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10320
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1551
;1551:		if (who->client) {
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $695
line 1553
;1552:			// who is the person I just killed
;1553:			if (who->client->lasthurt_mod == MOD_GAUNTLET) {
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10328
ADDP4
INDIRI4
CNSTI4 2
NEI4 $697
line 1554
;1554:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $699
line 1555
;1555:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );	// and I killed them with a gauntlet
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $701
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1556
;1556:				}
LABELV $699
line 1557
;1557:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $698
line 1558
;1558:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $701
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1559
;1559:				}
line 1560
;1560:			} else {
ADDRGP4 $698
JUMPV
LABELV $697
line 1561
;1561:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $704
line 1562
;1562:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );	// and I killed them with something else
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $706
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1563
;1563:				}
LABELV $704
line 1564
;1564:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $707
line 1565
;1565:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $706
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1566
;1566:				}
LABELV $707
line 1567
;1567:			}
LABELV $698
line 1568
;1568:			ent->client->lastkilled_client = -1;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10320
ADDP4
CNSTI4 -1
ASGNI4
line 1569
;1569:			return;
ADDRGP4 $683
JUMPV
LABELV $695
line 1571
;1570:		}
;1571:	}
LABELV $693
line 1573
;1572:
;1573:	if (g_gametype.integer >= GT_TEAM) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $709
line 1575
;1574:		// praise a team mate who just got a reward
;1575:		for(i = 0; i < MAX_CLIENTS; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $712
line 1576
;1576:			who = g_entities + i;
ADDRLP4 0
CNSTI4 896
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1577
;1577:			if (who->client && who != ent && who->client->sess.sessionTeam == ent->client->sess.sessionTeam) {
ADDRLP4 36
CNSTI4 516
ASGNI4
ADDRLP4 40
ADDRLP4 0
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $716
ADDRLP4 44
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 44
INDIRP4
CVPU4 4
EQU4 $716
ADDRLP4 48
CNSTI4 10188
ASGNI4
ADDRLP4 40
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
ADDRLP4 44
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
NEI4 $716
line 1578
;1578:				if (who->client->rewardTime > level.time) {
ADDRLP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10344
ADDP4
INDIRI4
ADDRGP4 level+40
INDIRI4
LEI4 $718
line 1579
;1579:					if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $721
line 1580
;1580:						G_Voice( ent, who, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $723
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1581
;1581:					}
LABELV $721
line 1582
;1582:					if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $683
line 1583
;1583:						G_Voice( ent, ent, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRLP4 52
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 52
INDIRP4
ARGP4
ADDRLP4 52
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $723
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1584
;1584:					}
line 1585
;1585:					return;
ADDRGP4 $683
JUMPV
LABELV $718
line 1587
;1586:				}
;1587:			}
LABELV $716
line 1588
;1588:		}
LABELV $713
line 1575
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 64
LTI4 $712
line 1589
;1589:	}
LABELV $709
line 1592
;1590:
;1591:	// just say something
;1592:	G_Voice( ent, NULL, SAY_ALL, VOICECHAT_TAUNT, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 $726
ARGP4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1593
;1593:}
LABELV $683
endproc Cmd_VoiceTaunt_f 56 20
data
align 4
LABELV gc_orders
address $727
address $728
address $729
address $730
address $731
address $732
address $733
export Cmd_GameCommand_f
code
proc Cmd_GameCommand_f 1060 16
line 1607
;1594:
;1595:
;1596:
;1597:static char	*gc_orders[] = {
;1598:	"hold your position",
;1599:	"hold this position",
;1600:	"come here",
;1601:	"cover me",
;1602:	"guard location",
;1603:	"search and destroy",
;1604:	"report"
;1605:};
;1606:
;1607:void Cmd_GameCommand_f( gentity_t *ent ) {
line 1612
;1608:	int		player;
;1609:	int		order;
;1610:	char	str[MAX_TOKEN_CHARS];
;1611:
;1612:	trap_Argv( 1, str, sizeof( str ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1613
;1613:	player = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1032
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1028
ADDRLP4 1032
INDIRI4
ASGNI4
line 1614
;1614:	trap_Argv( 2, str, sizeof( str ) );
CNSTI4 2
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1615
;1615:	order = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1036
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1024
ADDRLP4 1036
INDIRI4
ASGNI4
line 1617
;1616:
;1617:	if ( player < 0 || player >= MAX_CLIENTS ) {
ADDRLP4 1028
INDIRI4
CNSTI4 0
LTI4 $737
ADDRLP4 1028
INDIRI4
CNSTI4 64
LTI4 $735
LABELV $737
line 1618
;1618:		return;
ADDRGP4 $734
JUMPV
LABELV $735
line 1620
;1619:	}
;1620:	if ( order < 0 || order > sizeof(gc_orders)/sizeof(char *) ) {
ADDRLP4 1024
INDIRI4
CNSTI4 0
LTI4 $740
ADDRLP4 1024
INDIRI4
CVIU4 4
CNSTU4 7
LEU4 $738
LABELV $740
line 1621
;1621:		return;
ADDRGP4 $734
JUMPV
LABELV $738
line 1623
;1622:	}
;1623:	G_Say( ent, &g_entities[player], SAY_TELL, gc_orders[order] );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 896
ADDRLP4 1028
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
ADDRLP4 1048
CNSTI4 2
ASGNI4
ADDRLP4 1048
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1048
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1624
;1624:	G_Say( ent, ent, SAY_TELL, gc_orders[order] );
ADDRLP4 1052
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
CNSTI4 2
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1056
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1625
;1625:}
LABELV $734
endproc Cmd_GameCommand_f 1060 16
export Cmd_Where_f
proc Cmd_Where_f 8 8
line 1632
;1626:
;1627:/*
;1628:==================
;1629:Cmd_Where_f
;1630:==================
;1631:*/
;1632:void Cmd_Where_f( gentity_t *ent ) {
line 1633
;1633:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", vtos( ent->s.origin ) ) );
ADDRFP4 0
INDIRP4
CNSTI4 92
ADDP4
ARGP4
ADDRLP4 0
ADDRGP4 vtos
CALLP4
ASGNP4
ADDRGP4 $742
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1634
;1634:}
LABELV $741
endproc Cmd_Where_f 8 8
data
align 4
LABELV gameNames
address $743
address $744
address $745
address $746
address $747
address $748
address $749
address $750
export Cmd_Quickmodes_f
code
proc Cmd_Quickmodes_f 1304 12
line 1652
;1635:
;1636:static const char *gameNames[] = {
;1637:	"Free For All",
;1638:	"Tournament",
;1639:	"Single Player",
;1640:	"Team Deathmatch",
;1641:	"Capture the Flag",
;1642:	"One Flag CTF",
;1643:	"Overload",
;1644:	"Harvester"
;1645:};
;1646:
;1647:/*
;1648:==================
;1649:Cmd_Quickmodes_f
;1650:==================
;1651:*/
;1652:void Cmd_Quickmodes_f( gentity_t *ent) {
line 1655
;1653:	char	modeList[MAX_QUICKMODE_LIST_SIZE];
;1654:
;1655:	trap_Cvar_VariableStringBuffer( "__quickmodes", modeList, sizeof(modeList) );
ADDRGP4 $752
ARGP4
ADDRLP4 0
ARGP4
CNSTI4 1300
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1657
;1656:	//G_Printf("DBG: Quickmodes %s\n", modeList);
;1657:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", modeList) );
ADDRGP4 $742
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1300
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1300
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1658
;1658:}
LABELV $751
endproc Cmd_Quickmodes_f 1304 12
export Cmd_Teams_f
proc Cmd_Teams_f 32 12
line 1667
;1659:
;1660:/*
;1661:==================
;1662:Cmd_Teams_f
;1663:Primarily for debugging
;1664:lock/unlock teams
;1665:==================
;1666:*/
;1667:void Cmd_Teams_f(  gentity_t *ent ) {
line 1669
;1668:	//FIXME: Bandwidth consumption.
;1669:	trap_SendServerCommand( ent-g_entities, "print \""S_COLOR_YELLOW"Team  Count  Locked Status\n---------------------------\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $754
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1670
;1670:	if ( g_gametype.integer >= GT_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $755
line 1671
;1671:		trap_SendServerCommand( ent-g_entities, va("print \""S_COLOR_YELLOW"Red   %3i      %5s\n\"",TeamCount(-1, TEAM_RED), (level.team_Locked[TEAM_RED]?("Locked"):("Unlocked")) ) );
CNSTI4 -1
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 4
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRGP4 $758
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 level+10864+4
INDIRI4
CNSTI4 0
EQI4 $764
ADDRLP4 0
ADDRGP4 $761
ASGNP4
ADDRGP4 $765
JUMPV
LABELV $764
ADDRLP4 0
ADDRGP4 $762
ASGNP4
LABELV $765
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1672
;1672:		trap_SendServerCommand( ent-g_entities, va("print \""S_COLOR_YELLOW"Blue  %3i      %5s\n\"",TeamCount(-1, TEAM_BLUE), (level.team_Locked[TEAM_BLUE]?("Locked"):("Unlocked")) ) );
CNSTI4 -1
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 16
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRGP4 $766
ARGP4
ADDRLP4 16
INDIRI4
ARGI4
ADDRGP4 level+10864+8
INDIRI4
CNSTI4 0
EQI4 $770
ADDRLP4 12
ADDRGP4 $761
ASGNP4
ADDRGP4 $771
JUMPV
LABELV $770
ADDRLP4 12
ADDRGP4 $762
ASGNP4
LABELV $771
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 20
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 20
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1673
;1673:		trap_SendServerCommand( ent-g_entities, va("print \""S_COLOR_YELLOW"Spec  %3i\n\"",TeamCount(-1, TEAM_SPECTATOR) ) );
CNSTI4 -1
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 24
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRGP4 $772
ARGP4
ADDRLP4 24
INDIRI4
ARGI4
ADDRLP4 28
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 28
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1674
;1674:	} else {
ADDRGP4 $756
JUMPV
LABELV $755
line 1675
;1675:		trap_SendServerCommand( ent-g_entities, va("print \""S_COLOR_YELLOW"Free  %3i      %5s\n\"",TeamCount(-1, TEAM_FREE), (level.team_Locked[TEAM_FREE]?("Locked"):("Unlocked")) ) );
CNSTI4 -1
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 4
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRGP4 $773
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 level+10864
INDIRI4
CNSTI4 0
EQI4 $776
ADDRLP4 0
ADDRGP4 $761
ASGNP4
ADDRGP4 $777
JUMPV
LABELV $776
ADDRLP4 0
ADDRGP4 $762
ASGNP4
LABELV $777
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1676
;1676:		trap_SendServerCommand( ent-g_entities, va("print \""S_COLOR_YELLOW"Spec  %3i\n\"",TeamCount(-1, TEAM_SPECTATOR) ) );
CNSTI4 -1
ARGI4
CNSTI4 3
ARGI4
ADDRLP4 12
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRGP4 $772
ARGP4
ADDRLP4 12
INDIRI4
ARGI4
ADDRLP4 16
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1677
;1677:	}
LABELV $756
line 1678
;1678:}
LABELV $753
endproc Cmd_Teams_f 32 12
export CheckVote
proc CheckVote 24 8
line 1685
;1679:
;1680:/*
;1681:==================
;1682:CheckVote
;1683:==================
;1684:*/
;1685:void CheckVote( void ) {
line 1687
;1686:	// ATVI Q3 1.32 Patch #9, WNF
;1687:	if ( level.voteYes > level.numVotingClients/2 || ( level.match_called == 1 && level.numVotingClients == 2) ) {
ADDRLP4 0
CNSTI4 2
ASGNI4
ADDRGP4 level+2452
INDIRU1
CVUI4 1
ADDRGP4 level+2454
INDIRU1
CVUI4 1
ADDRLP4 0
INDIRI4
DIVI4
GTI4 $785
ADDRGP4 level+10828
INDIRI4
CNSTI4 1
NEI4 $779
ADDRGP4 level+2454
INDIRU1
CVUI4 1
ADDRLP4 0
INDIRI4
NEI4 $779
LABELV $785
line 1690
;1688:		gentity_t	*tempEnt;
;1689:
;1690:		tempEnt = G_TempEntity( NULL, EV_GLOBAL_SOUND );
CNSTP4 0
ARGP4
CNSTI4 46
ARGI4
ADDRLP4 8
ADDRGP4 G_TempEntity
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 8
INDIRP4
ASGNP4
line 1691
;1691:		tempEnt->s.eventParm = G_SoundIndex( "sound/world/klaxon2.wav" );
ADDRGP4 $786
ARGP4
ADDRLP4 12
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 184
ADDP4
ADDRLP4 12
INDIRI4
ASGNI4
line 1692
;1692:		tempEnt->r.svFlags |= SVF_BROADCAST;
ADDRLP4 16
ADDRLP4 4
INDIRP4
CNSTI4 424
ADDP4
ASGNP4
ADDRLP4 16
INDIRP4
ADDRLP4 16
INDIRP4
INDIRI4
CNSTI4 32
BORI4
ASGNI4
line 1694
;1693:		// execute the command, then remove the vote
;1694:		trap_SendServerCommand( -1, "print \"Vote passed.\n\"" );
CNSTI4 -1
ARGI4
ADDRGP4 $787
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1695
;1695:		level.voteYes = 128;
ADDRGP4 level+2452
CNSTU1 128
ASGNU1
line 1696
;1696:		if ( level.match_called == 1 ) {
ADDRGP4 level+10828
INDIRI4
CNSTI4 1
NEI4 $789
line 1697
;1697:			level.match_called = 0;
ADDRGP4 level+10828
CNSTI4 0
ASGNI4
line 1698
;1698:			if ( g_gametype.integer >= GT_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
LTI4 $793
line 1699
;1699:				level.match_team[level.voteTeam]++;
ADDRLP4 20
ADDRGP4 level+10840
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10812
ADDP4
ASGNP4
ADDRLP4 20
INDIRP4
ADDRLP4 20
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1700
;1700:				level.voteTeam = -1;
ADDRGP4 level+10840
CNSTI4 -1
ASGNI4
line 1701
;1701:			}
LABELV $793
line 1702
;1702:			if ( level.match_time == 0 ) {
ADDRGP4 level+10832
INDIRI4
CNSTI4 0
NEI4 $799
line 1703
;1703:				level.match_time = g_timeOutLength.integer;
ADDRGP4 level+10832
ADDRGP4 g_timeOutLength+12
INDIRI4
ASGNI4
line 1704
;1704:			}
LABELV $799
line 1705
;1705:			Cmd_Timeout_f(level.match_time);
ADDRGP4 level+10832
INDIRI4
ARGI4
ADDRGP4 Cmd_Timeout_f
CALLV
pop
line 1706
;1706:		} else if ( level.match_called == -1 ) {
ADDRGP4 $780
JUMPV
LABELV $789
ADDRGP4 level+10828
INDIRI4
CNSTI4 -1
NEI4 $805
line 1708
;1707:			//level.match_called = 0;
;1708:			if ( level.match_timeinGrace == 0 ) {
ADDRGP4 level+10836
INDIRI4
CNSTI4 0
NEI4 $808
line 1709
;1709:				level.match_timeinGrace = g_timeInGrace.integer;
ADDRGP4 level+10836
ADDRGP4 g_timeInGrace+12
INDIRI4
ASGNI4
line 1710
;1710:			}
LABELV $808
line 1711
;1711:			Cmd_Timein_f(level.match_timeinGrace);
ADDRGP4 level+10836
INDIRI4
ARGI4
ADDRGP4 Cmd_Timein_f
CALLV
pop
line 1712
;1712:		} else {
ADDRGP4 $780
JUMPV
LABELV $805
line 1713
;1713:			level.voteExecuteTime = level.time + 3000;
ADDRGP4 level+2448
ADDRGP4 level+40
INDIRI4
CNSTI4 3000
ADDI4
ASGNI4
line 1714
;1714:		}
line 1715
;1715:	} else if ( level.voteNo >= level.numVotingClients/2 ) {
ADDRGP4 $780
JUMPV
LABELV $779
ADDRGP4 level+2453
INDIRU1
CVUI4 1
ADDRGP4 level+2454
INDIRU1
CVUI4 1
CNSTI4 2
DIVI4
LTI4 $778
line 1717
;1716:		// same behavior as a timeout
;1717:		trap_SendServerCommand( -1, "print \"Vote failed.\n\"" );
CNSTI4 -1
ARGI4
ADDRGP4 $820
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1718
;1718:	} else {
line 1720
;1719:		// still waiting for a majority
;1720:		return;
LABELV $817
LABELV $780
line 1724
;1721:	}
;1722:	//level.voteTime = 0;
;1723:	//trap_SetConfigstring( CS_VOTE_TIME, "" );
;1724:	trap_SendServerCommand( -1, "vt -1\n" );
CNSTI4 -1
ARGI4
ADDRGP4 $821
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1725
;1725:}
LABELV $778
endproc CheckVote 24 8
export Cmd_CallVote_f
proc Cmd_CallVote_f 3524 24
line 1732
;1726:
;1727:/*
;1728:==================
;1729:Cmd_CallVote_f
;1730:==================
;1731:*/
;1732:void Cmd_CallVote_f( gentity_t *ent ) {
line 1738
;1733:	int		i;
;1734:	char	arg1[MAX_STRING_TOKENS];
;1735:	char	arg2[MAX_STRING_TOKENS];
;1736:	char	cvarName[128];
;1737:
;1738:	level.voteTeam = ent->client->sess.sessionTeam;
ADDRGP4 level+10840
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 1741
;1739:
;1740:
;1741:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $824
line 1742
;1742:		trap_SendServerCommand( ent-g_entities, "print \"Voting not allowed here.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $827
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1743
;1743:		return;
ADDRGP4 $822
JUMPV
LABELV $824
line 1746
;1744:	}
;1745:
;1746:	if ( level.voteTime ) {
ADDRGP4 level+2444
INDIRI4
CNSTI4 0
EQI4 $828
line 1747
;1747:		trap_SendServerCommand( ent-g_entities, "print \"A vote is already in progress.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $831
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1748
;1748:		return;
ADDRGP4 $822
JUMPV
LABELV $828
line 1751
;1749:	}
;1750:	
;1751:	if ( level.voteExecuteTime != 0 ) {
ADDRGP4 level+2448
INDIRI4
CNSTI4 0
EQI4 $832
line 1752
;1752:		trap_SendServerCommand( ent-g_entities, "print \"A vote is in the progress of executing.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $835
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1753
;1753:		return;
ADDRGP4 $822
JUMPV
LABELV $832
line 1755
;1754:	}
;1755:	if ( ent->client->pers.voteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 608
ADDP4
INDIRI4
CNSTI4 3
LTI4 $836
line 1756
;1756:		trap_SendServerCommand( ent-g_entities, "print \"You have called the maximum number of votes.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $838
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1757
;1757:		return;
ADDRGP4 $822
JUMPV
LABELV $836
line 1759
;1758:	}
;1759:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $839
line 1760
;1760:		trap_SendServerCommand( ent-g_entities, "print \"Not allowed to call a vote as spectator.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $841
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1761
;1761:		return;
ADDRGP4 $822
JUMPV
LABELV $839
line 1765
;1762:	}
;1763:
;1764:	// make sure it is a valid command to vote on
;1765:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1766
;1766:	trap_Argv( 2, arg2, sizeof( arg2 ) );
CNSTI4 2
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1768
;1767:
;1768:	Com_sprintf(cvarName, sizeof(cvarName), "disable_%s", arg1);
ADDRLP4 2052
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $842
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1769
;1769:	if( trap_Cvar_VariableIntegerValue(cvarName) ) {
ADDRLP4 2052
ARGP4
ADDRLP4 2180
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 2180
INDIRI4
CNSTI4 0
EQI4 $843
line 1770
;1770:		trap_SendServerCommand( ent-g_entities, va("print \"callvote for %s is disabled.\n\"",arg1) );
ADDRGP4 $845
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 2184
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2184
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1771
;1771:		return;
ADDRGP4 $822
JUMPV
LABELV $843
line 1775
;1772:	}
;1773:
;1774:
;1775:	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
ADDRLP4 0
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2184
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2184
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $848
ADDRLP4 1028
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2188
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2188
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $846
LABELV $848
line 1776
;1776:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $849
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1777
;1777:		return;
ADDRGP4 $822
JUMPV
LABELV $846
line 1780
;1778:	}
;1779:
;1780:	if ( level.intermissiontime && !( !Q_stricmp(arg1, "map") || !Q_stricmp(arg1, "map_restart") 
ADDRGP4 level+9160
INDIRI4
CNSTI4 0
EQI4 $850
ADDRLP4 0
ARGP4
ADDRGP4 $853
ARGP4
ADDRLP4 2192
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2192
INDIRI4
CNSTI4 0
EQI4 $850
ADDRLP4 0
ARGP4
ADDRGP4 $854
ARGP4
ADDRLP4 2196
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2196
INDIRI4
CNSTI4 0
EQI4 $850
ADDRLP4 0
ARGP4
ADDRGP4 $855
ARGP4
ADDRLP4 2200
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2200
INDIRI4
CNSTI4 0
EQI4 $850
ADDRLP4 0
ARGP4
ADDRGP4 $856
ARGP4
ADDRLP4 2204
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2204
INDIRI4
CNSTI4 0
EQI4 $850
line 1781
;1781:		|| !Q_stricmp(arg1, "nextmap") || !Q_stricmp(arg1, "previousmap") ) ) {
line 1783
;1782:			//If not an allowed intermission vote, ignore it during intermission.
;1783:			return;
ADDRGP4 $822
JUMPV
LABELV $850
line 1787
;1784:	}
;1785:
;1786:	if ( //if not equal to any of these
;1787:	   Q_stricmp( arg1, "map_restart" )					&& Q_stricmp( arg1, "previousmap" )		
ADDRLP4 0
ARGP4
ADDRGP4 $854
ARGP4
ADDRLP4 2208
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2208
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $856
ARGP4
ADDRLP4 2212
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2212
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $855
ARGP4
ADDRLP4 2216
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2216
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $853
ARGP4
ADDRLP4 2220
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2220
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $859
ARGP4
ADDRLP4 2224
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2224
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $860
ARGP4
ADDRLP4 2228
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2228
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $861
ARGP4
ADDRLP4 2232
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2232
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $862
ARGP4
ADDRLP4 2236
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2236
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $863
ARGP4
ADDRLP4 2240
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2240
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $864
ARGP4
ADDRLP4 2244
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2244
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $865
ARGP4
ADDRLP4 2248
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2248
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $866
ARGP4
ADDRLP4 2252
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2252
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $867
ARGP4
ADDRLP4 2256
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2256
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $868
ARGP4
ADDRLP4 2260
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2260
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $869
ARGP4
ADDRLP4 2264
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2264
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $870
ARGP4
ADDRLP4 2268
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2268
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $871
ARGP4
ADDRLP4 2272
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2272
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $872
ARGP4
ADDRLP4 2276
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2276
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $873
ARGP4
ADDRLP4 2280
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2280
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $874
ARGP4
ADDRLP4 2284
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2284
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $875
ARGP4
ADDRLP4 2288
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2288
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $876
ARGP4
ADDRLP4 2292
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2292
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $877
ARGP4
ADDRLP4 2296
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2296
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $878
ARGP4
ADDRLP4 2300
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2300
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $879
ARGP4
ADDRLP4 2304
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2304
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $880
ARGP4
ADDRLP4 2308
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2308
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $881
ARGP4
ADDRLP4 2312
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2312
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $882
ARGP4
ADDRLP4 2316
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2316
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $883
ARGP4
ADDRLP4 2320
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2320
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $884
ARGP4
ADDRLP4 2324
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2324
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $885
ARGP4
ADDRLP4 2328
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2328
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $886
ARGP4
ADDRLP4 2332
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2332
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $887
ARGP4
ADDRLP4 2336
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2336
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $888
ARGP4
ADDRLP4 2340
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2340
INDIRI4
CNSTI4 0
EQI4 $857
ADDRLP4 0
ARGP4
ADDRGP4 $889
ARGP4
ADDRLP4 2344
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2344
INDIRI4
CNSTI4 0
EQI4 $857
line 1805
;1788:	&& Q_stricmp( arg1, "nextmap" )						&& Q_stricmp( arg1, "map" )
;1789:	&& Q_stricmp( arg1, "g_gametype" )					&& Q_stricmp( arg1, "kick" )
;1790:	&& Q_stricmp( arg1, "clientkick" )					&& Q_stricmp( arg1, "g_warmup" )
;1791:	&& Q_stricmp( arg1, "timelimit" )					&& Q_stricmp( arg1, "fraglimit" )
;1792:	&& Q_stricmp( arg1, "g_muteSpecs" )					&& Q_stricmp( arg1, "g_muteTourneyspecs" )
;1793:	&& Q_stricmp( arg1, "weap_plasmagunCycle" )			&& Q_stricmp( arg1, "weap_railgunCycle" )
;1794:	&& Q_stricmp( arg1, "weap_rocketlauncherCycle" )	&& Q_stricmp( arg1, "weap_lightninggunCycle" )
;1795:	&& Q_stricmp( arg1, "weap_grenadelauncherCycle" )	&& Q_stricmp( arg1, "weap_shotgunCycle" )
;1796:	&& Q_stricmp( arg1, "weap_machinegunCycle" )		&& Q_stricmp( arg1, "weap_bfgCycle" )
;1797:	&& Q_stricmp( arg1, "g_DynamicRailgunCycle" )		&& Q_stricmp( arg1, "g_RailJumping" )
;1798:	&& Q_stricmp( arg1, "g_railgunKnockback" )			&& Q_stricmp( arg1, "g_StaticKnockback" )
;1799:	&& Q_stricmp( arg1, "g_returnFlag" )				&& Q_stricmp( arg1, "g_SelfDamage" )
;1800:	&& Q_stricmp( arg1, "g_FallingDamage" )				&& Q_stricmp( arg1, "timeout" )
;1801:	&& Q_stricmp( arg1, "timein" )						&& Q_stricmp( arg1, "g_gamemode" )
;1802:	&& Q_stricmp( arg1, "g_pro_mode" )					&& Q_stricmp( arg1, "g_IU_ctf_Sounds" )
;1803:	&& Q_stricmp( arg1, "g_teamKnockback" )				&& Q_stricmp( arg1, "mapnum" )
;1804:	&& Q_stricmp( arg1, "quickmode" )
;1805:	) {
line 1808
;1806:		char	string[MAX_STRING_TOKENS];
;1807:		//int		stringLen;
;1808:		int		totalStringLen = 0;
ADDRLP4 3372
CNSTI4 0
ASGNI4
line 1810
;1809:
;1810:		memset(cvarName, 0, sizeof(cvarName));
ADDRLP4 2052
ARGP4
CNSTI4 0
ARGI4
CNSTI4 128
ARGI4
ADDRGP4 memset
CALLP4
pop
line 1811
;1811:		memset(string, 0, sizeof(string));
ADDRLP4 2348
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1024
ARGI4
ADDRGP4 memset
CALLP4
pop
line 1813
;1812:
;1813:		if ( strlen(arg1) ) {
ADDRLP4 0
ARGP4
ADDRLP4 3376
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 3376
INDIRI4
CNSTI4 0
EQI4 $890
line 1814
;1814:			trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $849
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1815
;1815:		}
LABELV $890
line 1828
;1816:		
;1817:		/***************************************************************
;1818:		This is some pretty ugly shit, and the end print out isn't too
;1819:		much better. This is a step in the correct direction, however
;1820:		These should be aligned into columns, 3 total. That being done
;1821:		would require padding:
;1822:		Com_sprintf(destVar, size, "%30s", cvarName);
;1823:		or something like that. Which would make this even more of a
;1824:		pain to work with.
;1825:
;1826:		FIXED: But it's painfully slow and ugly.
;1827:		****************************************************************/
;1828:		if( !(trap_Cvar_VariableIntegerValue("disable_map_restart")) ) {
ADDRGP4 $894
ARGP4
ADDRLP4 3380
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3380
INDIRI4
CNSTI4 0
NEI4 $892
line 1829
;1829:			Com_sprintf(string, sizeof(string), "%s %s", string, "map_restart");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $854
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1830
;1830:		}
LABELV $892
line 1831
;1831:		if( !(trap_Cvar_VariableIntegerValue("disable_mapnum")) ) {
ADDRGP4 $898
ARGP4
ADDRLP4 3384
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3384
INDIRI4
CNSTI4 0
NEI4 $896
line 1832
;1832:			Com_sprintf(string, sizeof(string), "%s %s", string, "mapnum");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $888
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1833
;1833:		}
LABELV $896
line 1834
;1834:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_plasmagunCycle")) ) {
ADDRGP4 $901
ARGP4
ADDRLP4 3388
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3388
INDIRI4
CNSTI4 0
NEI4 $899
line 1835
;1835:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_plasmagunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $867
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1836
;1836:		}
LABELV $899
line 1837
;1837:		if( !(trap_Cvar_VariableIntegerValue("disable_previousmap")) ) {
ADDRGP4 $904
ARGP4
ADDRLP4 3392
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3392
INDIRI4
CNSTI4 0
NEI4 $902
line 1838
;1838:			Com_sprintf(string, sizeof(string), "%s %s", string, "previousmap");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $856
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1839
;1839:		}
LABELV $902
line 1840
;1840:		if( !(trap_Cvar_VariableIntegerValue("disable_nextmap")) ) {
ADDRGP4 $907
ARGP4
ADDRLP4 3396
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3396
INDIRI4
CNSTI4 0
NEI4 $905
line 1841
;1841:			Com_sprintf(string, sizeof(string), "%s %s", string, "nextmap");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $855
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1842
;1842:		}
LABELV $905
line 1843
;1843:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_railgunCycle")) ) {
ADDRGP4 $910
ARGP4
ADDRLP4 3400
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3400
INDIRI4
CNSTI4 0
NEI4 $908
line 1844
;1844:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_railgunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $868
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1845
;1845:		}
LABELV $908
line 1846
;1846:		if( !(trap_Cvar_VariableIntegerValue("disable_map")) ) {
ADDRGP4 $913
ARGP4
ADDRLP4 3404
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3404
INDIRI4
CNSTI4 0
NEI4 $911
line 1847
;1847:			Com_sprintf(string, sizeof(string), "%s %s", string, "map");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $853
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1848
;1848:		}
LABELV $911
line 1849
;1849:		if( !(trap_Cvar_VariableIntegerValue("disable_g_gametype")) ) {
ADDRGP4 $916
ARGP4
ADDRLP4 3408
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3408
INDIRI4
CNSTI4 0
NEI4 $914
line 1850
;1850:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_gametype");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $859
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1851
;1851:		}
LABELV $914
line 1852
;1852:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_rocketlauncherCycle")) ) {
ADDRGP4 $919
ARGP4
ADDRLP4 3412
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3412
INDIRI4
CNSTI4 0
NEI4 $917
line 1853
;1853:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_rocketlauncherCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $869
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1854
;1854:		}
LABELV $917
line 1855
;1855:		if( !(trap_Cvar_VariableIntegerValue("disable_kick")) ) {
ADDRGP4 $922
ARGP4
ADDRLP4 3416
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3416
INDIRI4
CNSTI4 0
NEI4 $920
line 1856
;1856:			Com_sprintf(string, sizeof(string), "%s %s", string, "kick");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $860
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1857
;1857:		}
LABELV $920
line 1858
;1858:		if( !(trap_Cvar_VariableIntegerValue("disable_clientkick")) ) {
ADDRGP4 $925
ARGP4
ADDRLP4 3420
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3420
INDIRI4
CNSTI4 0
NEI4 $923
line 1859
;1859:			Com_sprintf(string, sizeof(string), "%s %s", string, "clientkick");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $861
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1860
;1860:		}
LABELV $923
line 1861
;1861:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_lightninggunCycle")) ) {
ADDRGP4 $928
ARGP4
ADDRLP4 3424
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3424
INDIRI4
CNSTI4 0
NEI4 $926
line 1862
;1862:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_lightninggunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $870
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1863
;1863:		}
LABELV $926
line 1864
;1864:		if( !(trap_Cvar_VariableIntegerValue("disable_g_warmup")) ) {
ADDRGP4 $931
ARGP4
ADDRLP4 3428
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3428
INDIRI4
CNSTI4 0
NEI4 $929
line 1865
;1865:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_warmup");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $862
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1866
;1866:		}
LABELV $929
line 1867
;1867:		if( !(trap_Cvar_VariableIntegerValue("disable_timelimit")) ) {
ADDRGP4 $934
ARGP4
ADDRLP4 3432
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3432
INDIRI4
CNSTI4 0
NEI4 $932
line 1868
;1868:			Com_sprintf(string, sizeof(string), "%s %s", string, "timelimit");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $863
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1869
;1869:		}
LABELV $932
line 1870
;1870:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_grenadelauncherCycle")) ) {
ADDRGP4 $937
ARGP4
ADDRLP4 3436
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3436
INDIRI4
CNSTI4 0
NEI4 $935
line 1871
;1871:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_grenadelauncherCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $871
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1872
;1872:		}
LABELV $935
line 1873
;1873:		if( !(trap_Cvar_VariableIntegerValue("disable_fraglimit")) ) {
ADDRGP4 $940
ARGP4
ADDRLP4 3440
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3440
INDIRI4
CNSTI4 0
NEI4 $938
line 1874
;1874:			Com_sprintf(string, sizeof(string), "%s %s", string, "fraglimit");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $864
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1875
;1875:		}
LABELV $938
line 1876
;1876:		if( !(trap_Cvar_VariableIntegerValue("disable_g_muteSpecs")) ) {
ADDRGP4 $943
ARGP4
ADDRLP4 3444
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3444
INDIRI4
CNSTI4 0
NEI4 $941
line 1877
;1877:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_muteSpecs");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $865
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1878
;1878:		}
LABELV $941
line 1879
;1879:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_shotgunCycle")) ) {
ADDRGP4 $946
ARGP4
ADDRLP4 3448
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3448
INDIRI4
CNSTI4 0
NEI4 $944
line 1880
;1880:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_shotgunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $872
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1881
;1881:		}
LABELV $944
line 1882
;1882:		if( !(trap_Cvar_VariableIntegerValue("disable_g_muteTourneyspecs")) ) {
ADDRGP4 $949
ARGP4
ADDRLP4 3452
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3452
INDIRI4
CNSTI4 0
NEI4 $947
line 1883
;1883:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_muteTourneyspecs");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $866
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1884
;1884:		}
LABELV $947
line 1885
;1885:		if( !(trap_Cvar_VariableIntegerValue("disable_g_DynamicRailgunCycle")) ) {
ADDRGP4 $952
ARGP4
ADDRLP4 3456
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3456
INDIRI4
CNSTI4 0
NEI4 $950
line 1886
;1886:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_DynamicRailgunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $875
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1887
;1887:		}
LABELV $950
line 1888
;1888:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_machinegunCycle")) ) {
ADDRGP4 $955
ARGP4
ADDRLP4 3460
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3460
INDIRI4
CNSTI4 0
NEI4 $953
line 1889
;1889:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_machinegunCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $873
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1890
;1890:		}
LABELV $953
line 1891
;1891:		if( !(trap_Cvar_VariableIntegerValue("disable_g_RailJumping")) ) {
ADDRGP4 $958
ARGP4
ADDRLP4 3464
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3464
INDIRI4
CNSTI4 0
NEI4 $956
line 1892
;1892:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_RailJumping");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $876
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1893
;1893:		}
LABELV $956
line 1894
;1894:		if( !(trap_Cvar_VariableIntegerValue("disable_g_railgunKnockback")) ) {
ADDRGP4 $961
ARGP4
ADDRLP4 3468
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3468
INDIRI4
CNSTI4 0
NEI4 $959
line 1895
;1895:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_railgunKnockback");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $877
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1896
;1896:		}
LABELV $959
line 1897
;1897:		if( !(trap_Cvar_VariableIntegerValue("disable_weap_bfgCycle")) ) {
ADDRGP4 $964
ARGP4
ADDRLP4 3472
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3472
INDIRI4
CNSTI4 0
NEI4 $962
line 1898
;1898:			Com_sprintf(string, sizeof(string), "%s %s", string, "weap_bfgCycle");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $874
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1899
;1899:		}
LABELV $962
line 1900
;1900:		if( !(trap_Cvar_VariableIntegerValue("disable_g_staticKnockback")) ) {
ADDRGP4 $967
ARGP4
ADDRLP4 3476
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3476
INDIRI4
CNSTI4 0
NEI4 $965
line 1901
;1901:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_staticKnockback");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $968
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1902
;1902:		}
LABELV $965
line 1903
;1903:		if( !(trap_Cvar_VariableIntegerValue("disable_g_returnFlag")) ) {
ADDRGP4 $971
ARGP4
ADDRLP4 3480
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3480
INDIRI4
CNSTI4 0
NEI4 $969
line 1904
;1904:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_returnFlag");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $879
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1905
;1905:		}
LABELV $969
line 1906
;1906:		if( !(trap_Cvar_VariableIntegerValue("disable_g_selfDamage")) ) {
ADDRGP4 $974
ARGP4
ADDRLP4 3484
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3484
INDIRI4
CNSTI4 0
NEI4 $972
line 1907
;1907:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_selfDamage");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $975
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1908
;1908:		}
LABELV $972
line 1909
;1909:		if( !(trap_Cvar_VariableIntegerValue("disable_g_FallingDamage")) ) {
ADDRGP4 $978
ARGP4
ADDRLP4 3488
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3488
INDIRI4
CNSTI4 0
NEI4 $976
line 1910
;1910:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_FallingDamage");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $881
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1911
;1911:		}
LABELV $976
line 1912
;1912:		if( !(trap_Cvar_VariableIntegerValue("disable_timeout")) ) {
ADDRGP4 $981
ARGP4
ADDRLP4 3492
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3492
INDIRI4
CNSTI4 0
NEI4 $979
line 1913
;1913:			Com_sprintf(string, sizeof(string), "%s %s", string, "timeout");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $882
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1914
;1914:		}
LABELV $979
line 1915
;1915:		if( !(trap_Cvar_VariableIntegerValue("disable_timein")) ) {
ADDRGP4 $984
ARGP4
ADDRLP4 3496
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3496
INDIRI4
CNSTI4 0
NEI4 $982
line 1916
;1916:			Com_sprintf(string, sizeof(string), "%s %s", string, "timein");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $883
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1917
;1917:		}
LABELV $982
line 1918
;1918:		if( !(trap_Cvar_VariableIntegerValue("disable_g_gamemode")) ) {
ADDRGP4 $987
ARGP4
ADDRLP4 3500
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3500
INDIRI4
CNSTI4 0
NEI4 $985
line 1919
;1919:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_gamemode");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $884
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1920
;1920:		}
LABELV $985
line 1921
;1921:		if( !(trap_Cvar_VariableIntegerValue("disable_g_pro_mode")) ) {
ADDRGP4 $990
ARGP4
ADDRLP4 3504
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3504
INDIRI4
CNSTI4 0
NEI4 $988
line 1922
;1922:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_pro_mode");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $885
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1923
;1923:		}
LABELV $988
line 1924
;1924:		if( !(trap_Cvar_VariableIntegerValue("disable_g_IU_ctf_Sounds")) ) {
ADDRGP4 $993
ARGP4
ADDRLP4 3508
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3508
INDIRI4
CNSTI4 0
NEI4 $991
line 1925
;1925:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_IU_ctf_Sounds");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $886
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1926
;1926:		}
LABELV $991
line 1927
;1927:		if( !(trap_Cvar_VariableIntegerValue("disable_g_teamKnockback")) ) {
ADDRGP4 $996
ARGP4
ADDRLP4 3512
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3512
INDIRI4
CNSTI4 0
NEI4 $994
line 1928
;1928:			Com_sprintf(string, sizeof(string), "%s %s", string, "g_teamKnockback");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $887
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1929
;1929:		}
LABELV $994
line 1930
;1930:		if( !(trap_Cvar_VariableIntegerValue("disable_quickmode")) ) {
ADDRGP4 $999
ARGP4
ADDRLP4 3516
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3516
INDIRI4
CNSTI4 0
NEI4 $997
line 1931
;1931:			Com_sprintf(string, sizeof(string), "%s %s", string, "quickmode");
ADDRLP4 2348
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2348
ARGP4
ADDRGP4 $889
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1932
;1932:		}
LABELV $997
line 1935
;1933:
;1934:		//trap_SendServerCommand( ent-g_entities, va("print \"%s\"", string));
;1935:		trap_SendServerCommand( ent-g_entities, va("vtc \"%s\n\0\"", string));
ADDRGP4 $1000
ARGP4
ADDRLP4 2348
ARGP4
ADDRLP4 3520
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3520
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1936
;1936:		return;
ADDRGP4 $822
JUMPV
LABELV $857
line 1940
;1937:	}
;1938:
;1939:	// if there is still a vote to be executed
;1940:	if ( level.voteExecuteTime ) {
ADDRGP4 level+2448
INDIRI4
CNSTI4 0
EQI4 $1001
line 1941
;1941:		level.voteExecuteTime = 0;
ADDRGP4 level+2448
CNSTI4 0
ASGNI4
line 1942
;1942:		trap_SendConsoleCommand( EXEC_APPEND, va("%s\n", level.voteString ) );
ADDRGP4 $1005
ARGP4
ADDRGP4 level+396
ARGP4
ADDRLP4 2348
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 2
ARGI4
ADDRLP4 2348
INDIRP4
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 1943
;1943:	}
LABELV $1001
line 1946
;1944:
;1945:	// special case for g_gametype, check for bad values
;1946:	if ( !Q_stricmp( arg1, "g_gametype" ) ) {
ADDRLP4 0
ARGP4
ADDRGP4 $859
ARGP4
ADDRLP4 2348
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2348
INDIRI4
CNSTI4 0
NEI4 $1007
line 1947
;1947:		i = atoi( arg2 );
ADDRLP4 1028
ARGP4
ADDRLP4 2352
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1024
ADDRLP4 2352
INDIRI4
ASGNI4
line 1948
;1948:		if( i == GT_SINGLE_PLAYER || i < GT_FFA || i >= GT_MAX_GAME_TYPE) {
ADDRLP4 1024
INDIRI4
CNSTI4 2
EQI4 $1012
ADDRLP4 1024
INDIRI4
CNSTI4 0
LTI4 $1012
ADDRLP4 1024
INDIRI4
CNSTI4 8
LTI4 $1009
LABELV $1012
line 1949
;1949:			trap_SendServerCommand( ent-g_entities, "print \"Invalid gametype.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1013
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1950
;1950:			return;
ADDRGP4 $822
JUMPV
LABELV $1009
line 1953
;1951:		}
;1952:
;1953:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %d", arg1, i );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1016
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1024
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1954
;1954:	} else if ( !Q_stricmp( arg1, "map" ) ) {
ADDRGP4 $1008
JUMPV
LABELV $1007
ADDRLP4 0
ARGP4
ADDRGP4 $853
ARGP4
ADDRLP4 2352
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2352
INDIRI4
CNSTI4 0
NEI4 $1017
line 1960
;1955:		// special case for map changes, we want to reset the nextmap setting
;1956:		// this allows a player to change maps, but not upset the map rotation
;1957:		char	s[MAX_STRING_CHARS];
;1958:		
;1959:		//We also want to do stuff for previousmap.
;1960:		trap_Cvar_VariableStringBuffer( "previousmap", s, sizeof(s) );
ADDRGP4 $856
ARGP4
ADDRLP4 2356
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1961
;1961:		if (*s) {
ADDRLP4 2356
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $1019
line 1962
;1962:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s; set previousmap \"%s\"", arg1, arg2, s );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1023
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 2356
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1963
;1963:		} else {
ADDRGP4 $1018
JUMPV
LABELV $1019
line 1964
;1964:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1965
;1965:		}
line 1966
;1966:	} else if ( !Q_stricmp( arg1, "mapnum" ) ) { //monkk
ADDRGP4 $1018
JUMPV
LABELV $1017
ADDRLP4 0
ARGP4
ADDRGP4 $888
ARGP4
ADDRLP4 2356
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2356
INDIRI4
CNSTI4 0
NEI4 $1026
line 1973
;1967:		// special case for map changes, we want to reset the nextmap setting
;1968:		// this allows a player to change maps, but not upset the map rotation
;1969:		char	s[MAX_STRING_CHARS];
;1970:		char	mapName[MAX_QPATH];
;1971:		int		mapNum, mapCount;
;1972:
;1973:		if( ! *arg2) {
ADDRLP4 1028
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $1028
line 1974
;1974:			trap_SendServerCommand( ent-g_entities, "print \"^1Invalid mapnumber.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1030
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1975
;1975:			return;
ADDRGP4 $822
JUMPV
LABELV $1028
line 1977
;1976:		}
;1977:		mapNum = atoi(arg2);
ADDRLP4 1028
ARGP4
ADDRLP4 3456
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 2360
ADDRLP4 3456
INDIRI4
ASGNI4
line 1978
;1978:		if( mapNum == 0 && arg2[0] != '0' ) {
ADDRLP4 2360
INDIRI4
CNSTI4 0
NEI4 $1031
ADDRLP4 1028
INDIRI1
CVII4 1
CNSTI4 48
EQI4 $1031
line 1981
;1979:			//since atoi will return 0 if it can't convert, we need to know if it was 0 or just
;1980:			//a failed conversion, in which case we should print an error
;1981:			trap_SendServerCommand( ent-g_entities, "print \"^1Invalid mapnumber.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1030
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1982
;1982:			return;
ADDRGP4 $822
JUMPV
LABELV $1031
line 1985
;1983:		}
;1984:
;1985:		if(mapNum < 0) {
ADDRLP4 2360
INDIRI4
CNSTI4 0
GEI4 $1033
line 1986
;1986:			trap_SendServerCommand( ent-g_entities, "print \"^1Invalid mapnumber, must be greater then zero.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1035
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1987
;1987:			return;
ADDRGP4 $822
JUMPV
LABELV $1033
line 1990
;1988:		}
;1989:
;1990:		memset(mapName, 0, sizeof(mapName));
ADDRLP4 3388
ARGP4
CNSTI4 0
ARGI4
CNSTI4 64
ARGI4
ADDRGP4 memset
CALLP4
pop
line 1991
;1991:		mapCount = FindMapNameForNumber( mapName, mapNum );
ADDRLP4 3388
ARGP4
ADDRLP4 2360
INDIRI4
ARGI4
ADDRLP4 3460
ADDRGP4 FindMapNameForNumber
CALLI4
ASGNI4
ADDRLP4 3452
ADDRLP4 3460
INDIRI4
ASGNI4
line 1993
;1992:
;1993:		if(mapNum > mapCount) {
ADDRLP4 2360
INDIRI4
ADDRLP4 3452
INDIRI4
LEI4 $1036
line 1994
;1994:			trap_SendServerCommand( ent-g_entities, 
ADDRGP4 $1038
ARGP4
ADDRLP4 3452
INDIRI4
ARGI4
ADDRLP4 3464
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3464
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1996
;1995:				va("print \"^1Invalid mapnumber, must be less then %d.\n\"", mapCount));
;1996:			return;
ADDRGP4 $822
JUMPV
LABELV $1036
line 1998
;1997:		}
;1998:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $855
ARGP4
ADDRLP4 2364
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1999
;1999:		if (*s) {
ADDRLP4 2364
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $1039
line 2000
;2000:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s; set nextmap \"%s\"", arg1, arg2, s );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1043
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 2364
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2001
;2001:		} else {
ADDRGP4 $1027
JUMPV
LABELV $1039
line 2002
;2002:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2003
;2003:		}
line 2004
;2004:	} else if ( !Q_stricmp( arg1, "nextmap" ) ) {
ADDRGP4 $1027
JUMPV
LABELV $1026
ADDRLP4 0
ARGP4
ADDRGP4 $855
ARGP4
ADDRLP4 2360
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2360
INDIRI4
CNSTI4 0
NEI4 $1046
line 2007
;2005:		char	s[MAX_STRING_CHARS];
;2006:
;2007:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $855
ARGP4
ADDRLP4 2364
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 2008
;2008:		if (!*s) {
ADDRLP4 2364
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $1048
line 2009
;2009:			trap_SendServerCommand( ent-g_entities, "print \"nextmap not set.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1050
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2010
;2010:			return;
ADDRGP4 $822
JUMPV
LABELV $1048
line 2012
;2011:		}
;2012:		Com_sprintf( level.voteString, sizeof( level.voteString ), "vstr nextmap");
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1053
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2013
;2013:	} else if ( !Q_stricmp( arg1, "previousmap" ) ) {
ADDRGP4 $1047
JUMPV
LABELV $1046
ADDRLP4 0
ARGP4
ADDRGP4 $856
ARGP4
ADDRLP4 2364
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2364
INDIRI4
CNSTI4 0
NEI4 $1054
line 2016
;2014:		char	s[MAX_STRING_CHARS];
;2015:
;2016:		trap_Cvar_VariableStringBuffer( "previousmap", s, sizeof(s) );
ADDRGP4 $856
ARGP4
ADDRLP4 2368
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 2017
;2017:		if (!*s) {
ADDRLP4 2368
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $1056
line 2018
;2018:			trap_SendServerCommand( ent-g_entities, "print \"previousmap not set.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1058
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2019
;2019:			return;
ADDRGP4 $822
JUMPV
LABELV $1056
line 2021
;2020:		}
;2021:		Com_sprintf( level.voteString, sizeof( level.voteString ), "vstr previousmap");
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1061
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2022
;2022:	} else if ( !Q_stricmp( arg1, "timeout" ) ) {
ADDRGP4 $1055
JUMPV
LABELV $1054
ADDRLP4 0
ARGP4
ADDRGP4 $882
ARGP4
ADDRLP4 2368
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2368
INDIRI4
CNSTI4 0
NEI4 $1062
line 2023
;2023:			level.match_time = atoi(arg2);
ADDRLP4 1028
ARGP4
ADDRLP4 2372
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRGP4 level+10832
ADDRLP4 2372
INDIRI4
ASGNI4
line 2024
;2024:		if ( level.match_team[ent->client->sess.sessionTeam] > g_timeOutLimit.integer ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10812
ADDP4
INDIRI4
ADDRGP4 g_timeOutLimit+12
INDIRI4
LEI4 $1065
line 2025
;2025:			trap_SendServerCommand( ent-g_entities, "print \"No time outs remaining\n\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1069
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2026
;2026:			return;
ADDRGP4 $822
JUMPV
LABELV $1065
line 2028
;2027:		}
;2028:		level.match_called = 1;
ADDRGP4 level+10828
CNSTI4 1
ASGNI4
line 2030
;2029:	//	Cmd_Timeout_f( ent );
;2030:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s \"%s\"", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1073
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2032
;2031:		//Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
;2032:	} else if ( !Q_stricmp( arg1, "timein" ) ) {
ADDRGP4 $1063
JUMPV
LABELV $1062
ADDRLP4 0
ARGP4
ADDRGP4 $883
ARGP4
ADDRLP4 2372
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2372
INDIRI4
CNSTI4 0
NEI4 $1074
line 2033
;2033:		if ( level.match_timeout != 1 ) {
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 1
EQI4 $1076
line 2034
;2034:			trap_SendServerCommand( ent-g_entities, "print \"No time out in progress\n\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1079
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2035
;2035:			return;
ADDRGP4 $822
JUMPV
LABELV $1076
line 2037
;2036:		}
;2037:		level.match_called = -1;
ADDRGP4 level+10828
CNSTI4 -1
ASGNI4
line 2038
;2038:		level.match_timeinGrace = atoi(arg2);
ADDRLP4 1028
ARGP4
ADDRLP4 2376
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRGP4 level+10836
ADDRLP4 2376
INDIRI4
ASGNI4
line 2039
;2039:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s \"%s\"", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1073
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2041
;2040:		//Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
;2041:	} else {
ADDRGP4 $1075
JUMPV
LABELV $1074
line 2042
;2042:		if ( (Q_stricmp (arg1, "full_weapons") == 0) || (Q_stricmp (arg1, "rnr") == 0) || 
ADDRLP4 0
ARGP4
ADDRGP4 $1086
ARGP4
ADDRLP4 2376
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2376
INDIRI4
CNSTI4 0
EQI4 $1094
ADDRLP4 0
ARGP4
ADDRGP4 $1087
ARGP4
ADDRLP4 2380
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2380
INDIRI4
CNSTI4 0
EQI4 $1094
ADDRLP4 0
ARGP4
ADDRGP4 $1088
ARGP4
ADDRLP4 2384
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2384
INDIRI4
CNSTI4 0
EQI4 $1094
ADDRLP4 0
ARGP4
ADDRGP4 $1089
ARGP4
ADDRLP4 2388
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2388
INDIRI4
CNSTI4 0
EQI4 $1094
ADDRLP4 0
ARGP4
ADDRGP4 $1090
ARGP4
ADDRLP4 2392
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2392
INDIRI4
CNSTI4 0
NEI4 $1084
LABELV $1094
line 2044
;2043:		 (Q_stricmp (arg1, "instagib") == 0) || (Q_stricmp (arg1, "classic_instagib") == 0) ||
;2044:		 (Q_stricmp (arg1, "hybrid_instagib") == 0) ) {
line 2049
;2045:			 //set arg2 to arg1
;2046:			//Com_sprintf( arg2, sizeof( arg2), "%s", arg1);
;2047:			//set arg1 to exec
;2048:			//Com_sprintf( arg1, sizeof( arg1), "exec", 0);
;2049:			Com_sprintf( level.voteString, sizeof( level.voteString ), "exec \"%s\"", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1097
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2050
;2050:		} else {
ADDRGP4 $1085
JUMPV
LABELV $1084
line 2051
;2051:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+396
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2052
;2052:		}
LABELV $1085
line 2053
;2053:	}
LABELV $1075
LABELV $1063
LABELV $1055
LABELV $1047
LABELV $1027
LABELV $1018
LABELV $1008
line 2055
;2054:
;2055:	Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1420
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1102
ARGP4
ADDRGP4 level+396
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2056
;2056:	G_Printf("%s\n", level.voteDisplayString);
ADDRGP4 $1005
ARGP4
ADDRGP4 level+1420
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 2057
;2057:	trap_SendServerCommand( -1, va("print \"%s called a vote.\n\"", ent->client->pers.netname ) );
ADDRGP4 $1105
ARGP4
ADDRLP4 2376
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 2376
INDIRI4
ADDP4
INDIRP4
ADDRLP4 2376
INDIRI4
ADDP4
ARGP4
ADDRLP4 2380
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 2380
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2060
;2058:
;2059:	// start the voting, the caller autoamtically votes yes
;2060:	level.voteTime = level.time;
ADDRGP4 level+2444
ADDRGP4 level+40
INDIRI4
ASGNI4
line 2061
;2061:	level.voteYes = 1;
ADDRGP4 level+2452
CNSTU1 1
ASGNU1
line 2062
;2062:	level.voteNo = 0;
ADDRGP4 level+2453
CNSTU1 0
ASGNU1
line 2064
;2063:
;2064:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 1024
CNSTI4 0
ASGNI4
ADDRGP4 $1113
JUMPV
LABELV $1110
line 2065
;2065:		level.clients[i].ps.eFlags &= ~EF_VOTED;
ADDRLP4 2384
CNSTI4 10828
ADDRLP4 1024
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 2384
INDIRP4
ADDRLP4 2384
INDIRP4
INDIRI4
CNSTI4 -16385
BANDI4
ASGNI4
line 2066
;2066:	}
LABELV $1111
line 2064
ADDRLP4 1024
ADDRLP4 1024
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1113
ADDRLP4 1024
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $1110
line 2067
;2067:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 2384
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 2384
INDIRP4
ADDRLP4 2384
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 2069
;2068:
;2069:	trap_SendServerCommand( -1, va("vt \"%i %s\"", level.voteTime, level.voteDisplayString) );
ADDRGP4 $1115
ARGP4
ADDRGP4 level+2444
INDIRI4
ARGI4
ADDRGP4 level+1420
ARGP4
ADDRLP4 2388
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 2388
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2070
;2070:	CheckVote();
ADDRGP4 CheckVote
CALLV
pop
line 2071
;2071:}
LABELV $822
endproc Cmd_CallVote_f 3524 24
export Cmd_Vote_f
proc Cmd_Vote_f 72 12
line 2078
;2072:
;2073:/*
;2074:==================
;2075:Cmd_Vote_f
;2076:==================
;2077:*/
;2078:void Cmd_Vote_f( gentity_t *ent ) {
line 2081
;2079:	char		msg[64];
;2080:
;2081:	if ( !level.voteTime ) {
ADDRGP4 level+2444
INDIRI4
CNSTI4 0
NEI4 $1119
line 2082
;2082:		trap_SendServerCommand( ent-g_entities, "print \"No vote in progress.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1122
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2083
;2083:		return;
ADDRGP4 $1118
JUMPV
LABELV $1119
line 2085
;2084:	}
;2085:	if ( ent->client->ps.eFlags & EF_VOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
INDIRI4
CNSTI4 16384
BANDI4
CNSTI4 0
EQI4 $1123
line 2086
;2086:		trap_SendServerCommand( ent-g_entities, "print \"Vote already cast.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1125
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2087
;2087:		return;
ADDRGP4 $1118
JUMPV
LABELV $1123
line 2089
;2088:	}
;2089:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $1126
line 2090
;2090:		trap_SendServerCommand( ent-g_entities, "print \"Not allowed to vote as spectator.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1128
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2091
;2091:		return;
ADDRGP4 $1118
JUMPV
LABELV $1126
line 2094
;2092:	}
;2093:
;2094:	trap_SendServerCommand( ent-g_entities, "print \"Vote cast.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1129
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2096
;2095:
;2096:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 64
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
ADDRLP4 64
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 2098
;2097:
;2098:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2100
;2099:
;2100:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $1135
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $1135
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $1130
LABELV $1135
line 2101
;2101:		level.voteYes++;
ADDRLP4 68
ADDRGP4 level+2452
ASGNP4
ADDRLP4 68
INDIRP4
ADDRLP4 68
INDIRP4
INDIRU1
CVUI4 1
CNSTI4 1
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 2103
;2102:		//trap_SetConfigstring( CS_VOTE_YES, va("%i", level.voteYes ) );
;2103:	} else {
ADDRGP4 $1131
JUMPV
LABELV $1130
line 2104
;2104:		level.voteNo++;
ADDRLP4 68
ADDRGP4 level+2453
ASGNP4
ADDRLP4 68
INDIRP4
ADDRLP4 68
INDIRP4
INDIRU1
CVUI4 1
CNSTI4 1
ADDI4
CVIU4 4
CVUU1 4
ASGNU1
line 2106
;2105:		//trap_SetConfigstring( CS_VOTE_NO, va("%i", level.voteNo ) );	
;2106:	}
LABELV $1131
line 2108
;2107:
;2108:	trap_SendServerCommand( -1, va("vt \"%i %i\"", level.voteYes, level.voteNo) );
ADDRGP4 $1138
ARGP4
ADDRGP4 level+2452
INDIRU1
CVUI4 1
ARGI4
ADDRGP4 level+2453
INDIRU1
CVUI4 1
ARGI4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2110
;2109:
;2110:	CheckVote();
ADDRGP4 CheckVote
CALLV
pop
line 2114
;2111:
;2112:	// a majority will be determined in CheckVote, which will also account
;2113:	// for players entering or leaving
;2114:}
LABELV $1118
endproc Cmd_Vote_f 72 12
export CheckTeamVote
proc CheckTeamVote 16 8
line 2121
;2115:
;2116:/*
;2117:==================
;2118:CheckTeamVote
;2119:==================
;2120:*/
;2121:void CheckTeamVote( int cs_offset ) {
line 2123
;2122:
;2123:	if ( level.time - level.teamVoteTime[cs_offset] >= VOTE_TIME ) {
ADDRGP4 level+40
INDIRI4
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4504
ADDP4
INDIRI4
SUBI4
CNSTI4 30000
LTI4 $1142
line 2124
;2124:		trap_SendServerCommand( -1, "print \"Team vote failed.\n\"" );
CNSTI4 -1
ARGI4
ADDRGP4 $1146
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2125
;2125:	} else {
ADDRGP4 $1143
JUMPV
LABELV $1142
line 2126
;2126:		if ( level.teamVoteYes[cs_offset] > level.numteamVotingClients[cs_offset]/2 ) {
ADDRLP4 0
CNSTI4 2
ASGNI4
ADDRLP4 4
ADDRFP4 0
INDIRI4
ADDRLP4 0
INDIRI4
LSHI4
ASGNI4
ADDRLP4 4
INDIRI4
ADDRGP4 level+4512
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
ADDRGP4 level+4528
ADDP4
INDIRI4
ADDRLP4 0
INDIRI4
DIVI4
LEI4 $1147
line 2128
;2127:			// execute the command, then remove the vote
;2128:			trap_SendServerCommand( -1, "print \"Team vote passed.\n\"" );
CNSTI4 -1
ARGI4
ADDRGP4 $1151
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2129
;2129:			level.teamVoteYes[cs_offset] = 128;
ADDRFP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4512
ADDP4
CNSTI4 128
ASGNI4
line 2131
;2130:			//
;2131:			if(!Q_stricmp("lockteam", level.teamVoteString[cs_offset]))
ADDRGP4 $1155
ARGP4
ADDRFP4 0
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
ADDRLP4 8
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $1153
line 2132
;2132:			{
line 2134
;2133:				//lock the team
;2134:				if(cs_offset == TEAM_RED-1)
ADDRFP4 0
INDIRI4
CNSTI4 0
NEI4 $1157
line 2135
;2135:					trap_SendConsoleCommand(EXEC_NOW, "lockteam r\n");
CNSTI4 0
ARGI4
ADDRGP4 $1159
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
ADDRGP4 $1148
JUMPV
LABELV $1157
line 2137
;2136:				else
;2137:					trap_SendConsoleCommand(EXEC_NOW, "lockteam b\n");
CNSTI4 0
ARGI4
ADDRGP4 $1160
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 2138
;2138:			}
ADDRGP4 $1148
JUMPV
LABELV $1153
line 2139
;2139:			else if(!Q_stricmp("unlockteam", level.teamVoteString[cs_offset]))
ADDRGP4 $1163
ARGP4
ADDRFP4 0
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
ADDRLP4 12
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 12
INDIRI4
CNSTI4 0
NEI4 $1148
line 2140
;2140:			{
line 2142
;2141:				//unlock the team
;2142:				if(cs_offset == TEAM_RED-1)
ADDRFP4 0
INDIRI4
CNSTI4 0
NEI4 $1165
line 2143
;2143:					trap_SendConsoleCommand(EXEC_NOW, "unlockteam r\n");
CNSTI4 0
ARGI4
ADDRGP4 $1167
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
ADDRGP4 $1148
JUMPV
LABELV $1165
line 2145
;2144:				else
;2145:					trap_SendConsoleCommand(EXEC_NOW, "unlockteam b\n");
CNSTI4 0
ARGI4
ADDRGP4 $1168
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 2146
;2146:			}
line 2147
;2147:/*			if ( !Q_strncmp( "leader", level.teamVoteString[cs_offset], 6) ) {
ADDRGP4 $1148
JUMPV
LABELV $1147
ADDRLP4 8
CNSTI4 2
ASGNI4
ADDRLP4 12
ADDRFP4 0
INDIRI4
ADDRLP4 8
INDIRI4
LSHI4
ASGNI4
ADDRLP4 12
INDIRI4
ADDRGP4 level+4520
ADDP4
INDIRI4
ADDRLP4 12
INDIRI4
ADDRGP4 level+4528
ADDP4
INDIRI4
ADDRLP4 8
INDIRI4
DIVI4
LTI4 $1141
line 2165
;2148:				//set the team leader
;2149:				SetLeader(team, atoi(level.teamVoteString[cs_offset] + 7));
;2150:			//} else if ( !Q_strncmp( "lockTeam", level.teamVoteString[cs_offset], 8) ) {
;2151:			//	level.team_Locked[team] = qtrue;//Team is locked.
;2152:			//} else if ( !Q_strncmp( "unlockTeam", level.teamVoteString[cs_offset], 10) ) {
;2153:			//	level.team_Locked[team] = qfalse;//Team is unlocked.
;2154:			} else {
;2155:				if ( !Q_strncmp( "timeout", level.teamVoteString[cs_offset], 7 ) ) {
;2156:					if ( g_gametype.integer >= GT_TEAM ) {
;2157:						level.match_team[level.voteTeam]++;
;2158:						level.voteTeam = -1;
;2159:					}
;2160:				}
;2161:				trap_SendConsoleCommand( EXEC_APPEND, va("%s\n", level.teamVoteString[cs_offset] ) );
;2162:			}
;2163:*/		} else if ( level.teamVoteNo[cs_offset] >= level.numteamVotingClients[cs_offset]/2 ) {
;2164:			// same behavior as a timeout
;2165:			trap_SendServerCommand( -1, "print \"Team vote failed.\n\"" );
CNSTI4 -1
ARGI4
ADDRGP4 $1146
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2166
;2166:		} else {
line 2168
;2167:			// still waiting for a majority
;2168:			return;
LABELV $1170
LABELV $1148
line 2170
;2169:		}
;2170:	}
LABELV $1143
line 2172
;2171:	//level.teamVoteTime[cs_offset] = 0;
;2172:	trap_SendServerCommand( -1, va("tv \"%i -1\n\"", cs_offset) );
ADDRGP4 $1173
ARGP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2175
;2173:	//trap_SetConfigstring( CS_TEAMVOTE_TIME + cs_offset, "" );
;2174:
;2175:}
LABELV $1141
endproc CheckTeamVote 16 8
export Cmd_CallTeamVote_f
proc Cmd_CallTeamVote_f 3268 20
line 2182
;2176:
;2177:/*
;2178:==================
;2179:Cmd_CallTeamVote_f
;2180:==================
;2181:*/
;2182:void Cmd_CallTeamVote_f( gentity_t *ent ) {
line 2374
;2183:#if 0
;2184:	int		i, team, cs_offset;
;2185:	char	arg1[MAX_STRING_TOKENS];
;2186:	char	arg2[MAX_STRING_TOKENS];
;2187:	char	cvarName[128];
;2188:
;2189:	team = ent->client->sess.sessionTeam;
;2190:	if ( team == TEAM_RED )
;2191:		cs_offset = 0;
;2192:	else if ( team == TEAM_BLUE )
;2193:		cs_offset = 1;
;2194:	else
;2195:		return;
;2196:
;2197:	if ( !g_allowVote.integer ) {
;2198:		trap_SendServerCommand( ent-g_entities, "print \"Voting not allowed here.\n\"" );
;2199:		return;
;2200:	}
;2201:
;2202:	if ( level.teamVoteTime[cs_offset] ) {
;2203:		trap_SendServerCommand( ent-g_entities, "print \"A team vote is already in progress.\n\"" );
;2204:		return;
;2205:	}
;2206:	if ( ent->client->pers.teamVoteCount >= MAX_VOTE_COUNT ) {
;2207:		trap_SendServerCommand( ent-g_entities, "print \"You have called the maximum number of team votes.\n\"" );
;2208:		return;
;2209:	}
;2210:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
;2211:		trap_SendServerCommand( ent-g_entities, "print \"Not allowed to call a vote as spectator.\n\"" );
;2212:		return;
;2213:	}
;2214:
;2215:	// make sure it is a valid command to vote on
;2216:	trap_Argv( 1, arg1, sizeof( arg1 ) );
;2217:
;2218:	Com_sprintf(cvarName, sizeof(cvarName), "disable_%s", arg1);
;2219:	if( trap_Cvar_VariableIntegerValue(cvarName) ) {
;2220:		trap_SendServerCommand( ent-g_entities, va("print \"callvote for %s is disabled.\n\"",arg1) );
;2221:		return;
;2222:	}
;2223:
;2224:	arg2[0] = '\0';
;2225:	for ( i = 2; i < trap_Argc(); i++ ) {
;2226:		if (i > 2)
;2227:			strcat(arg2, " ");
;2228:		trap_Argv( i, &arg2[strlen(arg2)], sizeof( arg2 ) - strlen(arg2) );
;2229:	}
;2230:
;2231:	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
;2232:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
;2233:		return;
;2234:	}
;2235:
;2236:	if ( !Q_stricmp( arg1, "leader" ) ) {
;2237:		char netname[MAX_NETNAME], leader[MAX_NETNAME];
;2238:
;2239:		if ( !arg2[0] ) {
;2240:			i = ent->client->ps.clientNum;
;2241:		} else {
;2242:			// numeric values are just slot numbers
;2243:			for (i = 0; i < 3; i++) {
;2244:				if ( !arg2[i] || arg2[i] < '0' || arg2[i] > '9' )
;2245:					break;
;2246:			}
;2247:			if ( i >= 3 || !arg2[i]) {
;2248:				i = atoi( arg2 );
;2249:				if ( i < 0 || i >= level.maxclients ) {
;2250:					trap_SendServerCommand( ent-g_entities, va("print \"Bad client slot: %i\n\"", i) );
;2251:					return;
;2252:				}
;2253:
;2254:				if ( !g_entities[i].inuse ) {
;2255:					trap_SendServerCommand( ent-g_entities, va("print \"Client %i is not active\n\"", i) );
;2256:					return;
;2257:				}
;2258:			} else {
;2259:				Q_strncpyz(leader, arg2, sizeof(leader));
;2260:				Q_CleanStr(leader);
;2261:				for ( i = 0 ; i < level.maxclients ; i++ ) {
;2262:					if ( level.clients[i].pers.connected == CON_DISCONNECTED )
;2263:						continue;
;2264:					if (level.clients[i].sess.sessionTeam != team)
;2265:						continue;
;2266:					Q_strncpyz(netname, level.clients[i].pers.netname, sizeof(netname));
;2267:					Q_CleanStr(netname);
;2268:					if ( !Q_stricmp(netname, leader) ) {
;2269:						break;
;2270:					}
;2271:				}
;2272:				if ( i >= level.maxclients ) {
;2273:					trap_SendServerCommand( ent-g_entities, va("print \"%s is not a valid player on your team.\n\"", arg2) );
;2274:					return;
;2275:				}
;2276:			}
;2277:		}
;2278:		Com_sprintf(arg2, sizeof(arg2), "%d", i);
;2279:	} else if ( !Q_stricmp( arg1, "timeout" ) ) {
;2280:		//if ( strlen(arg2) >= 1 ) {
;2281:			//int	time;
;2282:			level.match_time = atoi(arg2);
;2283:		//} else {
;2284:		//	level.match_time = 0;
;2285:		//}
;2286:		if ( level.match_team[ent->client->sess.sessionTeam] > g_timeOutLimit.integer ) {
;2287:			trap_SendServerCommand( ent-g_entities, "print \"No time outs remaining\n\"");
;2288:			return;
;2289:		}
;2290:		level.match_called = 1;
;2291:	//	Cmd_Timeout_f( ent );
;2292:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s \"%s\"", arg1, arg2 );
;2293:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.teamVoteString[cs_offset] );
;2294:	} else if ( !Q_stricmp( arg1, "timein" ) ) {
;2295:	} else if ( !Q_stricmp( arg1, "lockTeam" ) ) {
;2296:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s %i", arg1, team );
;2297:	} else if ( !Q_stricmp( arg1, "unlockTeam" ) ) {
;2298:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s %i", arg1, team );
;2299:	} else {
;2300:		char	string[2048];
;2301:		int		stringLen;
;2302:		int		totalStringLen = 0;
;2303:
;2304:		memset(cvarName, 0, sizeof(cvarName));
;2305:		memset(string, 0, sizeof(string));
;2306:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
;2307:		//trap_SendServerCommand( ent-g_entities, "print \"Team vote commands are: leader <player>, lockTeam, unlockTeam.\n\"" );
;2308:		
;2309:		if( !(trap_Cvar_VariableIntegerValue("disable_lead")) ) {
;2310:			Com_sprintf(cvarName, 128, "%30s", "leader <player>,");
;2311:			stringLen = strlen(cvarName);
;2312:			strcpy(string + totalStringLen, cvarName);
;2313:			totalStringLen += stringLen;
;2314:			memset(cvarName, 0, sizeof(cvarName));
;2315:			string[totalStringLen] = ' ';
;2316:			totalStringLen++;
;2317:		}
;2318:		if( !(trap_Cvar_VariableIntegerValue("disable_lockTeam")) ) {
;2319:			Com_sprintf(cvarName, 128, "%30s", "lockTeam,");
;2320:			stringLen = strlen(cvarName);
;2321:			strcpy(string + totalStringLen, cvarName);
;2322:			totalStringLen += stringLen;
;2323:			memset(cvarName, 0, sizeof(cvarName));
;2324:			string[totalStringLen] = ' ';
;2325:			totalStringLen++;
;2326:		}
;2327:		if( !(trap_Cvar_VariableIntegerValue("disable_unlockTeam")) ) {
;2328:			Com_sprintf(cvarName, 128, "%30s", "unlockTeam,");
;2329:			stringLen = strlen(cvarName);
;2330:			strcpy(string + totalStringLen, cvarName);
;2331:			totalStringLen += stringLen;
;2332:			memset(cvarName, 0, sizeof(cvarName));
;2333:			string[totalStringLen] = ' ';
;2334:			totalStringLen++;
;2335:		}
;2336:		if( !(trap_Cvar_VariableIntegerValue("disable_timeout")) ) {
;2337:			Com_sprintf(cvarName, 128, "%30s", "timeout <n>,");
;2338:			stringLen = strlen(cvarName);
;2339:			strcpy(string + totalStringLen, cvarName);
;2340:			totalStringLen += stringLen;
;2341:			memset(cvarName, 0, sizeof(cvarName));
;2342:			string[totalStringLen] = ' ';
;2343:			totalStringLen++;
;2344:		}
;2345:		trap_SendServerCommand( ent-g_entities, va("print \"Vote commands are: %s\n\"", string));
;2346:		return;
;2347:	}
;2348:
;2349:	Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s %s", arg1, arg2 );
;2350:
;2351:	for ( i = 0 ; i < level.maxclients ; i++ ) {
;2352:		if ( level.clients[i].pers.connected == CON_DISCONNECTED )
;2353:			continue;
;2354:		if (level.clients[i].sess.sessionTeam == team)
;2355:			trap_SendServerCommand( i, va("print \"%s called a team vote.\n\"", ent->client->pers.netname ) );
;2356:	}
;2357:
;2358:	// start the voting, the caller autoamtically votes yes
;2359:	level.teamVoteTime[cs_offset] = level.time;
;2360:	level.teamVoteYes[cs_offset] = 1;
;2361:	level.teamVoteNo[cs_offset] = 0;
;2362:
;2363:	for ( i = 0 ; i < level.maxclients ; i++ ) {
;2364:		if (level.clients[i].sess.sessionTeam == team)
;2365:			level.clients[i].ps.eFlags &= ~EF_TEAMVOTED;
;2366:	}
;2367:	ent->client->ps.eFlags |= EF_TEAMVOTED;
;2368:#endif
;2369:	int		i, team, cs_offset;
;2370:	char	arg1[MAX_STRING_TOKENS];
;2371:	char	arg2[MAX_STRING_TOKENS];
;2372:	char	cvarName[128];
;2373:
;2374:	team = ent->client->sess.sessionTeam;
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 2375
;2375:	if ( team == TEAM_RED )
ADDRLP4 4
INDIRI4
CNSTI4 1
NEI4 $1175
line 2376
;2376:		cs_offset = 0;
ADDRLP4 2056
CNSTI4 0
ASGNI4
ADDRGP4 $1176
JUMPV
LABELV $1175
line 2377
;2377:	else if ( team == TEAM_BLUE )
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $1174
line 2378
;2378:		cs_offset = 1;
ADDRLP4 2056
CNSTI4 1
ASGNI4
line 2380
;2379:	else
;2380:		return;
LABELV $1178
LABELV $1176
line 2382
;2381:
;2382:	level.voteTeam = ent->client->sess.sessionTeam;
ADDRGP4 level+10840
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 2385
;2383:
;2384:
;2385:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $1180
line 2386
;2386:		trap_SendServerCommand( ent-g_entities, "print \"Voting not allowed here.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $827
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2387
;2387:		return;
ADDRGP4 $1174
JUMPV
LABELV $1180
line 2390
;2388:	}
;2389:
;2390:	if ( level.voteTime ) {
ADDRGP4 level+2444
INDIRI4
CNSTI4 0
EQI4 $1183
line 2391
;2391:		trap_SendServerCommand( ent-g_entities, "print \"A vote is already in progress.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $831
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2392
;2392:		return;
ADDRGP4 $1174
JUMPV
LABELV $1183
line 2395
;2393:	}
;2394:	
;2395:	if ( level.voteExecuteTime != 0 ) {
ADDRGP4 level+2448
INDIRI4
CNSTI4 0
EQI4 $1186
line 2396
;2396:		trap_SendServerCommand( ent-g_entities, "print \"A vote is in the progress of executing.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $835
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2397
;2397:		return;
ADDRGP4 $1174
JUMPV
LABELV $1186
line 2399
;2398:	}
;2399:	if ( ent->client->pers.voteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 608
ADDP4
INDIRI4
CNSTI4 3
LTI4 $1189
line 2400
;2400:		trap_SendServerCommand( ent-g_entities, "print \"You have called the maximum number of votes.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $838
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2401
;2401:		return;
ADDRGP4 $1174
JUMPV
LABELV $1189
line 2403
;2402:	}
;2403:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $1191
line 2404
;2404:		trap_SendServerCommand( ent-g_entities, "print \"Not allowed to call a vote as spectator.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $841
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2405
;2405:		return;
ADDRGP4 $1174
JUMPV
LABELV $1191
line 2409
;2406:	}
;2407:
;2408:	// make sure it is a valid command to vote on
;2409:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 1032
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2410
;2410:	trap_Argv( 2, arg2, sizeof( arg2 ) );
CNSTI4 2
ARGI4
ADDRLP4 8
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2412
;2411:
;2412:	Com_sprintf(cvarName, sizeof(cvarName), "disable_%s", arg1);
ADDRLP4 2060
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $842
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2413
;2413:	if( trap_Cvar_VariableIntegerValue(cvarName) ) {
ADDRLP4 2060
ARGP4
ADDRLP4 2188
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 2188
INDIRI4
CNSTI4 0
EQI4 $1193
line 2414
;2414:		trap_SendServerCommand( ent-g_entities, va("print \"callvote for %s is disabled.\n\"",arg1) );
ADDRGP4 $845
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2192
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2192
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2415
;2415:		return;
ADDRGP4 $1174
JUMPV
LABELV $1193
line 2419
;2416:	}
;2417:
;2418:
;2419:	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
ADDRLP4 1032
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2192
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2192
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $1197
ADDRLP4 8
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2196
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2196
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $1195
LABELV $1197
line 2420
;2420:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $849
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2421
;2421:		return;
ADDRGP4 $1174
JUMPV
LABELV $1195
line 2427
;2422:	}
;2423:
;2424:	//FIXME: for g_allowLockedTeams
;2425:
;2426:	if ( //if not equal to any of these
;2427:		Q_stricmp(arg1, "lockteam") && Q_stricmp(arg1, "unlockteam") &&
ADDRLP4 1032
ARGP4
ADDRGP4 $1155
ARGP4
ADDRLP4 2200
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2200
INDIRI4
CNSTI4 0
EQI4 $1198
ADDRLP4 1032
ARGP4
ADDRGP4 $1163
ARGP4
ADDRLP4 2204
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2204
INDIRI4
CNSTI4 0
EQI4 $1198
ADDRLP4 1032
ARGP4
ADDRGP4 $882
ARGP4
ADDRLP4 2208
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2208
INDIRI4
CNSTI4 0
EQI4 $1198
ADDRLP4 1032
ARGP4
ADDRGP4 $883
ARGP4
ADDRLP4 2212
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2212
INDIRI4
CNSTI4 0
EQI4 $1198
ADDRLP4 1032
ARGP4
ADDRGP4 $1200
ARGP4
ADDRLP4 2216
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2216
INDIRI4
CNSTI4 0
EQI4 $1198
line 2430
;2428:		Q_stricmp(arg1, "timeout") && Q_stricmp(arg1, "timein") &&
;2429:		Q_stricmp(arg1, "leader")
;2430:	) {
line 2433
;2431:		char	string[MAX_STRING_TOKENS];
;2432:		//int		stringLen;
;2433:		int		totalStringLen = 0;
ADDRLP4 3244
CNSTI4 0
ASGNI4
line 2435
;2434:
;2435:		memset(cvarName, 0, sizeof(cvarName));
ADDRLP4 2060
ARGP4
CNSTI4 0
ARGI4
CNSTI4 128
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2436
;2436:		memset(string, 0, sizeof(string));
ADDRLP4 2220
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1024
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2438
;2437:
;2438:		if ( strlen(arg1) ) {
ADDRLP4 1032
ARGP4
ADDRLP4 3248
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 3248
INDIRI4
CNSTI4 0
EQI4 $1201
line 2439
;2439:			trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $849
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2440
;2440:		}
LABELV $1201
line 2463
;2441:		
;2442:		/***************************************************************
;2443:		This is some pretty ugly shit, and the end print out isn't too
;2444:		much better. This is a step in the correct direction, however
;2445:		These should be aligned into columns, 3 total. That being done
;2446:		would require padding:
;2447:		Com_sprintf(destVar, size, "%30s", cvarName);
;2448:		or something like that. Which would make this even more of a
;2449:		pain to work with.
;2450:
;2451:		FIXED: But it's painfully slow and ugly.
;2452:		****************************************************************/
;2453:
;2454:		//if ( g_allowLockedTeams.integer ) {//FIXME: for g_allowLockedTeams
;2455:
;2456:		//	if( !(trap_Cvar_VariableIntegerValue("disable_lockteam")) ) {
;2457:		//		Com_sprintf(string, sizeof(string), "%s %s", string, "lockteam");
;2458:		//	}
;2459:		//	if( !(trap_Cvar_VariableIntegerValue("disable_unlockteam")) ) {
;2460:		//		Com_sprintf(string, sizeof(string), "%s %s", string, "unlockteam");
;2461:		//	}
;2462:		//}
;2463:		if( !(trap_Cvar_VariableIntegerValue("disable_timeout")) ) {
ADDRGP4 $981
ARGP4
ADDRLP4 3252
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3252
INDIRI4
CNSTI4 0
NEI4 $1203
line 2464
;2464:				Com_sprintf(string, sizeof(string), "%s %s", string, "timeout");
ADDRLP4 2220
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2220
ARGP4
ADDRGP4 $882
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2465
;2465:		}
LABELV $1203
line 2466
;2466:		if( !(trap_Cvar_VariableIntegerValue("disable_timein")) ) {
ADDRGP4 $984
ARGP4
ADDRLP4 3256
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3256
INDIRI4
CNSTI4 0
NEI4 $1205
line 2467
;2467:				Com_sprintf(string, sizeof(string), "%s %s", string, "timein");
ADDRLP4 2220
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2220
ARGP4
ADDRGP4 $883
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2468
;2468:		}
LABELV $1205
line 2469
;2469:		if( !(trap_Cvar_VariableIntegerValue("disable_leader")) ) {
ADDRGP4 $1209
ARGP4
ADDRLP4 3260
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3260
INDIRI4
CNSTI4 0
NEI4 $1207
line 2470
;2470:				Com_sprintf(string, sizeof(string), "%s %s", string, "leader");
ADDRLP4 2220
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $895
ARGP4
ADDRLP4 2220
ARGP4
ADDRGP4 $1200
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2471
;2471:		}
LABELV $1207
line 2473
;2472:
;2473:		trap_SendServerCommand( ent-g_entities, va("vtc \"%s\n\0\"", string));
ADDRGP4 $1000
ARGP4
ADDRLP4 2220
ARGP4
ADDRLP4 3264
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3264
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2474
;2474:		return;
ADDRGP4 $1174
JUMPV
LABELV $1198
line 2478
;2475:	}
;2476:
;2477:	// if there is still a vote to be executed
;2478:	if ( level.voteExecuteTime ) {
ADDRGP4 level+2448
INDIRI4
CNSTI4 0
EQI4 $1210
line 2479
;2479:		level.voteExecuteTime = 0;
ADDRGP4 level+2448
CNSTI4 0
ASGNI4
line 2480
;2480:		trap_SendConsoleCommand( EXEC_APPEND, va("%s\n", level.voteString ) );
ADDRGP4 $1005
ARGP4
ADDRGP4 level+396
ARGP4
ADDRLP4 2220
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 2
ARGI4
ADDRLP4 2220
INDIRP4
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 2481
;2481:	}
LABELV $1210
line 2485
;2482:
;2483:
;2484:
;2485:	if ( !Q_stricmp( arg1, "leader" ) ) {
ADDRLP4 1032
ARGP4
ADDRGP4 $1200
ARGP4
ADDRLP4 2220
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2220
INDIRI4
CNSTI4 0
NEI4 $1215
line 2488
;2486:		char netname[MAX_NETNAME], leader[MAX_NETNAME];
;2487:
;2488:		if ( !arg2[0] ) {
ADDRLP4 8
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $1217
line 2489
;2489:			i = ent->client->ps.clientNum;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 140
ADDP4
INDIRI4
ASGNI4
line 2490
;2490:		} else {
ADDRGP4 $1218
JUMPV
LABELV $1217
line 2492
;2491:			// numeric values are just slot numbers
;2492:			for (i = 0; i < 3; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $1219
line 2493
;2493:				if ( !arg2[i] || arg2[i] < '0' || arg2[i] > '9' )
ADDRLP4 2296
ADDRLP4 0
INDIRI4
ADDRLP4 8
ADDP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2296
INDIRI4
CNSTI4 0
EQI4 $1226
ADDRLP4 2296
INDIRI4
CNSTI4 48
LTI4 $1226
ADDRLP4 2296
INDIRI4
CNSTI4 57
LEI4 $1223
LABELV $1226
line 2494
;2494:					break;
ADDRGP4 $1221
JUMPV
LABELV $1223
line 2495
;2495:			}
LABELV $1220
line 2492
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $1219
LABELV $1221
line 2496
;2496:			if ( i >= 3 || !arg2[i]) {
ADDRLP4 0
INDIRI4
CNSTI4 3
GEI4 $1229
ADDRLP4 0
INDIRI4
ADDRLP4 8
ADDP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $1227
LABELV $1229
line 2497
;2497:				i = atoi( arg2 );
ADDRLP4 8
ARGP4
ADDRLP4 2300
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 2300
INDIRI4
ASGNI4
line 2498
;2498:				if ( i < 0 || i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $1233
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $1230
LABELV $1233
line 2499
;2499:					trap_SendServerCommand( ent-g_entities, va("print \"Bad client slot: %i\n\"", i) );
ADDRGP4 $176
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2308
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2308
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2500
;2500:					return;
ADDRGP4 $1174
JUMPV
LABELV $1230
line 2503
;2501:				}
;2502:
;2503:				if ( !g_entities[i].inuse ) {
CNSTI4 896
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1228
line 2504
;2504:					trap_SendServerCommand( ent-g_entities, va("print \"Client %i is not active\n\"", i) );
ADDRGP4 $179
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2308
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2308
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2505
;2505:					return;
ADDRGP4 $1174
JUMPV
line 2507
;2506:				}
;2507:			} else {
LABELV $1227
line 2508
;2508:				Q_strncpyz(leader, arg2, sizeof(leader));
ADDRLP4 2260
ARGP4
ADDRLP4 8
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 2509
;2509:				Q_CleanStr(leader);
ADDRLP4 2260
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 2510
;2510:				for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1240
JUMPV
LABELV $1237
line 2511
;2511:					if ( level.clients[i].pers.connected == CON_DISCONNECTED )
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1242
line 2512
;2512:						continue;
ADDRGP4 $1238
JUMPV
LABELV $1242
line 2513
;2513:					if (level.clients[i].sess.sessionTeam != team)
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10188
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
EQI4 $1244
line 2514
;2514:						continue;
ADDRGP4 $1238
JUMPV
LABELV $1244
line 2515
;2515:					Q_strncpyz(netname, level.clients[i].pers.netname, sizeof(netname));
ADDRLP4 2224
ARGP4
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 516
ADDP4
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 2516
;2516:					Q_CleanStr(netname);
ADDRLP4 2224
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 2517
;2517:					if ( !Q_stricmp(netname, leader) ) {
ADDRLP4 2224
ARGP4
ADDRLP4 2260
ARGP4
ADDRLP4 2300
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2300
INDIRI4
CNSTI4 0
NEI4 $1246
line 2518
;2518:						break;
ADDRGP4 $1239
JUMPV
LABELV $1246
line 2520
;2519:					}
;2520:				}
LABELV $1238
line 2510
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1240
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $1237
LABELV $1239
line 2521
;2521:				if ( i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $1248
line 2522
;2522:					trap_SendServerCommand( ent-g_entities, va("print \"%s is not a valid player on your team.\n\"", arg2) );
ADDRGP4 $1251
ARGP4
ADDRLP4 8
ARGP4
ADDRLP4 2300
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2300
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2523
;2523:					return;
ADDRGP4 $1174
JUMPV
LABELV $1248
line 2525
;2524:				}
;2525:			}
LABELV $1228
line 2526
;2526:		}
LABELV $1218
line 2527
;2527:		Com_sprintf(arg2, sizeof(arg2), "%d", i);
ADDRLP4 8
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $288
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 2528
;2528:	} else if ( !Q_stricmp( arg1, "timeout" ) ) {
ADDRGP4 $1216
JUMPV
LABELV $1215
ADDRLP4 1032
ARGP4
ADDRGP4 $882
ARGP4
ADDRLP4 2224
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2224
INDIRI4
CNSTI4 0
NEI4 $1252
line 2529
;2529:			level.match_time = atoi(arg2);
ADDRLP4 8
ARGP4
ADDRLP4 2228
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRGP4 level+10832
ADDRLP4 2228
INDIRI4
ASGNI4
line 2530
;2530:		if ( level.match_team[ent->client->sess.sessionTeam] > g_timeOutLimit.integer ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10812
ADDP4
INDIRI4
ADDRGP4 g_timeOutLimit+12
INDIRI4
LEI4 $1255
line 2531
;2531:			trap_SendServerCommand( ent-g_entities, "print \"No time outs remaining\n\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1069
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2532
;2532:			return;
ADDRGP4 $1174
JUMPV
LABELV $1255
line 2534
;2533:		}
;2534:		level.match_called = 1;
ADDRGP4 level+10828
CNSTI4 1
ASGNI4
line 2535
;2535:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s \"%s\"", arg1, arg2 );
ADDRLP4 2056
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1073
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2537
;2536:		//Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.teamVoteString[cs_offset] );
;2537:	} else if ( !Q_stricmp( arg1, "timein" ) ) {
ADDRGP4 $1253
JUMPV
LABELV $1252
ADDRLP4 1032
ARGP4
ADDRGP4 $883
ARGP4
ADDRLP4 2228
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2228
INDIRI4
CNSTI4 0
NEI4 $1262
line 2538
;2538:		if ( level.match_timeout != 1 ) {
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 1
EQI4 $1264
line 2539
;2539:			trap_SendServerCommand( ent-g_entities, "print \"No time out in progress\n\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1079
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2540
;2540:			return;
ADDRGP4 $1174
JUMPV
LABELV $1264
line 2542
;2541:		}
;2542:		level.match_called = -1;
ADDRGP4 level+10828
CNSTI4 -1
ASGNI4
line 2543
;2543:		level.match_timeinGrace = atoi(arg2);
ADDRLP4 8
ARGP4
ADDRLP4 2232
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRGP4 level+10836
ADDRLP4 2232
INDIRI4
ASGNI4
line 2544
;2544:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s \"%s\"", arg1, arg2 );
ADDRLP4 2056
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1073
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2545
;2545:	} else {
ADDRGP4 $1263
JUMPV
LABELV $1262
line 2546
;2546:		Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s", arg1 );
ADDRLP4 2056
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $1102
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 2547
;2547:	}
LABELV $1263
LABELV $1253
LABELV $1216
line 2551
;2548:
;2549:
;2550:	// start the voting, the caller autoamtically votes yes
;2551:	level.teamVoteTime[cs_offset] = level.time;
ADDRLP4 2056
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4504
ADDP4
ADDRGP4 level+40
INDIRI4
ASGNI4
line 2552
;2552:	level.teamVoteYes[cs_offset] = 1;
ADDRLP4 2056
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4512
ADDP4
CNSTI4 1
ASGNI4
line 2553
;2553:	level.teamVoteNo[cs_offset] = 0;
ADDRLP4 2056
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4520
ADDP4
CNSTI4 0
ASGNI4
line 2555
;2554:
;2555:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1280
JUMPV
LABELV $1277
line 2556
;2556:		if (level.clients[i].sess.sessionTeam == team)	{
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10188
ADDP4
INDIRI4
ADDRLP4 4
INDIRI4
NEI4 $1282
line 2557
;2557:			trap_SendServerCommand( level.clients[i].ps.clientNum, va("print \"%s called a team vote.\n\"", ent->client->pers.netname ) );
ADDRGP4 $1284
ARGP4
ADDRLP4 2232
CNSTI4 516
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 2232
INDIRI4
ADDP4
INDIRP4
ADDRLP4 2232
INDIRI4
ADDP4
ARGP4
ADDRLP4 2236
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 140
ADDP4
INDIRI4
ARGI4
ADDRLP4 2236
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2558
;2558:			level.clients[i].ps.eFlags &= ~EF_TEAMVOTED;
ADDRLP4 2240
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 2240
INDIRP4
ADDRLP4 2240
INDIRP4
INDIRI4
CNSTI4 -524289
BANDI4
ASGNI4
line 2559
;2559:		}
LABELV $1282
line 2560
;2560:	}
LABELV $1278
line 2555
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1280
ADDRLP4 0
INDIRI4
ADDRGP4 level+28
INDIRI4
LTI4 $1277
line 2562
;2561:
;2562:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 2232
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 2232
INDIRP4
ADDRLP4 2232
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 2565
;2563:
;2564://	trap_SendServerCommand( -1, va("vt \"%i %s\"", level.voteTime, level.voteDisplayString) );
;2565:	G_Printf("tv %i %i %s\n", cs_offset, level.teamVoteTime[cs_offset], level.teamVoteString[cs_offset]);
ADDRGP4 $1285
ARGP4
ADDRLP4 2056
INDIRI4
ARGI4
ADDRLP4 2056
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4504
ADDP4
INDIRI4
ARGI4
ADDRLP4 2056
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 2566
;2566:	trap_SendServerCommand( -1, va("tv \"%i %i %s \"", cs_offset, level.teamVoteTime[cs_offset], level.teamVoteString[cs_offset]) );
ADDRGP4 $1288
ARGP4
ADDRLP4 2056
INDIRI4
ARGI4
ADDRLP4 2056
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4504
ADDP4
INDIRI4
ARGI4
ADDRLP4 2056
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2455
ADDP4
ARGP4
ADDRLP4 2244
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 2244
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2568
;2567:
;2568:	CheckTeamVote(cs_offset);
ADDRLP4 2056
INDIRI4
ARGI4
ADDRGP4 CheckTeamVote
CALLV
pop
line 2573
;2569:	//trap_SetConfigstring( CS_TEAMVOTE_TIME + cs_offset, va("%i", level.teamVoteTime[cs_offset] ) );
;2570:	//trap_SetConfigstring( CS_TEAMVOTE_STRING + cs_offset, level.teamVoteString[cs_offset] );
;2571:	//trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
;2572:	//trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );
;2573:}
LABELV $1174
endproc Cmd_CallTeamVote_f 3268 20
export Cmd_TeamVote_f
proc Cmd_TeamVote_f 88 16
line 2580
;2574:
;2575:/*
;2576:==================
;2577:Cmd_TeamVote_f
;2578:==================
;2579:*/
;2580:void Cmd_TeamVote_f( gentity_t *ent ) {
line 2584
;2581:	int			team, cs_offset;
;2582:	char		msg[64];
;2583:
;2584:	team = ent->client->sess.sessionTeam;
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
line 2585
;2585:	if ( team == TEAM_RED )
ADDRLP4 68
INDIRI4
CNSTI4 1
NEI4 $1292
line 2586
;2586:		cs_offset = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1293
JUMPV
LABELV $1292
line 2587
;2587:	else if ( team == TEAM_BLUE )
ADDRLP4 68
INDIRI4
CNSTI4 2
NEI4 $1291
line 2588
;2588:		cs_offset = 1;
ADDRLP4 0
CNSTI4 1
ASGNI4
line 2590
;2589:	else
;2590:		return;
LABELV $1295
LABELV $1293
line 2592
;2591:
;2592:	if ( !level.teamVoteTime[cs_offset] ) {
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4504
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1296
line 2593
;2593:		trap_SendServerCommand( ent-g_entities, "print \"No team vote in progress.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1299
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2594
;2594:		return;
ADDRGP4 $1291
JUMPV
LABELV $1296
line 2596
;2595:	}
;2596:	if ( ent->client->ps.eFlags & EF_TEAMVOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
INDIRI4
CNSTI4 524288
BANDI4
CNSTI4 0
EQI4 $1300
line 2597
;2597:		trap_SendServerCommand( ent-g_entities, "print \"Team vote already cast.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1302
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2598
;2598:		return;
ADDRGP4 $1291
JUMPV
LABELV $1300
line 2600
;2599:	}
;2600:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
NEI4 $1303
line 2601
;2601:		trap_SendServerCommand( ent-g_entities, "print \"Not allowed to vote as spectator.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1128
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2602
;2602:		return;
ADDRGP4 $1291
JUMPV
LABELV $1303
line 2605
;2603:	}
;2604:
;2605:	trap_SendServerCommand( ent-g_entities, "print \"Team vote cast.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1305
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2607
;2606:
;2607:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 2609
;2608:
;2609:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2611
;2610:
;2611:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 4
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $1311
ADDRLP4 4+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $1311
ADDRLP4 4+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $1306
LABELV $1311
line 2612
;2612:		level.teamVoteYes[cs_offset]++;
ADDRLP4 76
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4512
ADDP4
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2614
;2613:		//trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
;2614:	} else {
ADDRGP4 $1307
JUMPV
LABELV $1306
line 2615
;2615:		level.teamVoteNo[cs_offset]++;
ADDRLP4 76
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4520
ADDP4
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2617
;2616:		//trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );	
;2617:	}
LABELV $1307
line 2619
;2618:
;2619:	trap_SendServerCommand( -1, va("vt \"%i %i %i\n\"", cs_offset, level.teamVoteYes[cs_offset], level.teamVoteNo[cs_offset]) );
ADDRGP4 $1314
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 80
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ASGNI4
ADDRLP4 80
INDIRI4
ADDRGP4 level+4512
ADDP4
INDIRI4
ARGI4
ADDRLP4 80
INDIRI4
ADDRGP4 level+4520
ADDP4
INDIRI4
ARGI4
ADDRLP4 84
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 84
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2620
;2620:	CheckTeamVote(cs_offset);
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 CheckTeamVote
CALLV
pop
line 2623
;2621:	// a majority will be determined in TeamCheckVote, which will also account
;2622:	// for players entering or leaving
;2623:}
LABELV $1291
endproc Cmd_TeamVote_f 88 16
export Cmd_SetViewpos_f
proc Cmd_SetViewpos_f 1064 16
line 2631
;2624:
;2625:
;2626:/*
;2627:=================
;2628:Cmd_SetViewpos_f
;2629:=================
;2630:*/
;2631:void Cmd_SetViewpos_f( gentity_t *ent ) {
line 2636
;2632:	vec3_t		origin, angles;
;2633:	char		buffer[MAX_TOKEN_CHARS];
;2634:	int			i;
;2635:
;2636:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $1318
line 2637
;2637:		trap_SendServerCommand( ent-g_entities, va("print \"Cheats are not enabled on this server.\n\""));
ADDRGP4 $165
ARGP4
ADDRLP4 1052
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2638
;2638:		return;
ADDRGP4 $1317
JUMPV
LABELV $1318
line 2640
;2639:	}
;2640:	if ( trap_Argc() != 5 ) {
ADDRLP4 1052
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 5
EQI4 $1321
line 2641
;2641:		trap_SendServerCommand( ent-g_entities, va("print \"usage: setviewpos x y z yaw\n\""));
ADDRGP4 $1323
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2642
;2642:		return;
ADDRGP4 $1317
JUMPV
LABELV $1321
line 2645
;2643:	}
;2644:
;2645:	VectorClear( angles );
ADDRLP4 1056
CNSTF4 0
ASGNF4
ADDRLP4 1040+8
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040
ADDRLP4 1056
INDIRF4
ASGNF4
line 2646
;2646:	for ( i = 0 ; i < 3 ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $1326
line 2647
;2647:		trap_Argv( i + 1, buffer, sizeof( buffer ) );
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2648
;2648:		origin[i] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 1028
ADDP4
ADDRLP4 1060
INDIRF4
ASGNF4
line 2649
;2649:	}
LABELV $1327
line 2646
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $1326
line 2651
;2650:
;2651:	trap_Argv( 4, buffer, sizeof( buffer ) );
CNSTI4 4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2652
;2652:	angles[YAW] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1060
INDIRF4
ASGNF4
line 2654
;2653:
;2654:	TeleportPlayer( ent, origin, angles, qtrue );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 1040
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 TeleportPlayer
CALLV
pop
line 2655
;2655:}
LABELV $1317
endproc Cmd_SetViewpos_f 1064 16
export Cmd_Stats_f
proc Cmd_Stats_f 136 44
line 2664
;2656:
;2657:
;2658:
;2659:/*
;2660:=================
;2661:Cmd_Stats_f
;2662:=================
;2663:*/
;2664:void Cmd_Stats_f( int clientNum ) {
line 2684
;2665:/*
;2666:	int max, n, i;
;2667:
;2668:	max = trap_AAS_PointReachabilityAreaIndex( NULL );
;2669:
;2670:	n = 0;
;2671:	for ( i = 0; i < max; i++ ) {
;2672:		if ( ent->client->areabits[i >> 3] & (1 << (i & 7)) )
;2673:			n++;
;2674:	}
;2675:
;2676:	//trap_SendServerCommand( ent-g_entities, va("print \"visited %d of %d areas\n\"", n, max));
;2677:	trap_SendServerCommand( ent-g_entities, va("print \"%d%% level coverage\n\"", n * 100 / max));
;2678:*/
;2679:
;2680:	int			i;
;2681:	char		newname[36];
;2682:
;2683:
;2684:	if ( g_entities[clientNum].client->pers.stats_nextAllowedPrint > level.time ) {
CNSTI4 896
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+516
ADDP4
INDIRP4
CNSTI4 9852
ADDP4
INDIRI4
ADDRGP4 level+40
INDIRI4
LEI4 $1332
line 2687
;2685:		//We've already completed the print in the last 3 seconds
;2686:		//So don't print again.
;2687:		return;
ADDRGP4 $1331
JUMPV
LABELV $1332
line 2690
;2688:	}
;2689:
;2690:	trap_SendServerCommand( clientNum, va("print \"\n\""));
ADDRGP4 $1336
ARGP4
ADDRLP4 40
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 40
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2692
;2691:
;2692:	if ( g_gamemode.integer == 0 || g_gamemode.integer == 2 || g_gamemode.integer == 4 || ((g_gamemode.integer == 1 || g_gamemode.integer == 5) && !(weap_allowed.integer == 64 || weap_allowed.integer == 65)) ) {
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 0
EQI4 $1348
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 2
EQI4 $1348
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 4
EQI4 $1348
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 1
EQI4 $1349
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 5
NEI4 $1337
LABELV $1349
ADDRGP4 weap_allowed+12
INDIRI4
CNSTI4 64
EQI4 $1337
ADDRGP4 weap_allowed+12
INDIRI4
CNSTI4 65
EQI4 $1337
LABELV $1348
line 2693
;2693:		if ( g_gametype.integer == GT_CTF ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 4
NEI4 $1350
line 2694
;2694:				trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"Player \n  Gt      Mg     Sg      Gl    Rl     Lg     Rg     Pg     BFG  Returns/Caps\n\""));
ADDRGP4 $1353
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2695
;2695:			} else {
ADDRGP4 $1351
JUMPV
LABELV $1350
line 2696
;2696:				trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"Player \n  Gt      Mg     Sg      Gl    Rl     Lg     Rg     Pg     BFG  Frags\n\""));
ADDRGP4 $1354
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2697
;2697:			}
LABELV $1351
line 2698
;2698:			trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"-----------------------------------------------------------------------------\n\""));
ADDRGP4 $1355
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2700
;2699:		//for ( i = 0; i < MAX_CLIENTS; i++ ) {
;2700:		for ( i = 0; i < g_maxclients.integer; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1359
JUMPV
LABELV $1356
line 2701
;2701:			if ( level.clients[i].pers.connected == CON_CONNECTED) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1361
line 2702
;2702:				if (level.clients[i].sess.sessionTeam != TEAM_SPECTATOR ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 3
EQI4 $1363
line 2703
;2703:					trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"%s"S_COLOR_WHITE" \n%3.2f %3.2f %3.2f %3.2f %3.2f %3.2f %3.2f %3.2f %3.2f",
ADDRGP4 $1365
ARGP4
ADDRLP4 48
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 48
INDIRP4
CNSTI4 516
ADDP4
ARGP4
ADDRLP4 52
CNSTF4 953267991
ASGNF4
CNSTF4 1120403456
ADDRLP4 48
INDIRP4
CNSTI4 9904
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9860
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
CNSTF4 1120404767
ASGNF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9908
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9864
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9912
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9868
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9916
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9872
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9920
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9876
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9924
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9880
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9932
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9888
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 56
INDIRF4
ADDRLP4 48
INDIRP4
CNSTI4 9936
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 48
INDIRP4
CNSTI4 9892
ADDP4
INDIRI4
CVIF4 4
ADDRLP4 52
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 60
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 60
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2715
;2704:					level.clients[i].pers.netname,
;2705:					(float)level.clients[i].pers.stats_hits[WP_GAUNTLET] / (float)(level.clients[i].pers.stats_shots[WP_GAUNTLET] + .0001) * 100.00f,
;2706:					(float)level.clients[i].pers.stats_hits[WP_MACHINEGUN] / (float)(level.clients[i].pers.stats_shots[WP_MACHINEGUN] + .0001) * 100.01f,
;2707:					(float)level.clients[i].pers.stats_hits[WP_SHOTGUN] / (float)(level.clients[i].pers.stats_shots[WP_SHOTGUN] + .0001) * 100.01f,
;2708:					(float)level.clients[i].pers.stats_hits[WP_GRENADE_LAUNCHER] / (float)(level.clients[i].pers.stats_shots[WP_GRENADE_LAUNCHER] + .0001) * 100.01f,
;2709:					(float)level.clients[i].pers.stats_hits[WP_ROCKET_LAUNCHER] / (float)(level.clients[i].pers.stats_shots[WP_ROCKET_LAUNCHER] + .0001) * 100.01f,
;2710:					(float)level.clients[i].pers.stats_hits[WP_LIGHTNING] / (float)(level.clients[i].pers.stats_shots[WP_LIGHTNING] + .0001) * 100.01f,
;2711:					(float)level.clients[i].pers.stats_hits[WP_RAILGUN] / (float)(level.clients[i].pers.stats_shots[WP_RAILGUN] + .0001) * 100.01f,
;2712:					(float)level.clients[i].pers.stats_hits[WP_PLASMAGUN] / (float)(level.clients[i].pers.stats_shots[WP_PLASMAGUN] + .0001) * 100.01f,
;2713:					(float)level.clients[i].pers.stats_hits[WP_BFG] / (float)(level.clients[i].pers.stats_shots[WP_BFG] + .0001) * 100.01f
;2714:					));
;2715:					if (g_gametype.integer == GT_CTF) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 4
NEI4 $1366
line 2716
;2716:						trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"  %i/%i\n\"", level.clients[i].pers.stats_flags[3], level.clients[i].pers.stats_flags[4]));
ADDRGP4 $1369
ARGP4
ADDRLP4 64
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
CNSTI4 10056
ADDP4
INDIRI4
ARGI4
ADDRLP4 64
INDIRP4
CNSTI4 10060
ADDP4
INDIRI4
ARGI4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2717
;2717:					} else {
ADDRGP4 $1367
JUMPV
LABELV $1366
line 2718
;2718:						trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"   %i\n\"", level.clients[i].pers.stats_frags[WP_GAUNTLET] + level.clients[i].pers.stats_frags[WP_MACHINEGUN] +
ADDRGP4 $1370
ARGP4
ADDRLP4 64
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 64
INDIRP4
CNSTI4 10000
ADDP4
INDIRI4
ADDRLP4 64
INDIRP4
CNSTI4 10004
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 10008
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 10016
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 10020
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 10024
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 10028
ADDP4
INDIRI4
ADDI4
ADDRLP4 64
INDIRP4
CNSTI4 9936
ADDP4
INDIRI4
ADDI4
ARGI4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2721
;2719:							level.clients[i].pers.stats_frags[WP_SHOTGUN] + level.clients[i].pers.stats_frags[WP_ROCKET_LAUNCHER] + level.clients[i].pers.stats_frags[WP_LIGHTNING] + 
;2720:							level.clients[i].pers.stats_frags[WP_RAILGUN] + level.clients[i].pers.stats_frags[WP_PLASMAGUN] + level.clients[i].pers.stats_hits[WP_BFG]));
;2721:					}
LABELV $1367
line 2722
;2722:				}
LABELV $1363
line 2723
;2723:			}
LABELV $1361
line 2724
;2724:		}
LABELV $1357
line 2700
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1359
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1356
line 2725
;2725:	} else if ( (g_gamemode.integer == 1 || g_gamemode.integer == 5) && (weap_allowed.integer == 64 || weap_allowed.integer == 65) ) {
ADDRGP4 $1338
JUMPV
LABELV $1337
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 1
EQI4 $1377
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 5
NEI4 $1371
LABELV $1377
ADDRGP4 weap_allowed+12
INDIRI4
CNSTI4 64
EQI4 $1378
ADDRGP4 weap_allowed+12
INDIRI4
CNSTI4 65
NEI4 $1371
LABELV $1378
line 2727
;2726:		//instagib
;2727:		if ( g_gametype.integer == GT_CTF ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 4
NEI4 $1379
line 2728
;2728:			trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"Player                Hits  Shots  Accuracy  Railjumps  Frags  Returns/Caps\n\""));
ADDRGP4 $1382
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2729
;2729:		} else {
ADDRGP4 $1380
JUMPV
LABELV $1379
line 2730
;2730:			trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"Player                 Hits  Shots  Accuracy  Railjumps  Frags\n\""));
ADDRGP4 $1383
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2731
;2731:		}
LABELV $1380
line 2732
;2732:		trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"-----------------------------------------------------------------------------\n\""));
ADDRGP4 $1355
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2734
;2733:		//for ( i = 0; i < MAX_CLIENTS; i++ ) {
;2734:		for ( i = 0; i < g_maxclients.integer; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1387
JUMPV
LABELV $1384
line 2735
;2735:			if ( level.clients[i].pers.connected == CON_CONNECTED) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1389
line 2736
;2736:				if (level.clients[i].pers.stats_shots[WP_RAILGUN] > 0 || level.clients[i].pers.stats_railjumps > 0) {
ADDRLP4 48
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 52
CNSTI4 0
ASGNI4
ADDRLP4 48
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
ADDRLP4 52
INDIRI4
GTI4 $1393
ADDRLP4 48
INDIRP4
CNSTI4 9992
ADDP4
INDIRI4
ADDRLP4 52
INDIRI4
LEI4 $1391
LABELV $1393
line 2738
;2737:					char buffer[32];
;2738:					int	numColorCodesUsed = 0, ii = 0;
ADDRLP4 92
CNSTI4 0
ASGNI4
ADDRLP4 88
CNSTI4 0
ASGNI4
line 2739
;2739:					memset(&newname, 0, sizeof(newname));
ADDRLP4 4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 36
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2740
;2740:					numColorCodesUsed = FixedName( newname, level.clients[i].pers.netname, 22);
ADDRLP4 4
ARGP4
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 516
ADDP4
ARGP4
CNSTI4 22
ARGI4
ADDRLP4 96
ADDRGP4 FixedName
CALLI4
ASGNI4
ADDRLP4 92
ADDRLP4 96
INDIRI4
ASGNI4
line 2741
;2741:					memset(&buffer, 0, sizeof(buffer));
ADDRLP4 56
ARGP4
CNSTI4 0
ARGI4
CNSTI4 32
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2742
;2742:					for ( ii = 0; (strlen(newname)-(numColorCodesUsed*2))+strlen(buffer) < 22; ii++ ) {
ADDRLP4 88
CNSTI4 0
ASGNI4
ADDRGP4 $1397
JUMPV
LABELV $1394
line 2743
;2743:						buffer[ii] = ' ';
ADDRLP4 88
INDIRI4
ADDRLP4 56
ADDP4
CNSTI1 32
ASGNI1
line 2744
;2744:					}
LABELV $1395
line 2742
ADDRLP4 88
ADDRLP4 88
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1397
ADDRLP4 4
ARGP4
ADDRLP4 100
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 56
ARGP4
ADDRLP4 104
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 100
INDIRI4
ADDRLP4 92
INDIRI4
CNSTI4 1
LSHI4
SUBI4
ADDRLP4 104
INDIRI4
ADDI4
CNSTI4 22
LTI4 $1394
line 2745
;2745:					if ( g_gametype.integer == GT_CTF ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 4
NEI4 $1398
line 2746
;2746:						trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"%s%s"S_COLOR_WHITE" %4i  %4i    %3.2f   %5i     %4i      %3i  %3i\n", newname, buffer, level.clients[i].pers.stats_hits[WP_RAILGUN],
ADDRGP4 $1401
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 56
ARGP4
ADDRLP4 108
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 112
ADDRLP4 108
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
ASGNI4
ADDRLP4 112
INDIRI4
ARGI4
ADDRLP4 116
ADDRLP4 108
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
ASGNI4
ADDRLP4 116
INDIRI4
ARGI4
CNSTF4 1120404767
ADDRLP4 112
INDIRI4
CVIF4 4
ADDRLP4 116
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 108
INDIRP4
CNSTI4 9992
ADDP4
INDIRI4
ARGI4
ADDRLP4 108
INDIRP4
CNSTI4 10024
ADDP4
INDIRI4
ADDRLP4 108
INDIRP4
CNSTI4 10000
ADDP4
INDIRI4
ADDI4
ARGI4
ADDRLP4 108
INDIRP4
CNSTI4 10056
ADDP4
INDIRI4
ARGI4
ADDRLP4 108
INDIRP4
CNSTI4 10060
ADDP4
INDIRI4
ARGI4
ADDRLP4 120
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 120
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2750
;2747:							level.clients[i].pers.stats_shots[WP_RAILGUN], (float)level.clients[i].pers.stats_hits[WP_RAILGUN] / (float)(level.clients[i].pers.stats_shots[WP_RAILGUN] + .0001) * 100.01f,
;2748:							level.clients[i].pers.stats_railjumps, level.clients[i].pers.stats_frags[WP_RAILGUN] + level.clients[i].pers.stats_frags[WP_GAUNTLET],
;2749:							level.clients[i].pers.stats_flags[3], level.clients[i].pers.stats_flags[4]));
;2750:					} else {
ADDRGP4 $1399
JUMPV
LABELV $1398
line 2751
;2751:						trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"%s%s"S_COLOR_WHITE" %4i  %4i    %3.2f   %5i     %4i\n", newname, buffer, level.clients[i].pers.stats_hits[WP_RAILGUN],
ADDRGP4 $1402
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 56
ARGP4
ADDRLP4 108
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 112
ADDRLP4 108
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
ASGNI4
ADDRLP4 112
INDIRI4
ARGI4
ADDRLP4 116
ADDRLP4 108
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
ASGNI4
ADDRLP4 116
INDIRI4
ARGI4
CNSTF4 1120404767
ADDRLP4 112
INDIRI4
CVIF4 4
ADDRLP4 116
INDIRI4
CVIF4 4
CNSTF4 953267991
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 108
INDIRP4
CNSTI4 9992
ADDP4
INDIRI4
ARGI4
ADDRLP4 108
INDIRP4
CNSTI4 10024
ADDP4
INDIRI4
ADDRLP4 108
INDIRP4
CNSTI4 10000
ADDP4
INDIRI4
ADDI4
ARGI4
ADDRLP4 120
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 120
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2754
;2752:							level.clients[i].pers.stats_shots[WP_RAILGUN], (float)level.clients[i].pers.stats_hits[WP_RAILGUN] / (float)(level.clients[i].pers.stats_shots[WP_RAILGUN] + .0001) * 100.01f,
;2753:							level.clients[i].pers.stats_railjumps, level.clients[i].pers.stats_frags[WP_RAILGUN] + level.clients[i].pers.stats_frags[WP_GAUNTLET] ));
;2754:					}
LABELV $1399
line 2755
;2755:				}
LABELV $1391
line 2756
;2756:			}
LABELV $1389
line 2757
;2757:		}
LABELV $1385
line 2734
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1387
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1384
line 2758
;2758:	} else if ( g_gamemode.integer == 3 ) {
ADDRGP4 $1372
JUMPV
LABELV $1371
ADDRGP4 g_gamemode+12
INDIRI4
CNSTI4 3
NEI4 $1403
line 2760
;2759:		//Rockets and Rails
;2760:		trap_SendServerCommand( -1, va("print \""S_COLOR_WHITE"Player                 Hits  Shots   Rl     Rg      Damage\n\""));
ADDRGP4 $1406
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2761
;2761:			trap_SendServerCommand( -1, va("print \""S_COLOR_WHITE"-----------------------------------------------------------------------------\n\""));
ADDRGP4 $1355
ARGP4
ADDRLP4 48
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 48
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2763
;2762:			//for ( i = 0; i < MAX_CLIENTS; i++ ) {
;2763:			for ( i = 0; i < g_maxclients.integer; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1410
JUMPV
LABELV $1407
line 2764
;2764:				if ( level.clients[i].pers.connected == CON_CONNECTED) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1412
line 2765
;2765:					if (level.clients[i].pers.stats_shots[WP_RAILGUN] > 0 ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 9884
ADDP4
INDIRI4
CNSTI4 0
LEI4 $1414
line 2767
;2766:						char buffer[32];
;2767:						int	numColorCodesUsed = 0, ii = 0;
ADDRLP4 88
CNSTI4 0
ASGNI4
ADDRLP4 52
CNSTI4 0
ASGNI4
line 2768
;2768:						memset(&newname, 0, sizeof(newname));
ADDRLP4 4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 36
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2769
;2769:						numColorCodesUsed = FixedName( newname, level.clients[i].pers.netname, 22);
ADDRLP4 4
ARGP4
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 516
ADDP4
ARGP4
CNSTI4 22
ARGI4
ADDRLP4 92
ADDRGP4 FixedName
CALLI4
ASGNI4
ADDRLP4 88
ADDRLP4 92
INDIRI4
ASGNI4
line 2770
;2770:						memset(&buffer, 0, sizeof(buffer));
ADDRLP4 56
ARGP4
CNSTI4 0
ARGI4
CNSTI4 32
ARGI4
ADDRGP4 memset
CALLP4
pop
line 2771
;2771:						for ( ii = 0; (strlen(newname)-(numColorCodesUsed*2))+strlen(buffer) < 22; ii++ ) {
ADDRLP4 52
CNSTI4 0
ASGNI4
ADDRGP4 $1419
JUMPV
LABELV $1416
line 2772
;2772:							buffer[ii] = ' ';
ADDRLP4 52
INDIRI4
ADDRLP4 56
ADDP4
CNSTI1 32
ASGNI1
line 2773
;2773:						}
LABELV $1417
line 2771
ADDRLP4 52
ADDRLP4 52
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1419
ADDRLP4 4
ARGP4
ADDRLP4 96
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 56
ARGP4
ADDRLP4 100
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 96
INDIRI4
ADDRLP4 88
INDIRI4
CNSTI4 1
LSHI4
SUBI4
ADDRLP4 100
INDIRI4
ADDI4
CNSTI4 22
LTI4 $1416
line 2774
;2774:							trap_SendServerCommand( clientNum, va("print \""S_COLOR_WHITE"%s%s"S_COLOR_WHITE" %4i  %4i    %3.2f %3.2f   %8i\n\"", newname, buffer, level.clients[i].pers.stats_hits[WP_RAILGUN] + level.clients[i].pers.stats_hits[WP_ROCKET_LAUNCHER],
ADDRGP4 $1420
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 56
ARGP4
ADDRLP4 104
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
ADDRLP4 108
ADDRLP4 104
INDIRP4
CNSTI4 9928
ADDP4
INDIRI4
ASGNI4
ADDRLP4 112
ADDRLP4 104
INDIRP4
CNSTI4 9920
ADDP4
INDIRI4
ASGNI4
ADDRLP4 108
INDIRI4
ADDRLP4 112
INDIRI4
ADDI4
ARGI4
ADDRLP4 116
ADDRLP4 104
INDIRP4
CNSTI4 9884
ADDP4
INDIRI4
ASGNI4
ADDRLP4 120
ADDRLP4 104
INDIRP4
CNSTI4 9876
ADDP4
INDIRI4
ASGNI4
ADDRLP4 116
INDIRI4
ADDRLP4 120
INDIRI4
ADDI4
ARGI4
ADDRLP4 124
CNSTF4 1120404767
ASGNF4
ADDRLP4 128
CNSTF4 953267991
ASGNF4
ADDRLP4 124
INDIRF4
ADDRLP4 112
INDIRI4
CVIF4 4
ADDRLP4 120
INDIRI4
CVIF4 4
ADDRLP4 128
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 124
INDIRF4
ADDRLP4 108
INDIRI4
CVIF4 4
ADDRLP4 116
INDIRI4
CVIF4 4
ADDRLP4 128
INDIRF4
ADDF4
DIVF4
MULF4
ARGF4
ADDRLP4 104
INDIRP4
CNSTI4 9944
ADDP4
INDIRI4
ARGI4
ADDRLP4 132
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 132
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2779
;2775:								level.clients[i].pers.stats_shots[WP_RAILGUN] + level.clients[i].pers.stats_shots[WP_ROCKET_LAUNCHER],
;2776:								(float)level.clients[i].pers.stats_hits[WP_ROCKET_LAUNCHER] / (float)(level.clients[i].pers.stats_shots[WP_ROCKET_LAUNCHER] + .0001) * 100.01f,
;2777:								(float)level.clients[i].pers.stats_hits[WP_RAILGUN] / (float)(level.clients[i].pers.stats_shots[WP_RAILGUN] + .0001) * 100.01f,
;2778:								level.clients[i].pers.stats_totaldamage));
;2779:					}
LABELV $1414
line 2780
;2780:				}
LABELV $1412
line 2781
;2781:			}
LABELV $1408
line 2763
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1410
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1407
line 2782
;2782:	} else {
ADDRGP4 $1404
JUMPV
LABELV $1403
line 2783
;2783:		trap_SendServerCommand( clientNum, va("print \""S_COLOR_RED"There was an error in stats. It was unable to find a stats board for your game configuration\nReport this issue with the current configuration to q3.revolution@gmail.com\n\""));
ADDRGP4 $1421
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2784
;2784:	}
LABELV $1404
LABELV $1372
LABELV $1338
line 2785
;2785:	trap_SendServerCommand( clientNum, va("print \"\n\n\""));
ADDRGP4 $1422
ARGP4
ADDRLP4 44
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 44
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2788
;2786:
;2787:	//Prevent printing twice?
;2788:	g_entities[clientNum].client->pers.stats_nextAllowedPrint = level.time + 3000;
CNSTI4 896
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+516
ADDP4
INDIRP4
CNSTI4 9852
ADDP4
ADDRGP4 level+40
INDIRI4
CNSTI4 3000
ADDI4
ASGNI4
line 2790
;2789:
;2790:}
LABELV $1331
endproc Cmd_Stats_f 136 44
export Cmd_MuteStatus_f
proc Cmd_MuteStatus_f 0 8
line 2798
;2791:
;2792:
;2793:/*
;2794:=================
;2795:Cmd_MuteStatus_f
;2796:=================
;2797:*/
;2798:void Cmd_MuteStatus_f( gentity_t *ent ) {
line 2800
;2799:
;2800:	if ( g_gametype.integer != 1 ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
EQI4 $1426
line 2801
;2801:		switch (g_muteSpecs.integer) {
ADDRGP4 g_muteSpecs+12
INDIRI4
CNSTI4 1
EQI4 $1432
ADDRGP4 $1429
JUMPV
LABELV $1432
line 2803
;2802:			case 1: 
;2803:			trap_SendServerCommand( ent-g_entities, "print \"Spectators are currently mute to players.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1433
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2804
;2804:			break;
ADDRGP4 $1425
JUMPV
LABELV $1429
line 2806
;2805:			default:
;2806:			trap_SendServerCommand( ent-g_entities, "print \"Spectators are not muted.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1434
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2807
;2807:			break;
line 2809
;2808:		}
;2809:		return;
ADDRGP4 $1425
JUMPV
LABELV $1426
line 2812
;2810:	}
;2811:	
;2812:		if ( g_gametype.integer == 1 ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 1
NEI4 $1435
line 2814
;2813:			
;2814:		switch (g_muteTourneyspecs.integer) {
ADDRGP4 g_muteTourneyspecs+12
INDIRI4
CNSTI4 1
EQI4 $1441
ADDRGP4 $1438
JUMPV
LABELV $1441
line 2816
;2815:			case 1: 
;2816:				trap_SendServerCommand( ent-g_entities, "print \"Tournament spectators are currently mute to players.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1442
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2817
;2817:			break;
ADDRGP4 $1425
JUMPV
LABELV $1438
line 2819
;2818:			default:
;2819:				trap_SendServerCommand( ent-g_entities, "print \"Tournament spectators are not muted.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1443
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2820
;2820:			break;
line 2822
;2821:		}
;2822:		return;
LABELV $1435
line 2825
;2823:	}
;2824:
;2825:}
LABELV $1425
endproc Cmd_MuteStatus_f 0 8
export Cmd_TossFlag_f
proc Cmd_TossFlag_f 16 16
line 2833
;2826:
;2827:/*
;2828:=================
;2829:Cmd_TossFlag_f
;2830:=================
;2831:*/
;2832:
;2833:void Cmd_TossFlag_f( gentity_t *ent ) { 
line 2835
;2834:	gitem_t		*item;
;2835:	float		angle = 0;
ADDRLP4 0
CNSTF4 0
ASGNF4
line 2839
;2836:	gentity_t	*drop;
;2837:
;2838:	//FIXME: Broken in promode
;2839:	if (level.match_timeout == 1/* || g_pro_mode.integer == 1*/) {
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 1
NEI4 $1445
line 2840
;2840:		return;
ADDRGP4 $1444
JUMPV
LABELV $1445
line 2841
;2841:	} else if( !gameSettings.allowTossflag ) {
ADDRGP4 gameSettings+8
INDIRI4
CNSTI4 0
NEI4 $1448
line 2842
;2842:		return;
ADDRGP4 $1444
JUMPV
LABELV $1448
line 2845
;2843:	}
;2844:
;2845:	if ( ent->client->ps.powerups[PW_REDFLAG] ) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 340
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1451
line 2847
;2846:		//trap_SendServerCommand( -1, " print \"DBG: toss red flag.\n\"");
;2847:		item = BG_FindItemForPowerup( PW_REDFLAG );
CNSTI4 7
ARGI4
ADDRLP4 12
ADDRGP4 BG_FindItemForPowerup
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 12
INDIRP4
ASGNP4
line 2848
;2848:		ent->client->ps.powerups[PW_REDFLAG] = 0;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 340
ADDP4
CNSTI4 0
ASGNI4
line 2849
;2849:		ent->client->naft[1] = PW_REDFLAG;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10248
ADDP4
CNSTI4 7
ASGNI4
line 2850
;2850:	} else if ( ent->client->ps.powerups[PW_BLUEFLAG] ) {
ADDRGP4 $1452
JUMPV
LABELV $1451
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 344
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1444
line 2852
;2851:		//trap_SendServerCommand( -1, " print \"DBG: toss blue flag.\n\"");
;2852:		item = BG_FindItemForPowerup( PW_BLUEFLAG );
CNSTI4 8
ARGI4
ADDRLP4 12
ADDRGP4 BG_FindItemForPowerup
CALLP4
ASGNP4
ADDRLP4 4
ADDRLP4 12
INDIRP4
ASGNP4
line 2853
;2853:		ent->client->ps.powerups[PW_BLUEFLAG] = 0;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 344
ADDP4
CNSTI4 0
ASGNI4
line 2854
;2854:		ent->client->naft[1] = PW_BLUEFLAG;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10248
ADDP4
CNSTI4 8
ASGNI4
line 2855
;2855:	} else {
line 2857
;2856:		//trap_SendServerCommand( -1, " print \"return.\n\"");
;2857:		return;
LABELV $1454
LABELV $1452
line 2861
;2858:	}
;2859:
;2860:	
;2861:	ent->client->naft[0] = (level.time + 700);
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10244
ADDP4
ADDRGP4 level+40
INDIRI4
CNSTI4 700
ADDI4
ASGNI4
line 2863
;2862:
;2863:	drop = Drop_Item( ent, item, angle, qtrue );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 0
INDIRF4
ARGF4
CNSTI4 1
ARGI4
ADDRLP4 12
ADDRGP4 Drop_Item
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 12
INDIRP4
ASGNP4
line 2869
;2864:	//drop = Drop_ItemFlag( ent, item, angle );
;2865://	angle += 45;
;2866:
;2867:
;2868:	//}
;2869:}
LABELV $1444
endproc Cmd_TossFlag_f 16 16
export ReadyCheck
proc ReadyCheck 4 8
line 2877
;2870:
;2871:/*
;2872:=================
;2873:ReadyCheck()
;2874:We check the status of totalReady against numPlayingClients
;2875:=================
;2876:*/
;2877:void ReadyCheck ( void ) {
line 2879
;2878:	
;2879:	if ( (level.totalReady == level.numPlayingClients ||
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+122
INDIRU1
CVUI4 1
EQI4 $1466
ADDRGP4 g_allowReady+12
INDIRI4
CNSTI4 2
LTI4 $1457
ADDRGP4 level+32
INDIRI4
CVIF4 4
ADDRGP4 level+122
INDIRU1
CVUI4 1
CVIF4 4
CNSTF4 1008981770
ADDRGP4 g_allowReady+12
INDIRI4
CVIF4 4
MULF4
MULF4
LTF4 $1457
LABELV $1466
ADDRGP4 level+16
INDIRI4
CNSTI4 -1
EQI4 $1457
line 2880
;2880:		g_allowReady.integer >= 2 && level.totalReady >= level.numPlayingClients * (g_allowReady.integer * .01)) && level.warmupTime != -1 ) {
line 2881
;2881:			if ( g_readyGrace.integer >= 2 ) {
ADDRGP4 g_readyGrace+12
INDIRI4
CNSTI4 2
LTI4 $1467
line 2882
;2882:					trap_SendServerCommand( -1, ("cp \"All players are now ready.\n\""));
CNSTI4 -1
ARGI4
ADDRGP4 $1470
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2883
;2883:				}
LABELV $1467
line 2884
;2884:			level.warmupTime = level.time + (g_readyGrace.integer * 1000);
ADDRGP4 level+16
ADDRGP4 level+40
INDIRI4
CNSTI4 1000
ADDRGP4 g_readyGrace+12
INDIRI4
MULI4
ADDI4
ASGNI4
line 2885
;2885:			trap_SetConfigstring( CS_WARMUP, va("%i", level.warmupTime) );
ADDRGP4 $1474
ARGP4
ADDRGP4 level+16
INDIRI4
ARGI4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 5
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 2886
;2886:			return;
ADDRGP4 $1456
JUMPV
LABELV $1457
line 2888
;2887:	}
;2888:	if ( level.totalReady != level.numPlayingClients && level.warmupTime != -1 && level.warmupTime != level.originalWarmupTime ) {
ADDRGP4 level+32
INDIRI4
ADDRGP4 level+122
INDIRU1
CVUI4 1
EQI4 $1476
ADDRGP4 level+16
INDIRI4
CNSTI4 -1
EQI4 $1476
ADDRGP4 level+16
INDIRI4
ADDRGP4 level+20
INDIRI4
EQI4 $1476
line 2889
;2889:			level.warmupTime = level.originalWarmupTime;
ADDRGP4 level+16
ADDRGP4 level+20
INDIRI4
ASGNI4
line 2890
;2890:			trap_SetConfigstring( CS_WARMUP, va("%i", level.warmupTime) );
ADDRGP4 $1474
ARGP4
ADDRGP4 level+16
INDIRI4
ARGI4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 5
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 2891
;2891:			return;
LABELV $1476
line 2893
;2892:	}
;2893:}
LABELV $1456
endproc ReadyCheck 4 8
export Cmd_Ready_f
proc Cmd_Ready_f 16 8
line 2900
;2894:
;2895:/*
;2896:=================
;2897:Ready
;2898:=================
;2899:*/
;2900:void Cmd_Ready_f ( gentity_t *ent ) {
line 2902
;2901:
;2902:	if ( (level.warmupTime - level.time >= 5000) && !level.clients[ent-g_entities].playerReady) {
ADDRGP4 level+16
INDIRI4
ADDRGP4 level+40
INDIRI4
SUBI4
CNSTI4 5000
LTI4 $1487
CNSTI4 10828
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1487
line 2903
;2903:		int readyMask = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 2906
;2904:		int i;
;2905:
;2906:		level.totalReady++;
ADDRLP4 8
ADDRGP4 level+32
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2907
;2907:		level.clients[ent-g_entities].playerReady = qtrue;
CNSTI4 10828
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
CNSTI4 1
ASGNI4
line 2910
;2908:		//FIXME: Send a command to clients to tag this client as ready.
;2909:
;2910:		for (i=0 ; i< g_maxclients.integer ; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1495
JUMPV
LABELV $1492
line 2911
;2911:			if ( level.clients[i].pers.connected != CON_CONNECTED ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1497
line 2912
;2912:				continue;
ADDRGP4 $1493
JUMPV
LABELV $1497
line 2914
;2913:			}
;2914:			if ( g_entities[level.clients[i].ps.clientNum].r.svFlags & SVF_BOT ) {
CNSTI4 896
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 140
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+208+216
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $1499
line 2915
;2915:				continue;
ADDRGP4 $1493
JUMPV
LABELV $1499
line 2918
;2916:			}
;2917:
;2918:			if ( level.clients[i].playerReady ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1503
line 2919
;2919:				if ( i < 32 ) {
ADDRLP4 0
INDIRI4
CNSTI4 32
GEI4 $1505
line 2920
;2920:					readyMask |= 1 << i;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDRLP4 0
INDIRI4
LSHI4
BORI4
ASGNI4
line 2921
;2921:				}
LABELV $1505
line 2922
;2922:			}
LABELV $1503
line 2923
;2923:		}
LABELV $1493
line 2910
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1495
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1492
line 2925
;2924:
;2925:		for (i=0 ; i< g_maxclients.integer ; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1510
JUMPV
LABELV $1507
line 2926
;2926:			if ( level.clients[i].pers.connected != CON_CONNECTED ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1512
line 2927
;2927:				continue;
ADDRGP4 $1508
JUMPV
LABELV $1512
line 2929
;2928:			}
;2929:			level.clients[i].ps.stats[STAT_CLIENTS_READY] = readyMask;
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 204
ADDP4
ADDRLP4 4
INDIRI4
ASGNI4
line 2930
;2930:		}
LABELV $1508
line 2925
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1510
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1507
line 2931
;2931:		trap_SendServerCommand( -1, va("rd %i\n\"", ent-g_entities) );
ADDRGP4 $1514
ARGP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2933
;2932:		//trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " is now ready.\n\"", ent->client->pers.netname) );
;2933:	}
LABELV $1487
line 2934
;2934:	ReadyCheck();
ADDRGP4 ReadyCheck
CALLV
pop
line 2935
;2935:}
LABELV $1486
endproc Cmd_Ready_f 16 8
export Cmd_Notready_f
proc Cmd_Notready_f 16 8
line 2942
;2936:
;2937:/*
;2938:=================
;2939:Notready
;2940:=================
;2941:*/
;2942:void Cmd_Notready_f ( gentity_t *ent ) {
line 2944
;2943:	//G_Printf("Not ready: %i %i",ent-g_entities, level.clients[ent-g_entities].playerReady);
;2944:	if ( level.clients[ent-g_entities].playerReady ) {
CNSTI4 10828
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1516
line 2945
;2945:		int readyMask = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 2948
;2946:		int i;
;2947:
;2948:		level.totalReady--;
ADDRLP4 8
ADDRGP4 level+32
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 2949
;2949:		level.clients[ent-g_entities].playerReady = qfalse;
CNSTI4 10828
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
CNSTI4 0
ASGNI4
line 2951
;2950:		//FIXME: Send a command to clients to untag this client as ready.
;2951:		for (i=0 ; i< g_maxclients.integer ; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1522
JUMPV
LABELV $1519
line 2952
;2952:			if ( level.clients[i].pers.connected != CON_CONNECTED ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1524
line 2953
;2953:				continue;
ADDRGP4 $1520
JUMPV
LABELV $1524
line 2955
;2954:			}
;2955:			if ( g_entities[level.clients[i].ps.clientNum].r.svFlags & SVF_BOT ) {
CNSTI4 896
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 140
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+208+216
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
EQI4 $1526
line 2956
;2956:				continue;
ADDRGP4 $1520
JUMPV
LABELV $1526
line 2959
;2957:			}
;2958:
;2959:			if ( level.clients[i].playerReady ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 10236
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1530
line 2960
;2960:				if ( i < 32 ) {
ADDRLP4 0
INDIRI4
CNSTI4 32
GEI4 $1532
line 2961
;2961:					readyMask |= 1 << i;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDRLP4 0
INDIRI4
LSHI4
BORI4
ASGNI4
line 2962
;2962:				}
LABELV $1532
line 2963
;2963:			}
LABELV $1530
line 2964
;2964:		}
LABELV $1520
line 2951
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1522
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1519
line 2966
;2965:
;2966:		for (i=0 ; i< g_maxclients.integer ; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $1537
JUMPV
LABELV $1534
line 2967
;2967:			if ( level.clients[i].pers.connected != CON_CONNECTED ) {
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 468
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1539
line 2968
;2968:				continue;
ADDRGP4 $1535
JUMPV
LABELV $1539
line 2970
;2969:			}
;2970:			level.clients[i].ps.stats[STAT_CLIENTS_READY] = readyMask;
CNSTI4 10828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 204
ADDP4
ADDRLP4 4
INDIRI4
ASGNI4
line 2971
;2971:		}
LABELV $1535
line 2966
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1537
ADDRLP4 0
INDIRI4
ADDRGP4 g_maxclients+12
INDIRI4
LTI4 $1534
line 2972
;2972:		trap_SendServerCommand( -1, va("nrd %i\n\"", ent-g_entities) );
ADDRGP4 $1541
ARGP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2974
;2973:		//trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " is not ready.\n\"", ent->client->pers.netname) );
;2974:	}
LABELV $1516
line 2975
;2975:	ReadyCheck();
ADDRGP4 ReadyCheck
CALLV
pop
line 2976
;2976:}
LABELV $1515
endproc Cmd_Notready_f 16 8
export Cmd_Timeout_f
proc Cmd_Timeout_f 0 0
line 2983
;2977:
;2978:/*
;2979:=================
;2980:TimeOut
;2981:=================
;2982:*/
;2983:void Cmd_Timeout_f( int time ) {
line 2984
;2984:	if (level.match_timeout == 0 ) {
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 0
NEI4 $1542
line 2985
;2985:		level.match_timeout = 1;
ADDRGP4 level+10800
CNSTU1 1
ASGNU1
line 2986
;2986:		level.match_timein = 0;
ADDRGP4 level+10804
CNSTI4 0
ASGNI4
line 2987
;2987:		if ( time != -1 ) {
ADDRFP4 0
INDIRI4
CNSTI4 -1
EQI4 $1544
line 2988
;2988:			level.match_timein = level.time + (time * 1000)/*( g_timeOutLength.integer * 1000)*/;
ADDRGP4 level+10804
ADDRGP4 level+40
INDIRI4
CNSTI4 1000
ADDRFP4 0
INDIRI4
MULI4
ADDI4
ASGNI4
line 2989
;2989:		}
line 2990
;2990:	} else {
line 2991
;2991:		return;
LABELV $1544
line 2993
;2992:	}
;2993:}
LABELV $1542
endproc Cmd_Timeout_f 0 0
export Cmd_Timein_f
proc Cmd_Timein_f 0 0
line 3000
;2994:
;2995:/*
;2996:=================
;2997:TimeIn
;2998:=================
;2999:*/
;3000:void Cmd_Timein_f( int time  ) {
line 3001
;3001:	if (level.match_timeout == 1 ) {
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 1
NEI4 $1552
line 3002
;3002:		level.match_timein = level.time + (time * 1000);
ADDRGP4 level+10804
ADDRGP4 level+40
INDIRI4
CNSTI4 1000
ADDRFP4 0
INDIRI4
MULI4
ADDI4
ASGNI4
line 3008
;3003:		//level.match_timeout = 0;
;3004:		//level.match_timein = 0;
;3005:		//level.match_time = 0;
;3006:		//level.match_timein = level.time + (time * 1000)/*( g_timeOutLength.integer * 1000)*/;
;3007:		//trap_SendServerCommand( -1, va("cp \"Time in!\n\""));
;3008:	} else {
line 3009
;3009:		return;
LABELV $1554
line 3011
;3010:	}
;3011:}
LABELV $1552
endproc Cmd_Timein_f 0 0
export cmd_players_f
proc cmd_players_f 1224 40
line 3018
;3012:
;3013:/*
;3014:==================
;3015:  cmd_players_f
;3016:==================
;3017:*/
;3018:void cmd_players_f ( gentity_t *ent ) {
line 3019
;3019:		int i, idnum, playercount = 0;
ADDRLP4 1164
CNSTI4 0
ASGNI4
line 3023
;3020:		int user_rate, /*user_snaps, user_timenudge,*/ user_maxfps, user_packetdup, user_maxpackets;
;3021:		char *s, userinfo[MAX_INFO_STRING], playername[MAX_QPATH];
;3022:		char buffer[32];
;3023:		int	numColorCodesUsed = 0, ii = 0;
ADDRLP4 100
CNSTI4 0
ASGNI4
ADDRLP4 32
CNSTI4 0
ASGNI4
line 3028
;3024:		gclient_t *cl;
;3025:		gentity_t *cl_ent;
;3026:
;3027:		//Start fetching data and print it to the console
;3028:		trap_SendServerCommand( ent-g_entities, va("print \"\n^3 ID NAME            RATE   MAXFPS  PACKETDUP  MAXPACKETS  AIMTYPE\n\""));
ADDRGP4 $1559
ARGP4
ADDRLP4 1168
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1168
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3029
;3029:		trap_SendServerCommand( ent-g_entities, va("print \"^3-----------------------------------------------------------------------\n\""));
ADDRGP4 $1560
ARGP4
ADDRLP4 1172
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1172
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3030
;3030:		for(i=0; i < level.numConnectedClients; i++ ) {
ADDRLP4 112
CNSTI4 0
ASGNI4
ADDRGP4 $1564
JUMPV
LABELV $1561
line 3032
;3031:
;3032:		idnum = level.sortedClients[i];
ADDRLP4 104
ADDRLP4 112
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+124
ADDP4
INDIRI4
ASGNI4
line 3033
;3033:		cl = &level.clients[idnum]; 
ADDRLP4 1140
CNSTI4 10828
ADDRLP4 104
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 3034
;3034:		cl_ent = g_entities + idnum;	
ADDRLP4 1144
CNSTI4 896
ADDRLP4 104
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 3036
;3035:
;3036:		if ( !( cl_ent->r.svFlags & SVF_BOT ) ) {
ADDRLP4 1144
INDIRP4
CNSTI4 424
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $1567
line 3038
;3037:
;3038:		++playercount;
ADDRLP4 1164
ADDRLP4 1164
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 3040
;3039:
;3040:		trap_GetUserinfo( idnum, userinfo, sizeof(userinfo) );
ADDRLP4 104
INDIRI4
ARGI4
ADDRLP4 116
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 3042
;3041:
;3042:		memset(&playername, 0, sizeof(playername));
ADDRLP4 36
ARGP4
CNSTI4 0
ARGI4
CNSTI4 64
ARGI4
ADDRGP4 memset
CALLP4
pop
line 3043
;3043:		numColorCodesUsed = FixedName(playername, cl->pers.netname, 15);//Fix names in console printing
ADDRLP4 36
ARGP4
ADDRLP4 1140
INDIRP4
CNSTI4 516
ADDP4
ARGP4
CNSTI4 15
ARGI4
ADDRLP4 1176
ADDRGP4 FixedName
CALLI4
ASGNI4
ADDRLP4 100
ADDRLP4 1176
INDIRI4
ASGNI4
line 3044
;3044:		memset(&buffer, 0, sizeof(buffer));
ADDRLP4 0
ARGP4
CNSTI4 0
ARGI4
CNSTI4 32
ARGI4
ADDRGP4 memset
CALLP4
pop
line 3045
;3045:		for ( ii = 0; (strlen(playername)-(numColorCodesUsed*2))+strlen(buffer) < 14; ii++ ) {
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRGP4 $1572
JUMPV
LABELV $1569
line 3046
;3046:			buffer[ii] = ' ';
ADDRLP4 32
INDIRI4
ADDRLP4 0
ADDP4
CNSTI1 32
ASGNI1
line 3047
;3047:		}
LABELV $1570
line 3045
ADDRLP4 32
ADDRLP4 32
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1572
ADDRLP4 36
ARGP4
ADDRLP4 1180
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 0
ARGP4
ADDRLP4 1184
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1180
INDIRI4
ADDRLP4 100
INDIRI4
CNSTI4 1
LSHI4
SUBI4
ADDRLP4 1184
INDIRI4
ADDI4
CNSTI4 14
LTI4 $1569
line 3049
;3048:
;3049:		s = Info_ValueForKey( userinfo, "rate" );//Get /rate
ADDRLP4 116
ARGP4
ADDRGP4 $1573
ARGP4
ADDRLP4 1188
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 108
ADDRLP4 1188
INDIRP4
ASGNP4
line 3050
;3050:		user_rate = atoi(s);
ADDRLP4 108
INDIRP4
ARGP4
ADDRLP4 1192
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1148
ADDRLP4 1192
INDIRI4
ASGNI4
line 3058
;3051:
;3052:		//s = Info_ValueForKey( userinfo, "snaps" );//Get /snaps
;3053:		//user_snaps = atoi(s);
;3054:
;3055:		//s = Info_ValueForKey( userinfo, "cl_timeNudge" );//Get /cl_timenudge
;3056:		//user_timenudge = atoi(s);
;3057:
;3058:		s = Info_ValueForKey( userinfo, "com_maxfps" );//Get /com_maxfps
ADDRLP4 116
ARGP4
ADDRGP4 $1574
ARGP4
ADDRLP4 1196
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 108
ADDRLP4 1196
INDIRP4
ASGNP4
line 3059
;3059:		user_maxfps = atoi(s);
ADDRLP4 108
INDIRP4
ARGP4
ADDRLP4 1200
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1152
ADDRLP4 1200
INDIRI4
ASGNI4
line 3061
;3060:
;3061:		s = Info_ValueForKey( userinfo, "cl_packetdup" );//Get /cl_packetdup
ADDRLP4 116
ARGP4
ADDRGP4 $1575
ARGP4
ADDRLP4 1204
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 108
ADDRLP4 1204
INDIRP4
ASGNP4
line 3062
;3062:		user_packetdup = atoi(s);
ADDRLP4 108
INDIRP4
ARGP4
ADDRLP4 1208
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1156
ADDRLP4 1208
INDIRI4
ASGNI4
line 3064
;3063:
;3064:		s = Info_ValueForKey( userinfo, "cl_maxpackets" );//Get /cl_maxpackets
ADDRLP4 116
ARGP4
ADDRGP4 $1576
ARGP4
ADDRLP4 1212
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 108
ADDRLP4 1212
INDIRP4
ASGNP4
line 3065
;3065:		user_maxpackets = atoi(s);
ADDRLP4 108
INDIRP4
ARGP4
ADDRLP4 1216
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1160
ADDRLP4 1216
INDIRI4
ASGNI4
line 3068
;3066:		
;3067:		//Print all the data for the client it was requested from.
;3068:		trap_SendServerCommand( ent-g_entities, va("print \"^7%2i  %s%s"S_COLOR_WHITE" %5i%7i%9i%13i%8i/%i\n\"",
ADDRGP4 $1577
ARGP4
ADDRLP4 104
INDIRI4
ARGI4
ADDRLP4 36
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1148
INDIRI4
ARGI4
ADDRLP4 1152
INDIRI4
ARGI4
ADDRLP4 1156
INDIRI4
ARGI4
ADDRLP4 1160
INDIRI4
ARGI4
ADDRLP4 1140
INDIRP4
CNSTI4 10224
ADDP4
INDIRI4
ARGI4
ADDRGP4 g_delagHitscan+12
INDIRI4
ARGI4
ADDRLP4 1220
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1220
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3071
;3069:		idnum, playername, buffer, user_rate, user_maxfps, user_packetdup, user_maxpackets, cl->sess.aimType, g_delagHitscan.integer));
;3070:
;3071:			}
LABELV $1567
line 3073
;3072:
;3073:		}
LABELV $1562
line 3030
ADDRLP4 112
ADDRLP4 112
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $1564
ADDRLP4 112
INDIRI4
ADDRGP4 level+120
INDIRU1
CVUI4 1
LTI4 $1561
line 3075
;3074:		//Print the bottom of the table, and total number of players connected
;3075:		trap_SendServerCommand( ent-g_entities, va("print \"^3---------------------------^7%3d ^3PLAYERS  -------------------------------\n\"", playercount));
ADDRGP4 $1579
ARGP4
ADDRLP4 1164
INDIRI4
ARGI4
ADDRLP4 1176
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1176
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3076
;3076:}
LABELV $1558
endproc cmd_players_f 1224 40
export cmd_speconly_f
proc cmd_speconly_f 8 8
line 3083
;3077:
;3078:/*
;3079:==================
;3080:  cmd_speconly_f
;3081:==================
;3082:*/
;3083:void cmd_speconly_f ( gentity_t *ent ) {
line 3084
;3084:	(ent->client->sess.speconly & 1)?(ent->client->sess.speconly &= ~1):(ent->client->sess.speconly |= 1);
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10220
ADDP4
INDIRI4
CNSTI4 1
BANDI4
CNSTI4 0
EQI4 $1582
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10220
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -2
BANDI4
ASGNI4
ADDRGP4 $1583
JUMPV
LABELV $1582
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10220
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 1
BORI4
ASGNI4
LABELV $1583
line 3086
;3085:
;3086:	if (ent->client->sess.speconly & 1) {
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10220
ADDP4
INDIRI4
CNSTI4 1
BANDI4
CNSTI4 0
EQI4 $1584
line 3087
;3087:		trap_SendServerCommand( ent-g_entities, "print \"^3You are now set to specatate only.\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1586
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3088
;3088:		return;
ADDRGP4 $1580
JUMPV
LABELV $1584
line 3090
;3089:	}
;3090:	trap_SendServerCommand( ent-g_entities, "print \"^3You are not set to only specatate.\"");
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1587
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3091
;3091:}
LABELV $1580
endproc cmd_speconly_f 8 8
export Cmd_motd_f
proc Cmd_motd_f 4 36
line 3098
;3092:
;3093:/*
;3094:==================
;3095:Cmd_motd_f
;3096:==================
;3097:*/
;3098:void Cmd_motd_f( gentity_t *ent ) {
line 3099
;3099:	trap_SendServerCommand( ent-g_entities, va("motd \"%s\" \"%s\" \"%s\" \"%s\" \"%s\" \"%s\" \"%s\" \"%s\"", 
ADDRGP4 $1589
ARGP4
ADDRGP4 sv_motd1+16
ARGP4
ADDRGP4 sv_motd2+16
ARGP4
ADDRGP4 sv_motd3+16
ARGP4
ADDRGP4 sv_motd4+16
ARGP4
ADDRGP4 sv_motd5+16
ARGP4
ADDRGP4 sv_motd6+16
ARGP4
ADDRGP4 sv_motd7+16
ARGP4
ADDRGP4 sv_motd8+16
ARGP4
ADDRLP4 0
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3108
;3100:		sv_motd1.string,
;3101:		sv_motd2.string,
;3102:		sv_motd3.string,
;3103:		sv_motd4.string,
;3104:		sv_motd5.string,
;3105:		sv_motd6.string,
;3106:		sv_motd7.string,
;3107:		sv_motd8.string) );
;3108:}
LABELV $1588
endproc Cmd_motd_f 4 36
export Cmd_Admin_f
proc Cmd_Admin_f 3284 24
line 3110
;3109:
;3110:void Cmd_Admin_f( gentity_t *ent ) {
line 3118
;3111:	char	arg1[MAX_TOKEN_CHARS], arg2[MAX_TOKEN_CHARS];
;3112:	char	/*clientpass[128],*/ cvarName[128], ip[24];
;3113:	char	*s, clientsinfo[MAX_INFO_STRING];
;3114://	char	*found, sanitizedname[128], sanitizedarg[128];
;3115:
;3116://	gclient_t	*cl;
;3117:
;3118:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 3119
;3119:	trap_Argv( 2, arg2, sizeof( arg2 ) );
CNSTI4 2
ARGI4
ADDRLP4 1024
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 3122
;3120:	
;3121:
;3122:	if ( strlen(g_AdminPassword.string) == 0 || !ent->client->sess.isAdmin ) {
ADDRGP4 g_AdminPassword+16
ARGP4
ADDRLP4 3228
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 3232
CNSTI4 0
ASGNI4
ADDRLP4 3228
INDIRI4
ADDRLP4 3232
INDIRI4
EQI4 $1602
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10216
ADDP4
INDIRI4
ADDRLP4 3232
INDIRI4
NEI4 $1599
LABELV $1602
line 3123
;3123:		trap_SendServerCommand( ent-g_entities, va("print \"Access denied.\n\"") );
ADDRGP4 $1603
ARGP4
ADDRLP4 3236
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3236
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3124
;3124:		return;
ADDRGP4 $1598
JUMPV
LABELV $1599
line 3127
;3125:	}
;3126:
;3127:	if ( Q_stricmp(arg1, "adminpassword") == 0 ||
ADDRLP4 0
ARGP4
ADDRGP4 $1606
ARGP4
ADDRLP4 3236
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3236
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1607
ARGP4
ADDRLP4 3240
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3240
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1608
ARGP4
ADDRLP4 3244
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3244
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1609
ARGP4
ADDRLP4 3248
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3248
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1610
ARGP4
ADDRLP4 3252
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3252
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1611
ARGP4
ADDRLP4 3256
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3256
INDIRI4
CNSTI4 0
EQI4 $1618
ADDRLP4 0
ARGP4
ADDRGP4 $1612
ARGP4
ADDRLP4 3260
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3260
INDIRI4
CNSTI4 0
NEI4 $1604
LABELV $1618
line 3131
;3128:		Q_stricmp(arg1, "rconpassword") == 0 ||
;3129:		Q_stricmp(arg1, "rcon") == 0 || Q_stricmp(arg1, "sets") == 0 ||
;3130:		Q_stricmp(arg1, "set") == 0 || Q_stricmp(arg1, "seta") == 0 ||
;3131:		Q_stricmp(arg1, "setu") == 0) {
line 3132
;3132:			trap_SendServerCommand( ent-g_entities, va("print \"Unavailable command.\n\"") );
ADDRGP4 $1619
ARGP4
ADDRLP4 3264
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3264
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3133
;3133:		return;
ADDRGP4 $1598
JUMPV
LABELV $1604
line 3136
;3134:	}
;3135:	
;3136:	trap_GetUserinfo( ent-g_entities, clientsinfo, sizeof(clientsinfo) );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2176
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 3138
;3137:
;3138:	s = Info_ValueForKey (clientsinfo, "ip");
ADDRLP4 2176
ARGP4
ADDRGP4 $1620
ARGP4
ADDRLP4 3264
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 3200
ADDRLP4 3264
INDIRP4
ASGNP4
line 3140
;3139:	//atoi(s);
;3140:	strcpy(ip, s);
ADDRLP4 3204
ARGP4
ADDRLP4 3200
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 3171
;3141:
;3142:	/* Moved to AdminPasswrd_f to remove the clientinfo cvar.
;3143:	s = Info_ValueForKey( clientsinfo, "adminPassword" );
;3144:	//atoi(s);
;3145:	strcpy(clientpass, s);
;3146:
;3147:	if ( Q_stricmp(g_AdminPassword.string, clientpass) == 0 ) {
;3148:		ent->client->sess.isAdmin = 1;
;3149:	} else {
;3150:		ent->client->sess.isAdmin = 0;
;3151:		trap_SendServerCommand( ent-g_entities, va("print \"Insufficient user privileges.\n\"") );
;3152:		return;
;3153:	}*/
;3154:	
;3155:	/*if ( Q_stricmp(arg1, "find") == 0 ) {
;3156:		SanitizeString(arg2, sanitizedarg);				
;3157:		for(i = 0; i < level.maxclients; i++) {
;3158:			cl = &level.clients[i];
;3159:			SanitizeString(cl->pers.netname, sanitizedname);
;3160:			Q_CleanStr(sanitizedname);
;3161:			found = strstr(sanitizedname, sanitizedarg);					
;3162:			if( found != 0) {
;3163:				trap_SendServerCommand( ent->client->ps.clientNum, va("print \"%s[%i]\n\"", sanitizedname, cl->ps.clientNum ));
;3164:			}
;3165:		}
;3166:		return;
;3167:	} this just finds a player from a partial search and then prints out the slot number along with the full name */
;3168:
;3169:
;3170:	
;3171:	Com_sprintf(cvarName, sizeof(cvarName), "disable_admin_%s", arg1);
ADDRLP4 2048
ARGP4
CNSTI4 128
ARGI4
ADDRGP4 $1621
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 3174
;3172:
;3173:
;3174:	if ( !trap_Cvar_VariableIntegerValue(cvarName) ) { //pain-in-the-ass
ADDRLP4 2048
ARGP4
ADDRLP4 3268
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 3268
INDIRI4
CNSTI4 0
NEI4 $1622
line 3175
;3175:		trap_SendConsoleCommand( EXEC_NOW, va("%s %s", arg1, arg2) );
ADDRGP4 $895
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1024
ARGP4
ADDRLP4 3272
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 0
ARGI4
ADDRLP4 3272
INDIRP4
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 3178
;3176:		//G_Printf("Admin command ([%i][%i]%s): %s %s\n", ent->client->ps.clientNum, ent->client->pers.netname, arg1, arg2 );
;3177:		//G_LogPrintF prints to console also
;3178:		G_LogPrintf("Admin command ([%i][%s]%s): %s %s\n", ent-g_entities, ip, ent->client->pers.netname, arg1, arg2 ); //For server log
ADDRGP4 $1624
ARGP4
ADDRLP4 3276
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3276
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3204
ARGP4
ADDRLP4 3280
CNSTI4 516
ASGNI4
ADDRLP4 3276
INDIRP4
ADDRLP4 3280
INDIRI4
ADDP4
INDIRP4
ADDRLP4 3280
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1024
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 3180
;3179:		
;3180:	} else {			
ADDRGP4 $1623
JUMPV
LABELV $1622
line 3181
;3181:		trap_SendServerCommand( ent-g_entities, va("print \"Admin: %s can not be changed.\n\"", arg1) );
ADDRGP4 $1625
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 3272
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 3272
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3182
;3182:		return;
LABELV $1623
line 3185
;3183:	}
;3184:
;3185:}
LABELV $1598
endproc Cmd_Admin_f 3284 24
export Cmd_AdminPassword_f
proc Cmd_AdminPassword_f 2088 12
line 3187
;3186:
;3187:void Cmd_AdminPassword_f( gentity_t *ent ) {
line 3191
;3188:	char	arg1[MAX_TOKEN_CHARS];
;3189:	char	*s, ip[24], clientsinfo[MAX_INFO_STRING];
;3190:
;3191:	if ( strlen(g_AdminPassword.string) == 0 || !ent->client ) {
ADDRGP4 g_AdminPassword+16
ARGP4
ADDRLP4 2076
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 2076
INDIRI4
CNSTI4 0
EQI4 $1630
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $1627
LABELV $1630
line 3192
;3192:		return;
ADDRGP4 $1626
JUMPV
LABELV $1627
line 3195
;3193:	}
;3194:
;3195:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 3197
;3196:
;3197:	trap_GetUserinfo( ent-g_entities, clientsinfo, sizeof(clientsinfo) );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 1024
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 3198
;3198:	s = Info_ValueForKey (clientsinfo, "ip");
ADDRLP4 1024
ARGP4
ADDRGP4 $1620
ARGP4
ADDRLP4 2080
ADDRGP4 Info_ValueForKey
CALLP4
ASGNP4
ADDRLP4 2048
ADDRLP4 2080
INDIRP4
ASGNP4
line 3199
;3199:	strcpy(ip, s);
ADDRLP4 2052
ARGP4
ADDRLP4 2048
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 3201
;3200:
;3201:	G_LogPrintf("Admin Login Attempt ([%i][%s])\n", ent-g_entities, ip); //For server log
ADDRGP4 $1631
ARGP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRLP4 2052
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 3203
;3202:
;3203:	if ( Q_stricmp(g_AdminPassword.string, arg1) == 0 ) {
ADDRGP4 g_AdminPassword+16
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 2084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2084
INDIRI4
CNSTI4 0
NEI4 $1632
line 3204
;3204:		ent->client->sess.isAdmin = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10216
ADDP4
CNSTI4 1
ASGNI4
line 3205
;3205:	} else {
ADDRGP4 $1633
JUMPV
LABELV $1632
line 3206
;3206:		ent->client->sess.isAdmin = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10216
ADDP4
CNSTI4 0
ASGNI4
line 3207
;3207:	}
LABELV $1633
line 3208
;3208:}
LABELV $1626
endproc Cmd_AdminPassword_f 2088 12
export Cmd_LoadPos_f
proc Cmd_LoadPos_f 20 16
line 3215
;3209:
;3210:/*
;3211:=================
;3212:Save/Load
;3213:=================
;3214:*/
;3215:void Cmd_LoadPos_f( gentity_t *ent, char *arg1 ) {
line 3217
;3216:
;3217:	if (g_allowSave.integer == 0)
ADDRGP4 g_allowSave+12
INDIRI4
CNSTI4 0
NEI4 $1636
line 3218
;3218:		return;
ADDRGP4 $1635
JUMPV
LABELV $1636
line 3219
;3219:	if (ent->health <= 0)
ADDRFP4 0
INDIRP4
CNSTI4 732
ADDP4
INDIRI4
CNSTI4 0
GTI4 $1639
line 3220
;3220:		return;
ADDRGP4 $1635
JUMPV
LABELV $1639
line 3221
;3221:	if (level.match_timeout == 1)
ADDRGP4 level+10800
INDIRU1
CVUI4 1
CNSTI4 1
NEI4 $1641
line 3222
;3222:		return;
ADDRGP4 $1635
JUMPV
LABELV $1641
line 3223
;3223:	if ( !Q_stricmp(arg1, "save") ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $1646
ARGP4
ADDRLP4 0
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $1644
line 3224
;3224:		VectorCopy( ent->client->ps.viewangles, ent->client->pers.load.angles );
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 4
INDIRP4
CNSTI4 10168
ADDP4
ADDRLP4 4
INDIRP4
CNSTI4 152
ADDP4
INDIRB
ASGNB 12
line 3225
;3225:		VectorCopy( ent->client->ps.origin, ent->client->pers.load.origin );
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 10156
ADDP4
ADDRLP4 8
INDIRP4
CNSTI4 20
ADDP4
INDIRB
ASGNB 12
line 3226
;3226:		ent->client->pers.load.hasSaved = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10180
ADDP4
CNSTI4 1
ASGNI4
line 3227
;3227:	}
LABELV $1644
line 3228
;3228:	if ( !Q_stricmp(arg1, "load") && ent->client->pers.load.hasSaved ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $1649
ARGP4
ADDRLP4 4
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 8
CNSTI4 0
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $1647
ADDRFP4 0
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10180
ADDP4
INDIRI4
ADDRLP4 8
INDIRI4
EQI4 $1647
line 3229
;3229:		TeleportPlayer( ent, ent->client->pers.load.origin, ent->client->pers.load.angles, qfalse );
ADDRLP4 12
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 16
ADDRLP4 12
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
ASGNP4
ADDRLP4 16
INDIRP4
CNSTI4 10156
ADDP4
ARGP4
ADDRLP4 16
INDIRP4
CNSTI4 10168
ADDP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 TeleportPlayer
CALLV
pop
line 3230
;3230:	}
LABELV $1647
line 3232
;3231:
;3232:}
LABELV $1635
endproc Cmd_LoadPos_f 20 16
export ClientCommand
proc ClientCommand 1224 16
line 3239
;3233:
;3234:/*
;3235:=================
;3236:ClientCommand
;3237:=================
;3238:*/
;3239:void ClientCommand( int clientNum ) {
line 3243
;3240:	gentity_t *ent;
;3241:	char	cmd[MAX_TOKEN_CHARS];
;3242:
;3243:	ent = g_entities + clientNum;
ADDRLP4 1024
CNSTI4 896
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 3244
;3244:	if ( !ent->client ) {
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $1651
line 3245
;3245:		return;		// not fully in game yet
ADDRGP4 $1650
JUMPV
LABELV $1651
line 3249
;3246:	}
;3247:
;3248:
;3249:	trap_Argv( 0, cmd, sizeof( cmd ) );
CNSTI4 0
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 3251
;3250:
;3251:	if (Q_stricmp (cmd, "say") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1655
ARGP4
ADDRLP4 1028
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $1653
line 3252
;3252:		if ( !ent->client->pers.altConsoleSayMode ) {
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10184
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1656
line 3253
;3253:			Cmd_Say_f (ent, SAY_ALL, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1032
CNSTI4 0
ASGNI4
ADDRLP4 1032
INDIRI4
ARGI4
ADDRLP4 1032
INDIRI4
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 3254
;3254:		} else {
ADDRGP4 $1650
JUMPV
LABELV $1656
line 3255
;3255:			Cmd_Say_f (ent, SAY_TEAM, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 3256
;3256:		}
line 3257
;3257:		return;
ADDRGP4 $1650
JUMPV
LABELV $1653
line 3259
;3258:	}
;3259:	if (Q_stricmp (cmd, "say_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1660
ARGP4
ADDRLP4 1032
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
NEI4 $1658
line 3260
;3260:		if ( !ent->client->pers.altConsoleSayMode ) {
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10184
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1661
line 3261
;3261:			Cmd_Say_f (ent, SAY_TEAM, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 3262
;3262:		} else {
ADDRGP4 $1650
JUMPV
LABELV $1661
line 3263
;3263:			Cmd_Say_f (ent, SAY_ALL, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1036
CNSTI4 0
ASGNI4
ADDRLP4 1036
INDIRI4
ARGI4
ADDRLP4 1036
INDIRI4
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 3264
;3264:		}
line 3265
;3265:		return;
ADDRGP4 $1650
JUMPV
LABELV $1658
line 3267
;3266:	}
;3267:	if (Q_stricmp (cmd, "tell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1665
ARGP4
ADDRLP4 1036
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 0
NEI4 $1663
line 3268
;3268:		Cmd_Tell_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Tell_f
CALLV
pop
line 3269
;3269:		return;
ADDRGP4 $1650
JUMPV
LABELV $1663
line 3271
;3270:	}
;3271:	if (Q_stricmp (cmd, "vsay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1668
ARGP4
ADDRLP4 1040
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 0
NEI4 $1666
line 3272
;3272:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1044
CNSTI4 0
ASGNI4
ADDRLP4 1044
INDIRI4
ARGI4
ADDRLP4 1044
INDIRI4
ARGI4
ADDRLP4 1044
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 3273
;3273:		return;
ADDRGP4 $1650
JUMPV
LABELV $1666
line 3275
;3274:	}
;3275:	if (Q_stricmp (cmd, "vsay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1671
ARGP4
ADDRLP4 1044
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1044
INDIRI4
CNSTI4 0
NEI4 $1669
line 3276
;3276:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 1048
CNSTI4 0
ASGNI4
ADDRLP4 1048
INDIRI4
ARGI4
ADDRLP4 1048
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 3277
;3277:		return;
ADDRGP4 $1650
JUMPV
LABELV $1669
line 3279
;3278:	}
;3279:	if (Q_stricmp (cmd, "vtell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $646
ARGP4
ADDRLP4 1048
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1048
INDIRI4
CNSTI4 0
NEI4 $1672
line 3280
;3280:		Cmd_VoiceTell_f ( ent, qfalse );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 3281
;3281:		return;
ADDRGP4 $1650
JUMPV
LABELV $1672
line 3283
;3282:	}
;3283:	if (Q_stricmp (cmd, "vosay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1676
ARGP4
ADDRLP4 1052
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 0
NEI4 $1674
line 3284
;3284:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1056
CNSTI4 0
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1056
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 3285
;3285:		return;
ADDRGP4 $1650
JUMPV
LABELV $1674
line 3287
;3286:	}
;3287:	if (Q_stricmp (cmd, "vosay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1679
ARGP4
ADDRLP4 1056
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1056
INDIRI4
CNSTI4 0
NEI4 $1677
line 3288
;3288:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1060
CNSTI4 1
ASGNI4
ADDRLP4 1060
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 1060
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 3289
;3289:		return;
ADDRGP4 $1650
JUMPV
LABELV $1677
line 3291
;3290:	}
;3291:	if (Q_stricmp (cmd, "votell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1682
ARGP4
ADDRLP4 1060
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1060
INDIRI4
CNSTI4 0
NEI4 $1680
line 3292
;3292:		Cmd_VoiceTell_f ( ent, qtrue );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 3293
;3293:		return;
ADDRGP4 $1650
JUMPV
LABELV $1680
line 3295
;3294:	}
;3295:	if (Q_stricmp (cmd, "vtaunt") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1685
ARGP4
ADDRLP4 1064
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1064
INDIRI4
CNSTI4 0
NEI4 $1683
line 3296
;3296:		Cmd_VoiceTaunt_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_VoiceTaunt_f
CALLV
pop
line 3297
;3297:		return;
ADDRGP4 $1650
JUMPV
LABELV $1683
line 3299
;3298:	}
;3299:	if (Q_stricmp (cmd, "score") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $333
ARGP4
ADDRLP4 1068
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1068
INDIRI4
CNSTI4 0
NEI4 $1686
line 3300
;3300:		Cmd_Score_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Score_f
CALLV
pop
line 3301
;3301:		return;
ADDRGP4 $1650
JUMPV
LABELV $1686
line 3303
;3302:	}
;3303:	if (Q_stricmp (cmd, "mutestatus") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1690
ARGP4
ADDRLP4 1072
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1072
INDIRI4
CNSTI4 0
NEI4 $1688
line 3304
;3304:		Cmd_MuteStatus_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_MuteStatus_f
CALLV
pop
line 3305
;3305:		return;
ADDRGP4 $1650
JUMPV
LABELV $1688
line 3307
;3306:	}
;3307:	if (Q_stricmp (cmd, "callvote") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1693
ARGP4
ADDRLP4 1076
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1076
INDIRI4
CNSTI4 0
NEI4 $1691
line 3308
;3308:		Cmd_CallVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallVote_f
CALLV
pop
line 3309
;3309:		return;
ADDRGP4 $1650
JUMPV
LABELV $1691
line 3311
;3310:	}
;3311:	if (Q_stricmp (cmd, "vote") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1696
ARGP4
ADDRLP4 1080
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1080
INDIRI4
CNSTI4 0
NEI4 $1694
line 3312
;3312:		if ( level.voteTime && level.voteYes != 128 && !(ent->client->ps.eFlags & EF_VOTED) ) {
ADDRLP4 1084
CNSTI4 0
ASGNI4
ADDRGP4 level+2444
INDIRI4
ADDRLP4 1084
INDIRI4
EQI4 $1697
ADDRGP4 level+2452
INDIRU1
CVUI4 1
CNSTI4 128
EQI4 $1697
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
INDIRI4
CNSTI4 16384
BANDI4
ADDRLP4 1084
INDIRI4
NEI4 $1697
line 3313
;3313:			Cmd_Vote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Vote_f
CALLV
pop
line 3314
;3314:			return;
ADDRGP4 $1650
JUMPV
LABELV $1697
line 3315
;3315:		} else if ( ((level.teamVoteTime[TEAM_RED-1] && level.teamVoteYes[TEAM_RED-1] != 128 && ent->client->sess.sessionTeam == TEAM_RED)
ADDRGP4 level+4504
INDIRI4
CNSTI4 0
EQI4 $1711
ADDRGP4 level+4512
INDIRI4
CNSTI4 128
EQI4 $1711
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 1
EQI4 $1709
LABELV $1711
ADDRGP4 level+4504+4
INDIRI4
CNSTI4 0
EQI4 $1701
ADDRGP4 level+4512+4
INDIRI4
CNSTI4 128
EQI4 $1701
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1701
LABELV $1709
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 104
ADDP4
INDIRI4
CNSTI4 524288
BANDI4
CNSTI4 0
NEI4 $1701
line 3317
;3316:				|| ( level.teamVoteTime[TEAM_BLUE-1] && level.teamVoteYes[TEAM_BLUE-1] != 128  && ent->client->sess.sessionTeam == TEAM_BLUE)) &&
;3317:				!(ent->client->ps.eFlags & EF_TEAMVOTED)) {
line 3318
;3318:					Cmd_TeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamVote_f
CALLV
pop
line 3319
;3319:					return;
ADDRGP4 $1650
JUMPV
LABELV $1701
line 3320
;3320:		} else {
line 3321
;3321:			trap_SendServerCommand( ent-g_entities, "print \"No vote in progress.\n\"" );
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 $1122
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 3322
;3322:			return;
ADDRGP4 $1650
JUMPV
LABELV $1694
line 3326
;3323:		}
;3324:		
;3325:	}
;3326:	if (Q_stricmp (cmd, "admin") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1714
ARGP4
ADDRLP4 1084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1084
INDIRI4
CNSTI4 0
NEI4 $1712
line 3327
;3327:		Cmd_Admin_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Admin_f
CALLV
pop
line 3328
;3328:		return;
ADDRGP4 $1650
JUMPV
LABELV $1712
line 3330
;3329:	}
;3330:	if (Q_stricmp (cmd, "adminPassword") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1717
ARGP4
ADDRLP4 1088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1088
INDIRI4
CNSTI4 0
NEI4 $1715
line 3331
;3331:		Cmd_AdminPassword_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_AdminPassword_f
CALLV
pop
line 3332
;3332:		return;
ADDRGP4 $1650
JUMPV
LABELV $1715
line 3334
;3333:	}
;3334:	if (Q_stricmp (cmd, "players") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1720
ARGP4
ADDRLP4 1092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1092
INDIRI4
CNSTI4 0
NEI4 $1718
line 3335
;3335:		cmd_players_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 cmd_players_f
CALLV
pop
line 3336
;3336:		return;
ADDRGP4 $1650
JUMPV
LABELV $1718
line 3338
;3337:	}
;3338:	if (Q_stricmp (cmd, "speconly") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1723
ARGP4
ADDRLP4 1096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1096
INDIRI4
CNSTI4 0
NEI4 $1721
line 3339
;3339:		cmd_speconly_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 cmd_speconly_f
CALLV
pop
line 3340
;3340:		return;
ADDRGP4 $1650
JUMPV
LABELV $1721
line 3342
;3341:	}
;3342:	if (Q_stricmp (cmd, "rws") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1726
ARGP4
ADDRLP4 1100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1100
INDIRI4
CNSTI4 0
NEI4 $1724
line 3344
;3343:
;3344:		if ( level.intermissiontime ) {
ADDRGP4 level+9160
INDIRI4
CNSTI4 0
EQI4 $1727
line 3345
;3345:			return;
ADDRGP4 $1650
JUMPV
LABELV $1727
line 3348
;3346:		}
;3347:
;3348:		Cmd_Weapon_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Weapon_f
CALLV
pop
line 3349
;3349:		return;
ADDRGP4 $1650
JUMPV
LABELV $1724
line 3352
;3350:	}
;3351:
;3352:	if (Q_stricmp (cmd, "stats") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1732
ARGP4
ADDRLP4 1104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1730
line 3353
;3353:		Cmd_Stats_f( ent-g_entities );
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 896
DIVI4
ARGI4
ADDRGP4 Cmd_Stats_f
CALLV
pop
line 3354
;3354:		return;
ADDRGP4 $1650
JUMPV
LABELV $1730
line 3357
;3355:	}
;3356:
;3357:	if (Q_stricmp (cmd, "quickmodes") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1735
ARGP4
ADDRLP4 1108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
NEI4 $1733
line 3358
;3358:		Cmd_Quickmodes_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Quickmodes_f
CALLV
pop
line 3359
;3359:		return;
ADDRGP4 $1650
JUMPV
LABELV $1733
line 3362
;3360:	}
;3361:
;3362:	if (Q_stricmp (cmd, "teams") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1738
ARGP4
ADDRLP4 1112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1112
INDIRI4
CNSTI4 0
NEI4 $1736
line 3363
;3363:		Cmd_Teams_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Teams_f
CALLV
pop
line 3364
;3364:		return;
ADDRGP4 $1650
JUMPV
LABELV $1736
line 3367
;3365:	}
;3366:
;3367:	if (Q_stricmp (cmd, "lock") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1741
ARGP4
ADDRLP4 1116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1116
INDIRI4
CNSTI4 0
NEI4 $1739
line 3368
;3368:		if (level.intermissiontime || ent->client->sess.sessionTeam == TEAM_SPECTATOR || level.team_Locked[ent->client->sess.sessionTeam] || !g_allowLockedTeams.integer ) {
ADDRLP4 1120
CNSTI4 0
ASGNI4
ADDRGP4 level+9160
INDIRI4
ADDRLP4 1120
INDIRI4
NEI4 $1749
ADDRLP4 1124
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 3
EQI4 $1749
ADDRLP4 1124
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
INDIRI4
ADDRLP4 1120
INDIRI4
NEI4 $1749
ADDRGP4 g_allowLockedTeams+12
INDIRI4
ADDRLP4 1120
INDIRI4
NEI4 $1742
LABELV $1749
line 3370
;3369:			//Don't spam it in intermission, team is spectator, already locked, or not allowed to lock
;3370:			return;
ADDRGP4 $1650
JUMPV
LABELV $1742
line 3372
;3371:		}
;3372:		level.team_Locked[ent->client->sess.sessionTeam] = qtrue;
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
CNSTI4 1
ASGNI4
line 3373
;3373:		return;
ADDRGP4 $1650
JUMPV
LABELV $1739
line 3376
;3374:	}
;3375:
;3376:	if (Q_stricmp (cmd, "unlock") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1753
ARGP4
ADDRLP4 1120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1120
INDIRI4
CNSTI4 0
NEI4 $1751
line 3377
;3377:		if (level.intermissiontime || ent->client->sess.sessionTeam == TEAM_SPECTATOR || !level.team_Locked[ent->client->sess.sessionTeam] ) {
ADDRLP4 1124
CNSTI4 0
ASGNI4
ADDRGP4 level+9160
INDIRI4
ADDRLP4 1124
INDIRI4
NEI4 $1759
ADDRLP4 1128
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 3
EQI4 $1759
ADDRLP4 1128
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
INDIRI4
ADDRLP4 1124
INDIRI4
NEI4 $1754
LABELV $1759
line 3379
;3378:			//Don't spam it in intermission, team is spectator, or isn't locked
;3379:			return;
ADDRGP4 $1650
JUMPV
LABELV $1754
line 3381
;3380:		}
;3381:		level.team_Locked[ent->client->sess.sessionTeam] = qfalse;
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10188
ADDP4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+10864
ADDP4
CNSTI4 0
ASGNI4
line 3382
;3382:		return;
ADDRGP4 $1650
JUMPV
LABELV $1751
line 3385
;3383:	}
;3384:
;3385:	if (Q_stricmp (cmd, "motd") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1763
ARGP4
ADDRLP4 1124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 0
NEI4 $1761
line 3386
;3386:		Cmd_motd_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_motd_f
CALLV
pop
line 3387
;3387:		return;
ADDRGP4 $1650
JUMPV
LABELV $1761
line 3390
;3388:	}
;3389:
;3390:	if ( Q_stricmp(cmd, "altConsoleSayMode") == 0 ) {
ADDRLP4 0
ARGP4
ADDRGP4 $1766
ARGP4
ADDRLP4 1128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 0
NEI4 $1764
line 3391
;3391:		ent->client->pers.altConsoleSayMode?(ent->client->pers.altConsoleSayMode = qfalse):(ent->client->pers.altConsoleSayMode = qtrue);
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10184
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1768
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10184
ADDP4
CNSTI4 0
ASGNI4
ADDRGP4 $1769
JUMPV
LABELV $1768
ADDRLP4 1024
INDIRP4
CNSTI4 516
ADDP4
INDIRP4
CNSTI4 10184
ADDP4
CNSTI4 1
ASGNI4
LABELV $1769
line 3392
;3392:		return;
ADDRGP4 $1650
JUMPV
LABELV $1764
line 3430
;3393:	}
;3394:
;3395:
;3396:
;3397:	/*if ( Q_stricmp( cmd, "dbgrws") == 0 ) {
;3398:		if ( !ent->client->pers.dbgrws ) {
;3399:			ent->client->pers.dbgrws = qtrue;
;3400:		} else {
;3401:			ent->client->pers.dbgrws = qfalse;
;3402:		}
;3403:	}*/
;3404:
;3405:	/*if ( Q_stricmp( cmd, "dbgflags" ) == 0 ) {
;3406:		int i = 0;
;3407:		int	j = 0;
;3408:
;3409:		if ( !level.dbgflags ) {
;3410:			level.dbgflags = qtrue;
;3411:		} else {
;3412:			level.dbgflags = qfalse;
;3413:		}
;3414:		//I'll probably have to add to this to add all kinds of spew about the flag.
;3415:		for ( i = 0; i < MAX_GENTITIES; i++ ) {
;3416:			if ( level.gentities[i].item && level.gentities[i].item->giType == IT_TEAM &&
;3417:				( level.gentities[i].item->giTag == PW_REDFLAG || level.gentities[i].item->giTag == PW_BLUEFLAG ) ) {
;3418:				j++;
;3419:			}
;3420:			if ( j == 2 ) {
;3421:				break;
;3422:			}
;3423:		}
;3424:
;3425:		trap_SendServerCommand( ent-g_entities, va("print \"DBG:Flag: Found %i flags.\n\"", j) );
;3426:	}*/
;3427:
;3428:
;3429:	// ignore all other commands when at intermission
;3430:	if (level.intermissiontime) {
ADDRGP4 level+9160
INDIRI4
CNSTI4 0
EQI4 $1770
line 3431
;3431:		Cmd_Say_f (ent, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 3432
;3432:		return;
ADDRGP4 $1650
JUMPV
LABELV $1770
line 3435
;3433:	}
;3434:
;3435:	if (Q_stricmp (cmd, "give") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1775
ARGP4
ADDRLP4 1132
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1132
INDIRI4
CNSTI4 0
NEI4 $1773
line 3436
;3436:		Cmd_Give_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Give_f
CALLV
pop
ADDRGP4 $1774
JUMPV
LABELV $1773
line 3437
;3437:	else if (Q_stricmp (cmd, "god") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1778
ARGP4
ADDRLP4 1136
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1136
INDIRI4
CNSTI4 0
NEI4 $1776
line 3438
;3438:		Cmd_God_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_God_f
CALLV
pop
ADDRGP4 $1777
JUMPV
LABELV $1776
line 3439
;3439:	else if (Q_stricmp (cmd, "notarget") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1781
ARGP4
ADDRLP4 1140
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1140
INDIRI4
CNSTI4 0
NEI4 $1779
line 3440
;3440:		Cmd_Notarget_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Notarget_f
CALLV
pop
ADDRGP4 $1780
JUMPV
LABELV $1779
line 3441
;3441:	else if (Q_stricmp (cmd, "noclip") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1784
ARGP4
ADDRLP4 1144
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1144
INDIRI4
CNSTI4 0
NEI4 $1782
line 3442
;3442:		Cmd_Noclip_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Noclip_f
CALLV
pop
ADDRGP4 $1783
JUMPV
LABELV $1782
line 3443
;3443:	else if (Q_stricmp (cmd, "kill") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1787
ARGP4
ADDRLP4 1148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
NEI4 $1785
line 3444
;3444:		Cmd_Kill_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Kill_f
CALLV
pop
ADDRGP4 $1786
JUMPV
LABELV $1785
line 3445
;3445:	else if (Q_stricmp (cmd, "teamtask") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $287
ARGP4
ADDRLP4 1152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
NEI4 $1788
line 3446
;3446:		Cmd_TeamTask_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamTask_f
CALLV
pop
ADDRGP4 $1789
JUMPV
LABELV $1788
line 3447
;3447:	else if (Q_stricmp (cmd, "levelshot") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1792
ARGP4
ADDRLP4 1156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1156
INDIRI4
CNSTI4 0
NEI4 $1790
line 3448
;3448:		Cmd_LevelShot_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_LevelShot_f
CALLV
pop
ADDRGP4 $1791
JUMPV
LABELV $1790
line 3449
;3449:	else if (Q_stricmp (cmd, "follow") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1795
ARGP4
ADDRLP4 1160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1160
INDIRI4
CNSTI4 0
NEI4 $1793
line 3450
;3450:		Cmd_Follow_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Follow_f
CALLV
pop
ADDRGP4 $1794
JUMPV
LABELV $1793
line 3451
;3451:	else if (Q_stricmp (cmd, "follownext") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1798
ARGP4
ADDRLP4 1164
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1164
INDIRI4
CNSTI4 0
NEI4 $1796
line 3452
;3452:		Cmd_FollowCycle_f (ent, 1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1797
JUMPV
LABELV $1796
line 3453
;3453:	else if (Q_stricmp (cmd, "followprev") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1801
ARGP4
ADDRLP4 1168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1168
INDIRI4
CNSTI4 0
NEI4 $1799
line 3454
;3454:		Cmd_FollowCycle_f (ent, -1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 -1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1800
JUMPV
LABELV $1799
line 3455
;3455:	else if (Q_stricmp (cmd, "team") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1804
ARGP4
ADDRLP4 1172
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1172
INDIRI4
CNSTI4 0
NEI4 $1802
line 3456
;3456:		Cmd_Team_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Team_f
CALLV
pop
ADDRGP4 $1803
JUMPV
LABELV $1802
line 3457
;3457:	else if (Q_stricmp (cmd, "where") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1807
ARGP4
ADDRLP4 1176
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1176
INDIRI4
CNSTI4 0
NEI4 $1805
line 3458
;3458:		Cmd_Where_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Where_f
CALLV
pop
ADDRGP4 $1806
JUMPV
LABELV $1805
line 3459
;3459:	else if (Q_stricmp (cmd, "callteamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1810
ARGP4
ADDRLP4 1180
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1180
INDIRI4
CNSTI4 0
NEI4 $1808
line 3460
;3460:		Cmd_CallTeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallTeamVote_f
CALLV
pop
ADDRGP4 $1809
JUMPV
LABELV $1808
line 3461
;3461:	else if (Q_stricmp (cmd, "teamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1813
ARGP4
ADDRLP4 1184
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1184
INDIRI4
CNSTI4 0
NEI4 $1811
line 3462
;3462:		Cmd_TeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamVote_f
CALLV
pop
ADDRGP4 $1812
JUMPV
LABELV $1811
line 3463
;3463:	else if (Q_stricmp (cmd, "gc") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1816
ARGP4
ADDRLP4 1188
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1188
INDIRI4
CNSTI4 0
NEI4 $1814
line 3464
;3464:		Cmd_GameCommand_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_GameCommand_f
CALLV
pop
ADDRGP4 $1815
JUMPV
LABELV $1814
line 3465
;3465:	else if (Q_stricmp (cmd, "setviewpos") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1819
ARGP4
ADDRLP4 1192
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1192
INDIRI4
CNSTI4 0
NEI4 $1817
line 3466
;3466:		Cmd_SetViewpos_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_SetViewpos_f
CALLV
pop
ADDRGP4 $1818
JUMPV
LABELV $1817
line 3468
;3467:	//Ready!!
;3468:	else if (Q_stricmp (cmd, "ready") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1822
ARGP4
ADDRLP4 1196
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1196
INDIRI4
CNSTI4 0
NEI4 $1820
line 3469
;3469:		Cmd_Ready_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Ready_f
CALLV
pop
ADDRGP4 $1821
JUMPV
LABELV $1820
line 3471
;3470:	//Notready!!
;3471:	else if (Q_stricmp (cmd, "notready") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1825
ARGP4
ADDRLP4 1200
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1200
INDIRI4
CNSTI4 0
NEI4 $1823
line 3472
;3472:		Cmd_Notready_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Notready_f
CALLV
pop
ADDRGP4 $1824
JUMPV
LABELV $1823
line 3473
;3473:	else if (Q_stricmp (cmd, "tossflag") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1828
ARGP4
ADDRLP4 1204
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1204
INDIRI4
CNSTI4 0
NEI4 $1826
line 3474
;3474:		Cmd_TossFlag_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TossFlag_f
CALLV
pop
ADDRGP4 $1827
JUMPV
LABELV $1826
line 3475
;3475:	else if (Q_stricmp (cmd, "maplist") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1831
ARGP4
ADDRLP4 1208
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1208
INDIRI4
CNSTI4 0
NEI4 $1829
line 3476
;3476:		Cmd_MapList_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_MapList_f
CALLV
pop
ADDRGP4 $1830
JUMPV
LABELV $1829
line 3477
;3477:	else if (Q_stricmp (cmd, "save") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1646
ARGP4
ADDRLP4 1212
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1212
INDIRI4
CNSTI4 0
NEI4 $1832
line 3478
;3478:		Cmd_LoadPos_f( ent, cmd );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 Cmd_LoadPos_f
CALLV
pop
ADDRGP4 $1833
JUMPV
LABELV $1832
line 3479
;3479:	else if (Q_stricmp (cmd, "load") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1649
ARGP4
ADDRLP4 1216
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1216
INDIRI4
CNSTI4 0
NEI4 $1834
line 3480
;3480:		Cmd_LoadPos_f( ent, cmd );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 Cmd_LoadPos_f
CALLV
pop
ADDRGP4 $1835
JUMPV
LABELV $1834
line 3487
;3481:
;3482:	//else if (Q_stricmp (cmd, "WeaponSwitch") == 0)
;3483:	//	Cmd_WeaponSwitch_f( ent );
;3484:	//else if (Q_stricmp (cmd, "timeout") == 0)
;3485:	//	Cmd_Timeout_f( void );
;3486:	else
;3487:		trap_SendServerCommand( clientNum, va("print \"unknown cmd %s\n\"", cmd ) );
ADDRGP4 $1836
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1220
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1220
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
LABELV $1835
LABELV $1833
LABELV $1830
LABELV $1827
LABELV $1824
LABELV $1821
LABELV $1818
LABELV $1815
LABELV $1812
LABELV $1809
LABELV $1806
LABELV $1803
LABELV $1800
LABELV $1797
LABELV $1794
LABELV $1791
LABELV $1789
LABELV $1786
LABELV $1783
LABELV $1780
LABELV $1777
LABELV $1774
line 3488
;3488:}
LABELV $1650
endproc ClientCommand 1224 16
import trap_SnapVector
import trap_GeneticParentsAndChildSelection
import trap_BotResetWeaponState
import trap_BotFreeWeaponState
import trap_BotAllocWeaponState
import trap_BotLoadWeaponWeights
import trap_BotGetWeaponInfo
import trap_BotChooseBestFightWeapon
import trap_BotAddAvoidSpot
import trap_BotInitMoveState
import trap_BotFreeMoveState
import trap_BotAllocMoveState
import trap_BotPredictVisiblePosition
import trap_BotMovementViewTarget
import trap_BotReachabilityArea
import trap_BotResetLastAvoidReach
import trap_BotResetAvoidReach
import trap_BotMoveInDirection
import trap_BotMoveToGoal
import trap_BotResetMoveState
import trap_BotFreeGoalState
import trap_BotAllocGoalState
import trap_BotMutateGoalFuzzyLogic
import trap_BotSaveGoalFuzzyLogic
import trap_BotInterbreedGoalFuzzyLogic
import trap_BotFreeItemWeights
import trap_BotLoadItemWeights
import trap_BotUpdateEntityItems
import trap_BotInitLevelItems
import trap_BotSetAvoidGoalTime
import trap_BotAvoidGoalTime
import trap_BotGetLevelItemGoal
import trap_BotGetMapLocationGoal
import trap_BotGetNextCampSpotGoal
import trap_BotItemGoalInVisButNotVisible
import trap_BotTouchingGoal
import trap_BotChooseNBGItem
import trap_BotChooseLTGItem
import trap_BotGetSecondGoal
import trap_BotGetTopGoal
import trap_BotGoalName
import trap_BotDumpGoalStack
import trap_BotDumpAvoidGoals
import trap_BotEmptyGoalStack
import trap_BotPopGoal
import trap_BotPushGoal
import trap_BotResetAvoidGoals
import trap_BotRemoveFromAvoidGoals
import trap_BotResetGoalState
import trap_BotSetChatName
import trap_BotSetChatGender
import trap_BotLoadChatFile
import trap_BotReplaceSynonyms
import trap_UnifyWhiteSpaces
import trap_BotMatchVariable
import trap_BotFindMatch
import trap_StringContains
import trap_BotGetChatMessage
import trap_BotEnterChat
import trap_BotChatLength
import trap_BotReplyChat
import trap_BotNumInitialChats
import trap_BotInitialChat
import trap_BotNumConsoleMessages
import trap_BotNextConsoleMessage
import trap_BotRemoveConsoleMessage
import trap_BotQueueConsoleMessage
import trap_BotFreeChatState
import trap_BotAllocChatState
import trap_Characteristic_String
import trap_Characteristic_BInteger
import trap_Characteristic_Integer
import trap_Characteristic_BFloat
import trap_Characteristic_Float
import trap_BotFreeCharacter
import trap_BotLoadCharacter
import trap_EA_ResetInput
import trap_EA_GetInput
import trap_EA_EndRegular
import trap_EA_View
import trap_EA_Move
import trap_EA_DelayedJump
import trap_EA_Jump
import trap_EA_SelectWeapon
import trap_EA_MoveRight
import trap_EA_MoveLeft
import trap_EA_MoveBack
import trap_EA_MoveForward
import trap_EA_MoveDown
import trap_EA_MoveUp
import trap_EA_Crouch
import trap_EA_Respawn
import trap_EA_Use
import trap_EA_Attack
import trap_EA_Talk
import trap_EA_Gesture
import trap_EA_Action
import trap_EA_Command
import trap_EA_SayTeam
import trap_EA_Say
import trap_AAS_PredictClientMovement
import trap_AAS_Swimming
import trap_AAS_AlternativeRouteGoals
import trap_AAS_PredictRoute
import trap_AAS_EnableRoutingArea
import trap_AAS_AreaTravelTimeToGoalArea
import trap_AAS_AreaReachability
import trap_AAS_IntForBSPEpairKey
import trap_AAS_FloatForBSPEpairKey
import trap_AAS_VectorForBSPEpairKey
import trap_AAS_ValueForBSPEpairKey
import trap_AAS_NextBSPEntity
import trap_AAS_PointContents
import trap_AAS_TraceAreas
import trap_AAS_PointReachabilityAreaIndex
import trap_AAS_PointAreaNum
import trap_AAS_Time
import trap_AAS_PresenceTypeBoundingBox
import trap_AAS_Initialized
import trap_AAS_EntityInfo
import trap_AAS_AreaInfo
import trap_AAS_BBoxAreas
import trap_BotUserCommand
import trap_BotGetServerCommand
import trap_BotGetSnapshotEntity
import trap_BotLibTest
import trap_BotLibUpdateEntity
import trap_BotLibLoadMap
import trap_BotLibStartFrame
import trap_BotLibDefine
import trap_BotLibVarGet
import trap_BotLibVarSet
import trap_BotLibShutdown
import trap_BotLibSetup
import trap_DebugPolygonDelete
import trap_DebugPolygonCreate
import trap_GetEntityToken
import trap_GetUsercmd
import trap_BotFreeClient
import trap_BotAllocateClient
import trap_EntityContact
import trap_EntitiesInBox
import trap_UnlinkEntity
import trap_LinkEntity
import trap_AreasConnected
import trap_AdjustAreaPortalState
import trap_InPVSIgnorePortals
import trap_InPVS
import trap_PointContents
import trap_Trace
import trap_SetBrushModel
import trap_GetServerinfo
import trap_SetUserinfo
import trap_GetUserinfo
import trap_GetConfigstring
import trap_SetConfigstring
import trap_SendServerCommand
import trap_DropClient
import trap_LocateGameData
import trap_Cvar_VariableStringBuffer
import trap_Cvar_VariableValue
import trap_Cvar_VariableIntegerValue
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_SendConsoleCommand
import trap_FS_Seek
import trap_FS_GetFileList
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_Args
import trap_Milliseconds
import trap_Error
import trap_Printf
import sv_allowUnnamed
import sv_motd8
import sv_motd7
import sv_motd6
import sv_motd5
import sv_motd4
import sv_motd3
import sv_motd2
import sv_motd1
import g_interference
import g_spawnProtection
import g_allowObliterate
import g_freezeAutothawTime
import g_freezeRoundRespawn
import g_DynamicGauntletCycle
import g_gauntletjumpRadius
import g_gauntletJumping
import g_gauntletKnockback
import sv_lock_cg_railHum_to
import g_allowSave
import g_AdminPassword
import g_fixMuzzleBug
import g_readyGrace
import g_allowReady
import g_sacrificeAnnounce
import g_flagSacrifice
import lastmap
import modname
import g_timeInGrace
import g_timeOutLength
import g_timeOutLimit
import g_allowHandicap
import g_pro_mode
import g_muteTourneyspecs
import g_muteSpecs
import g_fastSwitch
import g_fastRespawn
import weap_bfgCycle
import weap_plasmagunCycle
import weap_railgunCycle
import weap_rocketlauncherCycle
import weap_lightninggunCycle
import weap_grenadelauncherCycle
import weap_shotgunCycle
import weap_machinegunCycle
import weap_gauntletCycle
import weap_allowed
import weap_enableHook
import g_wpflags
import sv_fps
import g_delagProjectiles
import g_delagHitscan
import g_proxMineTimeout
import g_singlePlayer
import g_enableBreath
import g_enableDust
import g_rankings
import sv_lock_pmove
import pmove_msec
import pmove_fixed
import g_IU_ctf_sounds
import g_returnFlag
import g_DynamicRailgunCycle
import g_RailjumpRadius
import g_RailJumping
import g_teamKnockback
import g_railgunKnockback
import g_StaticKnockback
import g_SelfDamage
import g_FallingDamage
import g_allowLockedTeams
import g_gamemode
import g_smoothClients
import g_blueteam
import g_redteam
import g_cubeTimeout
import g_obeliskRespawnDelay
import g_obeliskRegenAmount
import g_obeliskRegenPeriod
import g_obeliskHealth
import g_teamForceBalance
import g_teamAutoJoin
import g_allowVote
import g_blood
import g_warmup
import g_motd
import g_synchronousClients
import g_weaponTeamRespawn
import g_weaponRespawn
import g_debugAlloc
import g_debugMove
import g_inactivity
import g_forcerespawn
import g_quadfactor
import g_knockback
import g_speed
import g_gravity
import g_needpass
import g_password
import g_friendlyFire
import g_capturelimit
import g_timelimit
import g_fraglimit
import g_dmflags
import sv_minRate
import g_restarted
import g_maxGameClients
import g_maxclients
import g_cheats
import g_dedicated
import g_gametype
import bans
import g_entities
import gameSettings
import tasks
import level
import InvulnerabilityEffect
import locationSpawn
import CheckDelay
import team_wins
import player_freeze
import is_body_freeze
import is_body
import DamageBody
import Body_free
import Persistant_spectator
import respawnSpectator
import Set_Client
import Set_spectator
import is_spectator
import Pickup_Team
import CheckTeamStatus
import TeamplayInfoMessage
import Team_GetLocationMsgByVec
import Team_GetLocationMsg
import Team_GetLocationByVec
import Team_GetLocation
import SelectCTFSpawnPoint
import Team_FreeEntity
import Team_ReturnFlag
import Team_InitGame
import Team_CheckHurtCarrier
import Team_FragBonuses
import Team_DroppedFlagThink
import AddTeamScore
import TeamColorString
import OtherTeamName
import TeamName
import OtherTeam
import BotTestAAS
import BotAIStartFrame
import BotAIShutdownClient
import BotAISetupClient
import BotAILoadMap
import BotAIShutdown
import BotAISetup
import BotInterbreedEndMatch
import Svcmd_BotList_f
import Svcmd_AddBot_f
import G_BotConnect
import G_RemoveQueuedBotBegin
import G_CheckBotSpawn
import G_GetBotInfoByName
import G_GetBotInfoByNumber
import G_InitBots
import Svcmd_AbortPodium_f
import SpawnModelsOnVictoryPads
import UpdateTournamentInfo
import getTimeDiff
import G_WriteBans
import G_WriteGameSetings
import G_WriteTaskData
import G_WriteSessionData
import G_InitWorldSession
import G_ReadBans
import G_InitSessionData
import G_ReadGameSetings
import G_ReadTaskData
import G_ReadSessionData
import Svcmd_GameMem_f
import G_InitMemory
import G_Alloc
import CheckObeliskAttack
import Team_CheckDroppedItem
import OnSameTeam
import ClassnameIsMover
import AnnounceFlagSacrifice
import PlayerHasFlagPowerup
import NoDropAreaBelow
import SpawnFlagAtLastKnownGood
import G_RunClient
import ClientEndFrame
import ClientThink
import ClientBegin
import ClientDisconnect
import ClientUserinfoChanged
import ClientConnect
import G_Error
import G_Printf
import SendScoreboardMessageToAllClients
import G_LogPrintf
import G_RunThink
import CheckTeamLeader
import SetLeader
import FindIntermissionPoint
import G_SetStats
import MoveClientToIntermission
import FireWeapon
import ConsoleCommand
import SpotWouldTelefrag
import CalculateRanks
import AddScore
import player_die
import ClientSpawn
import InitBodyQue
import InitClientResp
import InitClientPersistant
import BeginIntermission
import respawn
import CopyToBodyQue
import SelectSpawnPoint
import SetClientViewAngle
import PickTeam
import TeamLeader
import TeamCount
import G_TimeShiftClient
import G_PredictPlayerMove
import G_UnTimeShiftClient
import G_UndoTimeShiftFor
import G_DoTimeShiftFor
import G_UnTimeShiftAllClients
import G_TimeShiftAllClients
import G_StoreHistory
import G_ResetHistory
import FireWeaponGrapple
import Weapon_HookThink
import Weapon_HookFree
import CheckGauntletJump
import CheckGauntletAttack
import CalcMuzzlePoint
import LogAccuracyHit
import TeleportPlayer
import trigger_teleporter_touch
import Touch_DoorTrigger
import G_RunMover
import fire_grapple
import fire_bfg
import fire_railgun
import fire_rocket
import fire_grenade
import fire_plasma
import fire_blaster
import G_RunMissile
import TossClientCubes
import CPM_RadiusDamage
import TossClientItems
import body_die
import G_InvulnerabilityEffect
import G_RadiusDamage
import G_Damage
import CanDamage
import BuildShaderStateConfig
import AddRemap
import G_SetOrigin
import G_AddEvent
import G_AddPredictableEvent
import vectoyaw
import vtos
import tv
import G_TouchSolids
import G_TouchTriggers
import G_EntitiesFree
import G_FreeEntity
import G_Sound
import G_TempEntity
import G_Spawn
import G_InitGentity
import G_SetMovedir
import G_UseTargets
import G_PickTarget
import G_Find
import G_KillBox
import G_TeamCommand
import G_SoundIndex
import G_ModelIndex
import SaveRegisteredItems
import RegisterItem
import ClearRegisteredItems
import Touch_Item
import Add_Ammo
import ArmorIndex
import Think_Weapon
import FinishSpawningItem
import G_SpawnItem
import SetRespawn
import LaunchItem
import Drop_Item
import PrecacheItem
import UseHoldableItem
import RespawnItem
import G_RunItem
import G_CheckTeamItems
import Registered
import G_NewString
import G_SpawnEntitiesFromString
import G_SpawnVector
import G_SpawnInt
import G_SpawnFloat
import G_SpawnString
import BG_ProModePlayerTouchesItem
import BG_PlayerTouchesItem
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_CanItemBeGrabbed
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindItem
import bg_numItems
import bg_itemlist
import Pmove
import PM_UpdateViewAngles
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import va
import trap_FS_FOpenFile
import CG_FileExists
import findCharacter
import FixedName
import SanitizeString
import ConcatArgs
import trap_Argv
import trap_Argc
import Q_CopyStringUntil
import Q_CleanString
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_strrchr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import stristr
import HelpParse
import GetToken
import COM_ParseExt
import COM_Parse
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_SkipPath
import Com_Clamp
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import AnglesToAxis
import vectoangles
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import SnapVectorTowards
import ByteToDir
import DirToByte
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import ColorIndex
import color_z
import color_y
import color_x
import color_w
import color_v
import color_u
import color_t
import color_s
import color_r
import color_q
import color_p
import color_o
import color_n
import color_m
import color_l
import color_k
import color_j
import color_i
import color_h
import color_g
import color_f
import color_e
import color_d
import color_c
import color_b
import color_a
import colorMdGrey
import colorOrange
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import bytedirs
import Com_Memcpy
import Com_Memset
import Hunk_Alloc
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import vsprintf
import _atoi
import atoi
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strchr
import strcmp
import strcpy
import strcat
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $1836
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 117
byte 1 110
byte 1 107
byte 1 110
byte 1 111
byte 1 119
byte 1 110
byte 1 32
byte 1 99
byte 1 109
byte 1 100
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1831
byte 1 109
byte 1 97
byte 1 112
byte 1 108
byte 1 105
byte 1 115
byte 1 116
byte 1 0
align 1
LABELV $1828
byte 1 116
byte 1 111
byte 1 115
byte 1 115
byte 1 102
byte 1 108
byte 1 97
byte 1 103
byte 1 0
align 1
LABELV $1825
byte 1 110
byte 1 111
byte 1 116
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 0
align 1
LABELV $1822
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 0
align 1
LABELV $1819
byte 1 115
byte 1 101
byte 1 116
byte 1 118
byte 1 105
byte 1 101
byte 1 119
byte 1 112
byte 1 111
byte 1 115
byte 1 0
align 1
LABELV $1816
byte 1 103
byte 1 99
byte 1 0
align 1
LABELV $1813
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 0
align 1
LABELV $1810
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 0
align 1
LABELV $1807
byte 1 119
byte 1 104
byte 1 101
byte 1 114
byte 1 101
byte 1 0
align 1
LABELV $1804
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1801
byte 1 102
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 0
align 1
LABELV $1798
byte 1 102
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 0
align 1
LABELV $1795
byte 1 102
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 0
align 1
LABELV $1792
byte 1 108
byte 1 101
byte 1 118
byte 1 101
byte 1 108
byte 1 115
byte 1 104
byte 1 111
byte 1 116
byte 1 0
align 1
LABELV $1787
byte 1 107
byte 1 105
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $1784
byte 1 110
byte 1 111
byte 1 99
byte 1 108
byte 1 105
byte 1 112
byte 1 0
align 1
LABELV $1781
byte 1 110
byte 1 111
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 0
align 1
LABELV $1778
byte 1 103
byte 1 111
byte 1 100
byte 1 0
align 1
LABELV $1775
byte 1 103
byte 1 105
byte 1 118
byte 1 101
byte 1 0
align 1
LABELV $1766
byte 1 97
byte 1 108
byte 1 116
byte 1 67
byte 1 111
byte 1 110
byte 1 115
byte 1 111
byte 1 108
byte 1 101
byte 1 83
byte 1 97
byte 1 121
byte 1 77
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $1763
byte 1 109
byte 1 111
byte 1 116
byte 1 100
byte 1 0
align 1
LABELV $1753
byte 1 117
byte 1 110
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $1741
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $1738
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 115
byte 1 0
align 1
LABELV $1735
byte 1 113
byte 1 117
byte 1 105
byte 1 99
byte 1 107
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 115
byte 1 0
align 1
LABELV $1732
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 115
byte 1 0
align 1
LABELV $1726
byte 1 114
byte 1 119
byte 1 115
byte 1 0
align 1
LABELV $1723
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 111
byte 1 110
byte 1 108
byte 1 121
byte 1 0
align 1
LABELV $1720
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 0
align 1
LABELV $1717
byte 1 97
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 80
byte 1 97
byte 1 115
byte 1 115
byte 1 119
byte 1 111
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $1714
byte 1 97
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 0
align 1
LABELV $1696
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 0
align 1
LABELV $1693
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 0
align 1
LABELV $1690
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 117
byte 1 115
byte 1 0
align 1
LABELV $1685
byte 1 118
byte 1 116
byte 1 97
byte 1 117
byte 1 110
byte 1 116
byte 1 0
align 1
LABELV $1682
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $1679
byte 1 118
byte 1 111
byte 1 115
byte 1 97
byte 1 121
byte 1 95
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1676
byte 1 118
byte 1 111
byte 1 115
byte 1 97
byte 1 121
byte 1 0
align 1
LABELV $1671
byte 1 118
byte 1 115
byte 1 97
byte 1 121
byte 1 95
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1668
byte 1 118
byte 1 115
byte 1 97
byte 1 121
byte 1 0
align 1
LABELV $1665
byte 1 116
byte 1 101
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $1660
byte 1 115
byte 1 97
byte 1 121
byte 1 95
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1655
byte 1 115
byte 1 97
byte 1 121
byte 1 0
align 1
LABELV $1649
byte 1 108
byte 1 111
byte 1 97
byte 1 100
byte 1 0
align 1
LABELV $1646
byte 1 115
byte 1 97
byte 1 118
byte 1 101
byte 1 0
align 1
LABELV $1631
byte 1 65
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 32
byte 1 76
byte 1 111
byte 1 103
byte 1 105
byte 1 110
byte 1 32
byte 1 65
byte 1 116
byte 1 116
byte 1 101
byte 1 109
byte 1 112
byte 1 116
byte 1 32
byte 1 40
byte 1 91
byte 1 37
byte 1 105
byte 1 93
byte 1 91
byte 1 37
byte 1 115
byte 1 93
byte 1 41
byte 1 10
byte 1 0
align 1
LABELV $1625
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 65
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 99
byte 1 97
byte 1 110
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 98
byte 1 101
byte 1 32
byte 1 99
byte 1 104
byte 1 97
byte 1 110
byte 1 103
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1624
byte 1 65
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 32
byte 1 99
byte 1 111
byte 1 109
byte 1 109
byte 1 97
byte 1 110
byte 1 100
byte 1 32
byte 1 40
byte 1 91
byte 1 37
byte 1 105
byte 1 93
byte 1 91
byte 1 37
byte 1 115
byte 1 93
byte 1 37
byte 1 115
byte 1 41
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $1621
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 97
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 95
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $1620
byte 1 105
byte 1 112
byte 1 0
align 1
LABELV $1619
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 85
byte 1 110
byte 1 97
byte 1 118
byte 1 97
byte 1 105
byte 1 108
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 32
byte 1 99
byte 1 111
byte 1 109
byte 1 109
byte 1 97
byte 1 110
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1612
byte 1 115
byte 1 101
byte 1 116
byte 1 117
byte 1 0
align 1
LABELV $1611
byte 1 115
byte 1 101
byte 1 116
byte 1 97
byte 1 0
align 1
LABELV $1610
byte 1 115
byte 1 101
byte 1 116
byte 1 0
align 1
LABELV $1609
byte 1 115
byte 1 101
byte 1 116
byte 1 115
byte 1 0
align 1
LABELV $1608
byte 1 114
byte 1 99
byte 1 111
byte 1 110
byte 1 0
align 1
LABELV $1607
byte 1 114
byte 1 99
byte 1 111
byte 1 110
byte 1 112
byte 1 97
byte 1 115
byte 1 115
byte 1 119
byte 1 111
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $1606
byte 1 97
byte 1 100
byte 1 109
byte 1 105
byte 1 110
byte 1 112
byte 1 97
byte 1 115
byte 1 115
byte 1 119
byte 1 111
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $1603
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 65
byte 1 99
byte 1 99
byte 1 101
byte 1 115
byte 1 115
byte 1 32
byte 1 100
byte 1 101
byte 1 110
byte 1 105
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1589
byte 1 109
byte 1 111
byte 1 116
byte 1 100
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1587
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 89
byte 1 111
byte 1 117
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 111
byte 1 110
byte 1 108
byte 1 121
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 97
byte 1 116
byte 1 97
byte 1 116
byte 1 101
byte 1 46
byte 1 34
byte 1 0
align 1
LABELV $1586
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 89
byte 1 111
byte 1 117
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 119
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 97
byte 1 116
byte 1 97
byte 1 116
byte 1 101
byte 1 32
byte 1 111
byte 1 110
byte 1 108
byte 1 121
byte 1 46
byte 1 34
byte 1 0
align 1
LABELV $1579
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 94
byte 1 55
byte 1 37
byte 1 51
byte 1 100
byte 1 32
byte 1 94
byte 1 51
byte 1 80
byte 1 76
byte 1 65
byte 1 89
byte 1 69
byte 1 82
byte 1 83
byte 1 32
byte 1 32
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1577
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 37
byte 1 50
byte 1 105
byte 1 32
byte 1 32
byte 1 37
byte 1 115
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 37
byte 1 53
byte 1 105
byte 1 37
byte 1 55
byte 1 105
byte 1 37
byte 1 57
byte 1 105
byte 1 37
byte 1 49
byte 1 51
byte 1 105
byte 1 37
byte 1 56
byte 1 105
byte 1 47
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1576
byte 1 99
byte 1 108
byte 1 95
byte 1 109
byte 1 97
byte 1 120
byte 1 112
byte 1 97
byte 1 99
byte 1 107
byte 1 101
byte 1 116
byte 1 115
byte 1 0
align 1
LABELV $1575
byte 1 99
byte 1 108
byte 1 95
byte 1 112
byte 1 97
byte 1 99
byte 1 107
byte 1 101
byte 1 116
byte 1 100
byte 1 117
byte 1 112
byte 1 0
align 1
LABELV $1574
byte 1 99
byte 1 111
byte 1 109
byte 1 95
byte 1 109
byte 1 97
byte 1 120
byte 1 102
byte 1 112
byte 1 115
byte 1 0
align 1
LABELV $1573
byte 1 114
byte 1 97
byte 1 116
byte 1 101
byte 1 0
align 1
LABELV $1560
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1559
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 10
byte 1 94
byte 1 51
byte 1 32
byte 1 73
byte 1 68
byte 1 32
byte 1 78
byte 1 65
byte 1 77
byte 1 69
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 65
byte 1 84
byte 1 69
byte 1 32
byte 1 32
byte 1 32
byte 1 77
byte 1 65
byte 1 88
byte 1 70
byte 1 80
byte 1 83
byte 1 32
byte 1 32
byte 1 80
byte 1 65
byte 1 67
byte 1 75
byte 1 69
byte 1 84
byte 1 68
byte 1 85
byte 1 80
byte 1 32
byte 1 32
byte 1 77
byte 1 65
byte 1 88
byte 1 80
byte 1 65
byte 1 67
byte 1 75
byte 1 69
byte 1 84
byte 1 83
byte 1 32
byte 1 32
byte 1 65
byte 1 73
byte 1 77
byte 1 84
byte 1 89
byte 1 80
byte 1 69
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1541
byte 1 110
byte 1 114
byte 1 100
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1514
byte 1 114
byte 1 100
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1474
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $1470
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 65
byte 1 108
byte 1 108
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 119
byte 1 32
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1443
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 111
byte 1 117
byte 1 114
byte 1 110
byte 1 97
byte 1 109
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1442
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 111
byte 1 117
byte 1 114
byte 1 110
byte 1 97
byte 1 109
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 99
byte 1 117
byte 1 114
byte 1 114
byte 1 101
byte 1 110
byte 1 116
byte 1 108
byte 1 121
byte 1 32
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1434
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1433
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 99
byte 1 117
byte 1 114
byte 1 114
byte 1 101
byte 1 110
byte 1 116
byte 1 108
byte 1 121
byte 1 32
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1422
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 10
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1421
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 49
byte 1 84
byte 1 104
byte 1 101
byte 1 114
byte 1 101
byte 1 32
byte 1 119
byte 1 97
byte 1 115
byte 1 32
byte 1 97
byte 1 110
byte 1 32
byte 1 101
byte 1 114
byte 1 114
byte 1 111
byte 1 114
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 115
byte 1 46
byte 1 32
byte 1 73
byte 1 116
byte 1 32
byte 1 119
byte 1 97
byte 1 115
byte 1 32
byte 1 117
byte 1 110
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 102
byte 1 105
byte 1 110
byte 1 100
byte 1 32
byte 1 97
byte 1 32
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 115
byte 1 32
byte 1 98
byte 1 111
byte 1 97
byte 1 114
byte 1 100
byte 1 32
byte 1 102
byte 1 111
byte 1 114
byte 1 32
byte 1 121
byte 1 111
byte 1 117
byte 1 114
byte 1 32
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 32
byte 1 99
byte 1 111
byte 1 110
byte 1 102
byte 1 105
byte 1 103
byte 1 117
byte 1 114
byte 1 97
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 10
byte 1 82
byte 1 101
byte 1 112
byte 1 111
byte 1 114
byte 1 116
byte 1 32
byte 1 116
byte 1 104
byte 1 105
byte 1 115
byte 1 32
byte 1 105
byte 1 115
byte 1 115
byte 1 117
byte 1 101
byte 1 32
byte 1 119
byte 1 105
byte 1 116
byte 1 104
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 99
byte 1 117
byte 1 114
byte 1 114
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 99
byte 1 111
byte 1 110
byte 1 102
byte 1 105
byte 1 103
byte 1 117
byte 1 114
byte 1 97
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 113
byte 1 51
byte 1 46
byte 1 114
byte 1 101
byte 1 118
byte 1 111
byte 1 108
byte 1 117
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 64
byte 1 103
byte 1 109
byte 1 97
byte 1 105
byte 1 108
byte 1 46
byte 1 99
byte 1 111
byte 1 109
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1420
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 56
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1406
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 72
byte 1 105
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 83
byte 1 104
byte 1 111
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 108
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1402
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 53
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 10
byte 1 0
align 1
LABELV $1401
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 53
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 52
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 10
byte 1 0
align 1
LABELV $1383
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 72
byte 1 105
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 83
byte 1 104
byte 1 111
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 65
byte 1 99
byte 1 99
byte 1 117
byte 1 114
byte 1 97
byte 1 99
byte 1 121
byte 1 32
byte 1 32
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 106
byte 1 117
byte 1 109
byte 1 112
byte 1 115
byte 1 32
byte 1 32
byte 1 70
byte 1 114
byte 1 97
byte 1 103
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1382
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 72
byte 1 105
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 83
byte 1 104
byte 1 111
byte 1 116
byte 1 115
byte 1 32
byte 1 32
byte 1 65
byte 1 99
byte 1 99
byte 1 117
byte 1 114
byte 1 97
byte 1 99
byte 1 121
byte 1 32
byte 1 32
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 106
byte 1 117
byte 1 109
byte 1 112
byte 1 115
byte 1 32
byte 1 32
byte 1 70
byte 1 114
byte 1 97
byte 1 103
byte 1 115
byte 1 32
byte 1 32
byte 1 82
byte 1 101
byte 1 116
byte 1 117
byte 1 114
byte 1 110
byte 1 115
byte 1 47
byte 1 67
byte 1 97
byte 1 112
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1370
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1369
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 32
byte 1 32
byte 1 37
byte 1 105
byte 1 47
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1365
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 10
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 32
byte 1 37
byte 1 51
byte 1 46
byte 1 50
byte 1 102
byte 1 0
align 1
LABELV $1355
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1354
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 10
byte 1 32
byte 1 32
byte 1 71
byte 1 116
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 77
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 83
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 71
byte 1 108
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 108
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 76
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 80
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 66
byte 1 70
byte 1 71
byte 1 32
byte 1 32
byte 1 70
byte 1 114
byte 1 97
byte 1 103
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1353
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 55
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 10
byte 1 32
byte 1 32
byte 1 71
byte 1 116
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 77
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 83
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 71
byte 1 108
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 108
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 76
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 82
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 80
byte 1 103
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 66
byte 1 70
byte 1 71
byte 1 32
byte 1 32
byte 1 82
byte 1 101
byte 1 116
byte 1 117
byte 1 114
byte 1 110
byte 1 115
byte 1 47
byte 1 67
byte 1 97
byte 1 112
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1336
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1323
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 117
byte 1 115
byte 1 97
byte 1 103
byte 1 101
byte 1 58
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 118
byte 1 105
byte 1 101
byte 1 119
byte 1 112
byte 1 111
byte 1 115
byte 1 32
byte 1 120
byte 1 32
byte 1 121
byte 1 32
byte 1 122
byte 1 32
byte 1 121
byte 1 97
byte 1 119
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1314
byte 1 118
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1305
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 99
byte 1 97
byte 1 115
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1302
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 97
byte 1 108
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 32
byte 1 99
byte 1 97
byte 1 115
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1299
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 112
byte 1 114
byte 1 111
byte 1 103
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1288
byte 1 116
byte 1 118
byte 1 32
byte 1 34
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 34
byte 1 0
align 1
LABELV $1285
byte 1 116
byte 1 118
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $1284
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 32
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 101
byte 1 100
byte 1 32
byte 1 97
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1251
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 32
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 32
byte 1 111
byte 1 110
byte 1 32
byte 1 121
byte 1 111
byte 1 117
byte 1 114
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1209
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 108
byte 1 101
byte 1 97
byte 1 100
byte 1 101
byte 1 114
byte 1 0
align 1
LABELV $1200
byte 1 108
byte 1 101
byte 1 97
byte 1 100
byte 1 101
byte 1 114
byte 1 0
align 1
LABELV $1173
byte 1 116
byte 1 118
byte 1 32
byte 1 34
byte 1 37
byte 1 105
byte 1 32
byte 1 45
byte 1 49
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1168
byte 1 117
byte 1 110
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 98
byte 1 10
byte 1 0
align 1
LABELV $1167
byte 1 117
byte 1 110
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 114
byte 1 10
byte 1 0
align 1
LABELV $1163
byte 1 117
byte 1 110
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1160
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 98
byte 1 10
byte 1 0
align 1
LABELV $1159
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 114
byte 1 10
byte 1 0
align 1
LABELV $1155
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 0
align 1
LABELV $1151
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 112
byte 1 97
byte 1 115
byte 1 115
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1146
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 102
byte 1 97
byte 1 105
byte 1 108
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1138
byte 1 118
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 105
byte 1 34
byte 1 0
align 1
LABELV $1129
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 86
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 99
byte 1 97
byte 1 115
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1128
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 97
byte 1 115
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1125
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 86
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 97
byte 1 108
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 32
byte 1 99
byte 1 97
byte 1 115
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1122
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 112
byte 1 114
byte 1 111
byte 1 103
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1115
byte 1 118
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 105
byte 1 32
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1105
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 32
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 101
byte 1 100
byte 1 32
byte 1 97
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1102
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $1097
byte 1 101
byte 1 120
byte 1 101
byte 1 99
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1090
byte 1 104
byte 1 121
byte 1 98
byte 1 114
byte 1 105
byte 1 100
byte 1 95
byte 1 105
byte 1 110
byte 1 115
byte 1 116
byte 1 97
byte 1 103
byte 1 105
byte 1 98
byte 1 0
align 1
LABELV $1089
byte 1 99
byte 1 108
byte 1 97
byte 1 115
byte 1 115
byte 1 105
byte 1 99
byte 1 95
byte 1 105
byte 1 110
byte 1 115
byte 1 116
byte 1 97
byte 1 103
byte 1 105
byte 1 98
byte 1 0
align 1
LABELV $1088
byte 1 105
byte 1 110
byte 1 115
byte 1 116
byte 1 97
byte 1 103
byte 1 105
byte 1 98
byte 1 0
align 1
LABELV $1087
byte 1 114
byte 1 110
byte 1 114
byte 1 0
align 1
LABELV $1086
byte 1 102
byte 1 117
byte 1 108
byte 1 108
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 111
byte 1 110
byte 1 115
byte 1 0
align 1
LABELV $1079
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 32
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 32
byte 1 111
byte 1 117
byte 1 116
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 112
byte 1 114
byte 1 111
byte 1 103
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1073
byte 1 37
byte 1 115
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1069
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 32
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 32
byte 1 111
byte 1 117
byte 1 116
byte 1 115
byte 1 32
byte 1 114
byte 1 101
byte 1 109
byte 1 97
byte 1 105
byte 1 110
byte 1 105
byte 1 110
byte 1 103
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1061
byte 1 118
byte 1 115
byte 1 116
byte 1 114
byte 1 32
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 105
byte 1 111
byte 1 117
byte 1 115
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $1058
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 105
byte 1 111
byte 1 117
byte 1 115
byte 1 109
byte 1 97
byte 1 112
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1053
byte 1 118
byte 1 115
byte 1 116
byte 1 114
byte 1 32
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $1050
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 109
byte 1 97
byte 1 112
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1043
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 115
byte 1 59
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 32
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 109
byte 1 97
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1038
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 49
byte 1 73
byte 1 110
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 109
byte 1 97
byte 1 112
byte 1 110
byte 1 117
byte 1 109
byte 1 98
byte 1 101
byte 1 114
byte 1 44
byte 1 32
byte 1 109
byte 1 117
byte 1 115
byte 1 116
byte 1 32
byte 1 98
byte 1 101
byte 1 32
byte 1 108
byte 1 101
byte 1 115
byte 1 115
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 110
byte 1 32
byte 1 37
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1035
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 49
byte 1 73
byte 1 110
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 109
byte 1 97
byte 1 112
byte 1 110
byte 1 117
byte 1 109
byte 1 98
byte 1 101
byte 1 114
byte 1 44
byte 1 32
byte 1 109
byte 1 117
byte 1 115
byte 1 116
byte 1 32
byte 1 98
byte 1 101
byte 1 32
byte 1 103
byte 1 114
byte 1 101
byte 1 97
byte 1 116
byte 1 101
byte 1 114
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 110
byte 1 32
byte 1 122
byte 1 101
byte 1 114
byte 1 111
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1030
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 49
byte 1 73
byte 1 110
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 109
byte 1 97
byte 1 112
byte 1 110
byte 1 117
byte 1 109
byte 1 98
byte 1 101
byte 1 114
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1023
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 115
byte 1 59
byte 1 32
byte 1 115
byte 1 101
byte 1 116
byte 1 32
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 105
byte 1 111
byte 1 117
byte 1 115
byte 1 109
byte 1 97
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $1016
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 100
byte 1 0
align 1
LABELV $1013
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 73
byte 1 110
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 116
byte 1 121
byte 1 112
byte 1 101
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $1005
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $1000
byte 1 118
byte 1 116
byte 1 99
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 10
byte 1 0
byte 1 34
byte 1 0
align 1
LABELV $999
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 113
byte 1 117
byte 1 105
byte 1 99
byte 1 107
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $996
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $993
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 73
byte 1 85
byte 1 95
byte 1 99
byte 1 116
byte 1 102
byte 1 95
byte 1 83
byte 1 111
byte 1 117
byte 1 110
byte 1 100
byte 1 115
byte 1 0
align 1
LABELV $990
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 112
byte 1 114
byte 1 111
byte 1 95
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $987
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $984
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 105
byte 1 110
byte 1 0
align 1
LABELV $981
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 111
byte 1 117
byte 1 116
byte 1 0
align 1
LABELV $978
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 70
byte 1 97
byte 1 108
byte 1 108
byte 1 105
byte 1 110
byte 1 103
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 0
align 1
LABELV $975
byte 1 103
byte 1 95
byte 1 115
byte 1 101
byte 1 108
byte 1 102
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 0
align 1
LABELV $974
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 115
byte 1 101
byte 1 108
byte 1 102
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 0
align 1
LABELV $971
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 114
byte 1 101
byte 1 116
byte 1 117
byte 1 114
byte 1 110
byte 1 70
byte 1 108
byte 1 97
byte 1 103
byte 1 0
align 1
LABELV $968
byte 1 103
byte 1 95
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 105
byte 1 99
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $967
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 115
byte 1 116
byte 1 97
byte 1 116
byte 1 105
byte 1 99
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $964
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 98
byte 1 102
byte 1 103
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $961
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 114
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $958
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 74
byte 1 117
byte 1 109
byte 1 112
byte 1 105
byte 1 110
byte 1 103
byte 1 0
align 1
LABELV $955
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 109
byte 1 97
byte 1 99
byte 1 104
byte 1 105
byte 1 110
byte 1 101
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $952
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 68
byte 1 121
byte 1 110
byte 1 97
byte 1 109
byte 1 105
byte 1 99
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $949
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 84
byte 1 111
byte 1 117
byte 1 114
byte 1 110
byte 1 101
byte 1 121
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 115
byte 1 0
align 1
LABELV $946
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 115
byte 1 104
byte 1 111
byte 1 116
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $943
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 115
byte 1 0
align 1
LABELV $940
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 102
byte 1 114
byte 1 97
byte 1 103
byte 1 108
byte 1 105
byte 1 109
byte 1 105
byte 1 116
byte 1 0
align 1
LABELV $937
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 103
byte 1 114
byte 1 101
byte 1 110
byte 1 97
byte 1 100
byte 1 101
byte 1 108
byte 1 97
byte 1 117
byte 1 110
byte 1 99
byte 1 104
byte 1 101
byte 1 114
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $934
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 108
byte 1 105
byte 1 109
byte 1 105
byte 1 116
byte 1 0
align 1
LABELV $931
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 119
byte 1 97
byte 1 114
byte 1 109
byte 1 117
byte 1 112
byte 1 0
align 1
LABELV $928
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 108
byte 1 105
byte 1 103
byte 1 104
byte 1 116
byte 1 110
byte 1 105
byte 1 110
byte 1 103
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $925
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 99
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 107
byte 1 105
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $922
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 107
byte 1 105
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $919
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 116
byte 1 108
byte 1 97
byte 1 117
byte 1 110
byte 1 99
byte 1 104
byte 1 101
byte 1 114
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $916
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 103
byte 1 95
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 116
byte 1 121
byte 1 112
byte 1 101
byte 1 0
align 1
LABELV $913
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $910
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $907
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $904
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 105
byte 1 111
byte 1 117
byte 1 115
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $901
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 112
byte 1 108
byte 1 97
byte 1 115
byte 1 109
byte 1 97
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $898
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 109
byte 1 97
byte 1 112
byte 1 110
byte 1 117
byte 1 109
byte 1 0
align 1
LABELV $895
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $894
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 109
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 101
byte 1 115
byte 1 116
byte 1 97
byte 1 114
byte 1 116
byte 1 0
align 1
LABELV $889
byte 1 113
byte 1 117
byte 1 105
byte 1 99
byte 1 107
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $888
byte 1 109
byte 1 97
byte 1 112
byte 1 110
byte 1 117
byte 1 109
byte 1 0
align 1
LABELV $887
byte 1 103
byte 1 95
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $886
byte 1 103
byte 1 95
byte 1 73
byte 1 85
byte 1 95
byte 1 99
byte 1 116
byte 1 102
byte 1 95
byte 1 83
byte 1 111
byte 1 117
byte 1 110
byte 1 100
byte 1 115
byte 1 0
align 1
LABELV $885
byte 1 103
byte 1 95
byte 1 112
byte 1 114
byte 1 111
byte 1 95
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $884
byte 1 103
byte 1 95
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 0
align 1
LABELV $883
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 105
byte 1 110
byte 1 0
align 1
LABELV $882
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 111
byte 1 117
byte 1 116
byte 1 0
align 1
LABELV $881
byte 1 103
byte 1 95
byte 1 70
byte 1 97
byte 1 108
byte 1 108
byte 1 105
byte 1 110
byte 1 103
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 0
align 1
LABELV $880
byte 1 103
byte 1 95
byte 1 83
byte 1 101
byte 1 108
byte 1 102
byte 1 68
byte 1 97
byte 1 109
byte 1 97
byte 1 103
byte 1 101
byte 1 0
align 1
LABELV $879
byte 1 103
byte 1 95
byte 1 114
byte 1 101
byte 1 116
byte 1 117
byte 1 114
byte 1 110
byte 1 70
byte 1 108
byte 1 97
byte 1 103
byte 1 0
align 1
LABELV $878
byte 1 103
byte 1 95
byte 1 83
byte 1 116
byte 1 97
byte 1 116
byte 1 105
byte 1 99
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $877
byte 1 103
byte 1 95
byte 1 114
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 75
byte 1 110
byte 1 111
byte 1 99
byte 1 107
byte 1 98
byte 1 97
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $876
byte 1 103
byte 1 95
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 74
byte 1 117
byte 1 109
byte 1 112
byte 1 105
byte 1 110
byte 1 103
byte 1 0
align 1
LABELV $875
byte 1 103
byte 1 95
byte 1 68
byte 1 121
byte 1 110
byte 1 97
byte 1 109
byte 1 105
byte 1 99
byte 1 82
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $874
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 98
byte 1 102
byte 1 103
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $873
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 109
byte 1 97
byte 1 99
byte 1 104
byte 1 105
byte 1 110
byte 1 101
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $872
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 115
byte 1 104
byte 1 111
byte 1 116
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $871
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 103
byte 1 114
byte 1 101
byte 1 110
byte 1 97
byte 1 100
byte 1 101
byte 1 108
byte 1 97
byte 1 117
byte 1 110
byte 1 99
byte 1 104
byte 1 101
byte 1 114
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $870
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 108
byte 1 105
byte 1 103
byte 1 104
byte 1 116
byte 1 110
byte 1 105
byte 1 110
byte 1 103
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $869
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 116
byte 1 108
byte 1 97
byte 1 117
byte 1 110
byte 1 99
byte 1 104
byte 1 101
byte 1 114
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $868
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 97
byte 1 105
byte 1 108
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $867
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 95
byte 1 112
byte 1 108
byte 1 97
byte 1 115
byte 1 109
byte 1 97
byte 1 103
byte 1 117
byte 1 110
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 0
align 1
LABELV $866
byte 1 103
byte 1 95
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 84
byte 1 111
byte 1 117
byte 1 114
byte 1 110
byte 1 101
byte 1 121
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 115
byte 1 0
align 1
LABELV $865
byte 1 103
byte 1 95
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 115
byte 1 0
align 1
LABELV $864
byte 1 102
byte 1 114
byte 1 97
byte 1 103
byte 1 108
byte 1 105
byte 1 109
byte 1 105
byte 1 116
byte 1 0
align 1
LABELV $863
byte 1 116
byte 1 105
byte 1 109
byte 1 101
byte 1 108
byte 1 105
byte 1 109
byte 1 105
byte 1 116
byte 1 0
align 1
LABELV $862
byte 1 103
byte 1 95
byte 1 119
byte 1 97
byte 1 114
byte 1 109
byte 1 117
byte 1 112
byte 1 0
align 1
LABELV $861
byte 1 99
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 107
byte 1 105
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $860
byte 1 107
byte 1 105
byte 1 99
byte 1 107
byte 1 0
align 1
LABELV $859
byte 1 103
byte 1 95
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 116
byte 1 121
byte 1 112
byte 1 101
byte 1 0
align 1
LABELV $856
byte 1 112
byte 1 114
byte 1 101
byte 1 118
byte 1 105
byte 1 111
byte 1 117
byte 1 115
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $855
byte 1 110
byte 1 101
byte 1 120
byte 1 116
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $854
byte 1 109
byte 1 97
byte 1 112
byte 1 95
byte 1 114
byte 1 101
byte 1 115
byte 1 116
byte 1 97
byte 1 114
byte 1 116
byte 1 0
align 1
LABELV $853
byte 1 109
byte 1 97
byte 1 112
byte 1 0
align 1
LABELV $849
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 73
byte 1 110
byte 1 118
byte 1 97
byte 1 108
byte 1 105
byte 1 100
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 115
byte 1 116
byte 1 114
byte 1 105
byte 1 110
byte 1 103
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $845
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 102
byte 1 111
byte 1 114
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $842
byte 1 100
byte 1 105
byte 1 115
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 95
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $841
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 78
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 32
byte 1 97
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 97
byte 1 115
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $838
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 89
byte 1 111
byte 1 117
byte 1 32
byte 1 104
byte 1 97
byte 1 118
byte 1 101
byte 1 32
byte 1 99
byte 1 97
byte 1 108
byte 1 108
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 109
byte 1 97
byte 1 120
byte 1 105
byte 1 109
byte 1 117
byte 1 109
byte 1 32
byte 1 110
byte 1 117
byte 1 109
byte 1 98
byte 1 101
byte 1 114
byte 1 32
byte 1 111
byte 1 102
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $835
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 65
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 112
byte 1 114
byte 1 111
byte 1 103
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 32
byte 1 111
byte 1 102
byte 1 32
byte 1 101
byte 1 120
byte 1 101
byte 1 99
byte 1 117
byte 1 116
byte 1 105
byte 1 110
byte 1 103
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $831
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 65
byte 1 32
byte 1 118
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 97
byte 1 108
byte 1 114
byte 1 101
byte 1 97
byte 1 100
byte 1 121
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 112
byte 1 114
byte 1 111
byte 1 103
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $827
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 86
byte 1 111
byte 1 116
byte 1 105
byte 1 110
byte 1 103
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 101
byte 1 100
byte 1 32
byte 1 104
byte 1 101
byte 1 114
byte 1 101
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $821
byte 1 118
byte 1 116
byte 1 32
byte 1 45
byte 1 49
byte 1 10
byte 1 0
align 1
LABELV $820
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 86
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 102
byte 1 97
byte 1 105
byte 1 108
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $787
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 86
byte 1 111
byte 1 116
byte 1 101
byte 1 32
byte 1 112
byte 1 97
byte 1 115
byte 1 115
byte 1 101
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $786
byte 1 115
byte 1 111
byte 1 117
byte 1 110
byte 1 100
byte 1 47
byte 1 119
byte 1 111
byte 1 114
byte 1 108
byte 1 100
byte 1 47
byte 1 107
byte 1 108
byte 1 97
byte 1 120
byte 1 111
byte 1 110
byte 1 50
byte 1 46
byte 1 119
byte 1 97
byte 1 118
byte 1 0
align 1
LABELV $773
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 70
byte 1 114
byte 1 101
byte 1 101
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 53
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $772
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $766
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 53
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $762
byte 1 85
byte 1 110
byte 1 108
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 0
align 1
LABELV $761
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 0
align 1
LABELV $758
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 51
byte 1 105
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 32
byte 1 37
byte 1 53
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $754
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 32
byte 1 67
byte 1 111
byte 1 117
byte 1 110
byte 1 116
byte 1 32
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 32
byte 1 83
byte 1 116
byte 1 97
byte 1 116
byte 1 117
byte 1 115
byte 1 10
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 45
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $752
byte 1 95
byte 1 95
byte 1 113
byte 1 117
byte 1 105
byte 1 99
byte 1 107
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 115
byte 1 0
align 1
LABELV $750
byte 1 72
byte 1 97
byte 1 114
byte 1 118
byte 1 101
byte 1 115
byte 1 116
byte 1 101
byte 1 114
byte 1 0
align 1
LABELV $749
byte 1 79
byte 1 118
byte 1 101
byte 1 114
byte 1 108
byte 1 111
byte 1 97
byte 1 100
byte 1 0
align 1
LABELV $748
byte 1 79
byte 1 110
byte 1 101
byte 1 32
byte 1 70
byte 1 108
byte 1 97
byte 1 103
byte 1 32
byte 1 67
byte 1 84
byte 1 70
byte 1 0
align 1
LABELV $747
byte 1 67
byte 1 97
byte 1 112
byte 1 116
byte 1 117
byte 1 114
byte 1 101
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 70
byte 1 108
byte 1 97
byte 1 103
byte 1 0
align 1
LABELV $746
byte 1 84
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 68
byte 1 101
byte 1 97
byte 1 116
byte 1 104
byte 1 109
byte 1 97
byte 1 116
byte 1 99
byte 1 104
byte 1 0
align 1
LABELV $745
byte 1 83
byte 1 105
byte 1 110
byte 1 103
byte 1 108
byte 1 101
byte 1 32
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 0
align 1
LABELV $744
byte 1 84
byte 1 111
byte 1 117
byte 1 114
byte 1 110
byte 1 97
byte 1 109
byte 1 101
byte 1 110
byte 1 116
byte 1 0
align 1
LABELV $743
byte 1 70
byte 1 114
byte 1 101
byte 1 101
byte 1 32
byte 1 70
byte 1 111
byte 1 114
byte 1 32
byte 1 65
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $742
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $733
byte 1 114
byte 1 101
byte 1 112
byte 1 111
byte 1 114
byte 1 116
byte 1 0
align 1
LABELV $732
byte 1 115
byte 1 101
byte 1 97
byte 1 114
byte 1 99
byte 1 104
byte 1 32
byte 1 97
byte 1 110
byte 1 100
byte 1 32
byte 1 100
byte 1 101
byte 1 115
byte 1 116
byte 1 114
byte 1 111
byte 1 121
byte 1 0
align 1
LABELV $731
byte 1 103
byte 1 117
byte 1 97
byte 1 114
byte 1 100
byte 1 32
byte 1 108
byte 1 111
byte 1 99
byte 1 97
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 0
align 1
LABELV $730
byte 1 99
byte 1 111
byte 1 118
byte 1 101
byte 1 114
byte 1 32
byte 1 109
byte 1 101
byte 1 0
align 1
LABELV $729
byte 1 99
byte 1 111
byte 1 109
byte 1 101
byte 1 32
byte 1 104
byte 1 101
byte 1 114
byte 1 101
byte 1 0
align 1
LABELV $728
byte 1 104
byte 1 111
byte 1 108
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 105
byte 1 115
byte 1 32
byte 1 112
byte 1 111
byte 1 115
byte 1 105
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 0
align 1
LABELV $727
byte 1 104
byte 1 111
byte 1 108
byte 1 100
byte 1 32
byte 1 121
byte 1 111
byte 1 117
byte 1 114
byte 1 32
byte 1 112
byte 1 111
byte 1 115
byte 1 105
byte 1 116
byte 1 105
byte 1 111
byte 1 110
byte 1 0
align 1
LABELV $726
byte 1 116
byte 1 97
byte 1 117
byte 1 110
byte 1 116
byte 1 0
align 1
LABELV $723
byte 1 112
byte 1 114
byte 1 97
byte 1 105
byte 1 115
byte 1 101
byte 1 0
align 1
LABELV $706
byte 1 107
byte 1 105
byte 1 108
byte 1 108
byte 1 95
byte 1 105
byte 1 110
byte 1 115
byte 1 117
byte 1 108
byte 1 116
byte 1 0
align 1
LABELV $701
byte 1 107
byte 1 105
byte 1 108
byte 1 108
byte 1 95
byte 1 103
byte 1 97
byte 1 117
byte 1 110
byte 1 116
byte 1 108
byte 1 101
byte 1 116
byte 1 0
align 1
LABELV $690
byte 1 100
byte 1 101
byte 1 97
byte 1 116
byte 1 104
byte 1 95
byte 1 105
byte 1 110
byte 1 115
byte 1 117
byte 1 108
byte 1 116
byte 1 0
align 1
LABELV $680
byte 1 118
byte 1 116
byte 1 101
byte 1 108
byte 1 108
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 37
byte 1 115
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $658
byte 1 118
byte 1 111
byte 1 105
byte 1 99
byte 1 101
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $648
byte 1 37
byte 1 115
byte 1 32
byte 1 37
byte 1 100
byte 1 32
byte 1 37
byte 1 100
byte 1 32
byte 1 37
byte 1 100
byte 1 32
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $647
byte 1 118
byte 1 99
byte 1 104
byte 1 97
byte 1 116
byte 1 0
align 1
LABELV $646
byte 1 118
byte 1 116
byte 1 101
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $643
byte 1 118
byte 1 116
byte 1 99
byte 1 104
byte 1 97
byte 1 116
byte 1 0
align 1
LABELV $626
byte 1 116
byte 1 101
byte 1 108
byte 1 108
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 37
byte 1 115
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $612
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 49
byte 1 89
byte 1 111
byte 1 117
byte 1 32
byte 1 104
byte 1 97
byte 1 118
byte 1 101
byte 1 32
byte 1 98
byte 1 101
byte 1 101
byte 1 110
byte 1 32
byte 1 109
byte 1 117
byte 1 116
byte 1 101
byte 1 100
byte 1 33
byte 1 10
byte 1 0
align 1
LABELV $600
byte 1 37
byte 1 115
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $594
byte 1 25
byte 1 91
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 25
byte 1 93
byte 1 25
byte 1 58
byte 1 32
byte 1 0
align 1
LABELV $593
byte 1 25
byte 1 91
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 25
byte 1 93
byte 1 32
byte 1 40
byte 1 37
byte 1 115
byte 1 41
byte 1 25
byte 1 58
byte 1 32
byte 1 0
align 1
LABELV $588
byte 1 25
byte 1 40
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 25
byte 1 41
byte 1 25
byte 1 58
byte 1 32
byte 1 0
align 1
LABELV $587
byte 1 25
byte 1 40
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 25
byte 1 41
byte 1 32
byte 1 40
byte 1 37
byte 1 115
byte 1 41
byte 1 25
byte 1 58
byte 1 32
byte 1 0
align 1
LABELV $584
byte 1 115
byte 1 97
byte 1 121
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $582
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 25
byte 1 58
byte 1 32
byte 1 0
align 1
LABELV $581
byte 1 115
byte 1 97
byte 1 121
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 58
byte 1 32
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $573
byte 1 99
byte 1 104
byte 1 97
byte 1 116
byte 1 0
align 1
LABELV $572
byte 1 116
byte 1 99
byte 1 104
byte 1 97
byte 1 116
byte 1 0
align 1
LABELV $571
byte 1 37
byte 1 115
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 37
byte 1 99
byte 1 37
byte 1 99
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $522
byte 1 67
byte 1 109
byte 1 100
byte 1 95
byte 1 70
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 67
byte 1 121
byte 1 99
byte 1 108
byte 1 101
byte 1 95
byte 1 102
byte 1 58
byte 1 32
byte 1 98
byte 1 97
byte 1 100
byte 1 32
byte 1 100
byte 1 105
byte 1 114
byte 1 32
byte 1 37
byte 1 105
byte 1 0
align 1
LABELV $476
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 70
byte 1 114
byte 1 101
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $472
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $463
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $446
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 77
byte 1 97
byte 1 121
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 115
byte 1 119
byte 1 105
byte 1 116
byte 1 99
byte 1 104
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 115
byte 1 32
byte 1 109
byte 1 111
byte 1 114
byte 1 101
byte 1 32
byte 1 116
byte 1 104
byte 1 97
byte 1 110
byte 1 32
byte 1 111
byte 1 110
byte 1 99
byte 1 101
byte 1 32
byte 1 112
byte 1 101
byte 1 114
byte 1 32
byte 1 53
byte 1 32
byte 1 115
byte 1 101
byte 1 99
byte 1 111
byte 1 110
byte 1 100
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $441
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 83
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $439
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 70
byte 1 114
byte 1 101
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $437
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $435
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $429
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 89
byte 1 111
byte 1 117
byte 1 39
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 106
byte 1 111
byte 1 105
byte 1 110
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 32
byte 1 97
byte 1 115
byte 1 32
byte 1 85
byte 1 110
byte 1 110
byte 1 97
byte 1 109
byte 1 101
byte 1 100
byte 1 80
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $383
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 104
byte 1 97
byte 1 115
byte 1 32
byte 1 116
byte 1 111
byte 1 111
byte 1 32
byte 1 109
byte 1 97
byte 1 110
byte 1 121
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $378
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 104
byte 1 97
byte 1 115
byte 1 32
byte 1 116
byte 1 111
byte 1 111
byte 1 32
byte 1 109
byte 1 97
byte 1 110
byte 1 121
byte 1 32
byte 1 112
byte 1 108
byte 1 97
byte 1 121
byte 1 101
byte 1 114
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $368
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 66
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $362
byte 1 98
byte 1 0
align 1
LABELV $361
byte 1 98
byte 1 108
byte 1 117
byte 1 101
byte 1 0
align 1
LABELV $358
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 82
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 76
byte 1 111
byte 1 99
byte 1 107
byte 1 101
byte 1 100
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $352
byte 1 114
byte 1 0
align 1
LABELV $351
byte 1 114
byte 1 101
byte 1 100
byte 1 0
align 1
LABELV $344
byte 1 115
byte 1 0
align 1
LABELV $343
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 0
align 1
LABELV $340
byte 1 102
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 50
byte 1 0
align 1
LABELV $337
byte 1 102
byte 1 111
byte 1 108
byte 1 108
byte 1 111
byte 1 119
byte 1 49
byte 1 0
align 1
LABELV $333
byte 1 115
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 0
align 1
LABELV $332
byte 1 115
byte 1 99
byte 1 111
byte 1 114
byte 1 101
byte 1 98
byte 1 111
byte 1 97
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $313
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 106
byte 1 111
byte 1 105
byte 1 110
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 98
byte 1 97
byte 1 116
byte 1 116
byte 1 108
byte 1 101
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $310
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 106
byte 1 111
byte 1 105
byte 1 110
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 115
byte 1 112
byte 1 101
byte 1 99
byte 1 116
byte 1 97
byte 1 116
byte 1 111
byte 1 114
byte 1 115
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $307
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 106
byte 1 111
byte 1 105
byte 1 110
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 98
byte 1 108
byte 1 117
byte 1 101
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $304
byte 1 99
byte 1 112
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 94
byte 1 55
byte 1 32
byte 1 106
byte 1 111
byte 1 105
byte 1 110
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 114
byte 1 101
byte 1 100
byte 1 32
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $288
byte 1 37
byte 1 100
byte 1 0
align 1
LABELV $287
byte 1 116
byte 1 101
byte 1 97
byte 1 109
byte 1 116
byte 1 97
byte 1 115
byte 1 107
byte 1 0
align 1
LABELV $283
byte 1 99
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 76
byte 1 101
byte 1 118
byte 1 101
byte 1 108
byte 1 83
byte 1 104
byte 1 111
byte 1 116
byte 1 0
align 1
LABELV $282
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 77
byte 1 117
byte 1 115
byte 1 116
byte 1 32
byte 1 98
byte 1 101
byte 1 32
byte 1 105
byte 1 110
byte 1 32
byte 1 103
byte 1 95
byte 1 103
byte 1 97
byte 1 109
byte 1 101
byte 1 116
byte 1 121
byte 1 112
byte 1 101
byte 1 32
byte 1 48
byte 1 32
byte 1 102
byte 1 111
byte 1 114
byte 1 32
byte 1 108
byte 1 101
byte 1 118
byte 1 101
byte 1 108
byte 1 115
byte 1 104
byte 1 111
byte 1 116
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $272
byte 1 110
byte 1 111
byte 1 99
byte 1 108
byte 1 105
byte 1 112
byte 1 32
byte 1 79
byte 1 78
byte 1 10
byte 1 0
align 1
LABELV $271
byte 1 110
byte 1 111
byte 1 99
byte 1 108
byte 1 105
byte 1 112
byte 1 32
byte 1 79
byte 1 70
byte 1 70
byte 1 10
byte 1 0
align 1
LABELV $265
byte 1 110
byte 1 111
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 32
byte 1 79
byte 1 78
byte 1 10
byte 1 0
align 1
LABELV $264
byte 1 110
byte 1 111
byte 1 116
byte 1 97
byte 1 114
byte 1 103
byte 1 101
byte 1 116
byte 1 32
byte 1 79
byte 1 70
byte 1 70
byte 1 10
byte 1 0
align 1
LABELV $258
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 34
byte 1 0
align 1
LABELV $257
byte 1 103
byte 1 111
byte 1 100
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 32
byte 1 79
byte 1 78
byte 1 10
byte 1 0
align 1
LABELV $256
byte 1 103
byte 1 111
byte 1 100
byte 1 109
byte 1 111
byte 1 100
byte 1 101
byte 1 32
byte 1 79
byte 1 70
byte 1 70
byte 1 10
byte 1 0
align 1
LABELV $244
byte 1 97
byte 1 115
byte 1 115
byte 1 105
byte 1 115
byte 1 116
byte 1 0
align 1
LABELV $241
byte 1 100
byte 1 101
byte 1 102
byte 1 101
byte 1 110
byte 1 100
byte 1 0
align 1
LABELV $238
byte 1 103
byte 1 97
byte 1 117
byte 1 110
byte 1 116
byte 1 108
byte 1 101
byte 1 116
byte 1 97
byte 1 119
byte 1 97
byte 1 114
byte 1 100
byte 1 0
align 1
LABELV $235
byte 1 105
byte 1 109
byte 1 112
byte 1 114
byte 1 101
byte 1 115
byte 1 115
byte 1 105
byte 1 118
byte 1 101
byte 1 0
align 1
LABELV $232
byte 1 101
byte 1 120
byte 1 99
byte 1 101
byte 1 108
byte 1 108
byte 1 101
byte 1 110
byte 1 116
byte 1 0
align 1
LABELV $226
byte 1 97
byte 1 114
byte 1 109
byte 1 111
byte 1 114
byte 1 0
align 1
LABELV $216
byte 1 97
byte 1 109
byte 1 109
byte 1 111
byte 1 0
align 1
LABELV $210
byte 1 119
byte 1 101
byte 1 97
byte 1 112
byte 1 111
byte 1 110
byte 1 115
byte 1 0
align 1
LABELV $204
byte 1 104
byte 1 101
byte 1 97
byte 1 108
byte 1 116
byte 1 104
byte 1 0
align 1
LABELV $201
byte 1 97
byte 1 108
byte 1 108
byte 1 0
align 1
LABELV $189
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 85
byte 1 115
byte 1 101
byte 1 114
byte 1 32
byte 1 37
byte 1 115
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 111
byte 1 110
byte 1 32
byte 1 116
byte 1 104
byte 1 101
byte 1 32
byte 1 115
byte 1 101
byte 1 114
byte 1 118
byte 1 101
byte 1 114
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $179
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 67
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 37
byte 1 105
byte 1 32
byte 1 105
byte 1 115
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 97
byte 1 99
byte 1 116
byte 1 105
byte 1 118
byte 1 101
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $176
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 66
byte 1 97
byte 1 100
byte 1 32
byte 1 99
byte 1 108
byte 1 105
byte 1 101
byte 1 110
byte 1 116
byte 1 32
byte 1 115
byte 1 108
byte 1 111
byte 1 116
byte 1 58
byte 1 32
byte 1 37
byte 1 105
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $168
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 89
byte 1 111
byte 1 117
byte 1 32
byte 1 109
byte 1 117
byte 1 115
byte 1 116
byte 1 32
byte 1 98
byte 1 101
byte 1 32
byte 1 97
byte 1 108
byte 1 105
byte 1 118
byte 1 101
byte 1 32
byte 1 116
byte 1 111
byte 1 32
byte 1 117
byte 1 115
byte 1 101
byte 1 32
byte 1 116
byte 1 104
byte 1 105
byte 1 115
byte 1 32
byte 1 99
byte 1 111
byte 1 109
byte 1 109
byte 1 97
byte 1 110
byte 1 100
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $165
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 67
byte 1 104
byte 1 101
byte 1 97
byte 1 116
byte 1 115
byte 1 32
byte 1 97
byte 1 114
byte 1 101
byte 1 32
byte 1 110
byte 1 111
byte 1 116
byte 1 32
byte 1 101
byte 1 110
byte 1 97
byte 1 98
byte 1 108
byte 1 101
byte 1 100
byte 1 32
byte 1 111
byte 1 110
byte 1 32
byte 1 116
byte 1 104
byte 1 105
byte 1 115
byte 1 32
byte 1 115
byte 1 101
byte 1 114
byte 1 118
byte 1 101
byte 1 114
byte 1 46
byte 1 10
byte 1 34
byte 1 0
align 1
LABELV $152
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 37
byte 1 115
byte 1 0
align 1
LABELV $151
byte 1 34
byte 1 10
byte 1 0
align 1
LABELV $148
byte 1 94
byte 1 51
byte 1 37
byte 1 100
byte 1 58
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 10
byte 1 0
align 1
LABELV $147
byte 1 94
byte 1 51
byte 1 37
byte 1 100
byte 1 58
byte 1 94
byte 1 55
byte 1 37
byte 1 115
byte 1 94
byte 1 51
byte 1 44
byte 1 32
byte 1 0
align 1
LABELV $136
byte 1 112
byte 1 114
byte 1 105
byte 1 110
byte 1 116
byte 1 32
byte 1 34
byte 1 94
byte 1 51
byte 1 77
byte 1 97
byte 1 112
byte 1 115
byte 1 58
byte 1 10
byte 1 94
byte 1 49
byte 1 61
byte 1 61
byte 1 61
byte 1 61
byte 1 61
byte 1 94
byte 1 55
byte 1 10
byte 1 0
align 1
LABELV $125
byte 1 98
byte 1 115
byte 1 112
byte 1 0
align 1
LABELV $124
byte 1 109
byte 1 97
byte 1 112
byte 1 115
byte 1 0
